PDF TEXT EXTRACTION
===================

File: config-webservices-api-reference-guide.pdf
Size: 1.45 MB

Total Pages: 252

--- PAGE 1 ---
Configuration Web
Services
Reference Guide
July 2025
Learn about the Configuration Web Services that enable
developers to build secure applications to access,
configure, and synchronize call center information with
workflow management systems, such as lead
management, CRM, and ERP systems.
Five9 and the Five9 logo are registered trademarks of Five9 and its
subsidiaries in the United States and other countries. Other marks and
brands may be claimed as the property of others. The product plans,
specifications, and descriptions herein are provided for information only and
subject to change without notice, and are provided without warranty of any
kind, express or implied. Copyright © 2025 Five9, Inc.

--- PAGE 2 ---
About Five9
Five9 is the leading provider of cloud contact center software, bringing the power of
the cloud to thousands of customers and facilitating more than three billion customer
interactions annually. Since 2001, Five9 has led the cloud revolution in contact
centers, delivering software to help organizations of every size transition from
premise-based software to the cloud. With its extensive expertise, technology, and
ecosystem of partners, Five9 delivers secure, reliable, scalable cloud contact center
software to help businesses create exceptional customer experiences, increase agent
productivity and deliver tangible results. For more information visit www.five9.com.
Trademarks
Five9®
Five9 Logo
Five9® SoCoCare™
Five9® Connect™
2 Configuration Web Services • Reference Guide

--- PAGE 3 ---
Contents
What’s New 13
About the Five9 Configuration Web Services API 14
Web Services Platform 15
Differences Among Versions 4, 3, 2, and Default 16
Basic Access Authentication 18
Data Types 19
dates and times 19
adminConfigTranslation 19
adminPermission 20
adminPermissionType 20
adminRole 21
agentAuditReportCriteria 22
agentAvailability 22
agentGroup 22
agentPermission 23
agentPermissionType 23
agentProductivity 28
agentRole 28
agentState 29
apiOperationType 30
autodialCampaign 30
baseOutboundcampaign 31
autodialCampaign 31
outboundCampaign 32
basicImportResult 39
crmImportResult 40
dispositionsImportResult 40
listImportResult 40
basicImportSettings 41
crmDeleteSettings 43
crmUpdateSettings 43
dispositionsUpdateSettings 43
listDeleteMode 44
listUpdateSettings 45
callCounterState 47
callNowMode 47
callAnalysisMode 48
callLogReportCriteria 48
callType 48
callVariable 49
callVariableRestriction 50
callVariableType 50
callVariablesGroup 51
3 Configuration Web Services • Reference Guide

--- PAGE 4 ---
callbackFormat 51
campaign 52
campaignCallWrapup 53
campaignDialNumber 53
campaignDialingAction 53
campaignDialingActionType 54
campaignDialingMode 54
campaignDialingOrder 55
campaignDialingSchedule 55
campaignFilterCriterion 56
campaignMode 57
campaignNumberSchedule 57
campaignProfileFilter 57
campaignProfileInfo 58
campaignState 59
campaignStateDialingRule 59
campaignStrategies 60
campaignStrategy 60
campaignStrategyFilter 61
campaignStrategyPeriod 62
campaignTimeZoneAssignment 62
campaignType 62
campaignsSettings 63
cannedReport 64
cavRestrictionType 64
compareOperatorType 65
contactField 65
contactFieldDisplay 66
contactFieldMapping 66
contactFieldRestriction 67
contactFieldRestrictionType 68
contactFieldType 68
contactsLookupResult 69
crmAddMode 69
crmManagerRole 70
crmManagerPermission 70
crmManagerPermissionType 70
crmCriteriaGrouping 71
crmCriteriaGroupingType 71
crmDeleteMode 71
crmDeleteSettings 72
crmFieldCriterion 72
crmImportResult 72
crmLookupCriteria 73
4 Configuration Web Services • Reference Guide

--- PAGE 5 ---
crmUpdateMode 73
crmUpdateSettings 73
cssTheme 74
customDispositionType 75
customReportCriteria 75
data 76
dateRange 76
dayOfWeek 76
dialSortOrder 77
dialingRule 77
disposition 78
dispositionCount 81
dispositionTypeParams 81
dispositionsImportResult 82
dispositionsUpdateMode 82
dispositionsUpdateSettings 82
distributionAlgorithm 82
distributionTimeFrame 83
emailNotifications 84
entry 84
extensionSettings 84
fieldEntry 85
ftpImportSettings 86
generalCampaign 86
i18NObjectField 86
i18NObjectType 87
importData 87
importIdentifier 87
importTrouble 88
importTroubleKind 88
inboundCampaign 89
inboundIvrScriptSchedule 89
ivrIcons 90
ivrScriptDef 90
ivrScriptOwnership 90
ivrScriptSchedule 91
keyPerfomanceIndicators 91
keyValuePair 91
language 92
limitTimeoutState 92
listAddMode 92
listDeleteSettings 93
listDialingMode 93
listInfo 94
5 Configuration Web Services • Reference Guide

--- PAGE 6 ---
listImportResult 94
listState 94
listUpdateSettings 95
listUpdateSimpleSettings 97
mediaType 98
mediaTypeConfig 98
mediaTypeItem 99
miscVccOptions 99
operationType 100
orderByField 100
outboundCampaign 101
passwordPolicies 101
passwordPolicyEntries 102
passwordPolicyEntryValue 103
promptInfo 103
promptType 103
reasonCode 104
reasonCodeType 104
record 105
recordData 105
remoteHostLoginSettings 105
reportObjectList 105
Example Usage 106
Explanation 106
reportRowData 107
reportTimeCriteria 107
reportingPermission 108
reportingPermissionType 108
reportingRole 109
sayAs 109
sayAsFormat 111
scriptParameterValue 112
sForceEmailAccount 112
skill 113
skillInfo 113
speedDialNumber 114
stateDialingRule 114
stateProvince 114
stringArray 117
supervisorPermission 117
supervisorPermissionType 117
supervisorRole 120
timePeriod 121
timeRange 121
6 Configuration Web Services • Reference Guide

--- PAGE 7 ---
timeZoneAssignment 121
timer 122
ttsInfo 122
userInfo 123
userGeneralInfo 123
userProfile 125
userRoleType 125
userRoles 125
userSkill 126
vccConfiguration 126
versions 128
visualModeSettings 128
webConnector 129
webConnectorAgentAppType 131
webConnectorCTIWebServicesType 132
webConnectorTriggerType 132
wrongListDialingMode 133
wsObjectType 133
xFrameOption 134
Methods 136
Agent Groups 136
createAgentGroup 136
deleteAgentGroup 137
getAgentGroup 137
getAgentGroups 137
modifyAgentGroup 138
Call Variables 138
createCallVariable 139
createCallVariablesGroup 139
deleteCallVariable 139
deleteCallVariablesGroupResponse 140
getCallVariableGroups 140
getCallVariables 140
modifyCallVariable 141
modifyCallVariablesGroup 141
Campaign Configuration 142
addDispositionsToCampaign 142
addDNISToCampaign 143
addListsToCampaign 143
addSkillsToCampaign 144
createAutodialCampaign 144
createInboundCampaign 145
createOutboundCampaign 145
7 Configuration Web Services • Reference Guide

--- PAGE 8 ---
deleteCampaign 146
getAutodialCampaign 146
getCampaigns 146
getCampaignDNISList 147
getDNISList 147
getInboundCampaign 148
getListsForCampaign 148
getOutboundCampaign 149
modifyCampaignLists 149
modifyAutodialCampaign 150
modifyInboundCampaign 150
modifyOutboundCampaign 150
removeDispositionsFromCampaign 151
removeDNISFromCampaign 151
removeDNISFromCampaignResponse 152
removeListsFromCampaign 152
removeListsFromCampaignResponse 152
removeSkillsFromCampaign 152
renameCampaign 152
setDefaultIVRSchedule 153
Campaign Management 153
asyncUpdateCampaignDispositions 154
forceStopCampaign 154
getCampaignState 155
getCampaignStrategies 155
getDispositionsImportResult 156
resetCampaign 156
resetCampaignDispositions 156
resetListPosition 157
setCampaignStrategies 157
startCampaign 158
stopCampaign 158
updateDispositions 159
updateDispositionsCsv 159
updateDispositionsFtp 160
Campaign Profiles 161
createCampaignProfile 161
deleteCampaignProfile 161
getCampaignProfileDispositions 161
getCampaignProfileFilter 162
getCampaignProfiles 162
modifyCampaignProfile 163
modifyCampaignProfileCrmCriteria 163
modifyCampaignProfileFilterOrder 164
8 Configuration Web Services • Reference Guide

--- PAGE 9 ---
modifyCampaignProfileDispositions 164
Connectors 165
createWebConnector 165
deleteWebConnector 165
getWebConnectors 166
modifyWebConnector 166
Contact Fields 166
createContactField 167
deleteContactField 167
getContactFields 167
modifyContactField 168
Contact Management 168
asyncUpdateCrmRecords 168
deleteFromContacts 169
deleteFromContactsCsv 170
deleteFromContactsFtp 171
getContactRecords 171
getCrmImportResult 172
updateContacts 172
updateContactsCsv 173
updateContactsFtp 173
updateCrmRecord 174
Dialing Rules 175
getDialingRules 175
setDialingRules 175
Disposition Configuration 176
createDisposition 176
getDisposition 176
getDispositions 176
modifyDisposition 177
removeDisposition 177
renameDisposition 178
Domain Limits 178
getCallCountersState 181
IVR Script 182
createIVRScript 182
deleteIVRScript 182
getIVRScripts 183
modifyIVRScript 183
setIvrScriptOwnership 183
getIvrScriptOwnership 184
removeIvrScriptOwnership 184
setIvrIcons 185
getIvrIcons 185
9 Configuration Web Services • Reference Guide

--- PAGE 10 ---
removeIvrIcons 186
List Management 186
addNumbersToDnc 186
addRecordToList 187
addRecordToListSimple 187
addToList 188
addToListCsv 189
addToListFtp 190
asyncAddRecordsToList 190
asyncDeleteRecordsFromList 191
checkDncForNumbers 192
createList 193
deleteAllFromList 193
deleteFromList 194
deleteFromListCsv 195
deleteFromListFtp 195
deleteList 196
deleteRecordFromList 197
getListImportResult 197
getListsInfo 198
isImportRunning 198
removeNumbersFromDnc 199
Locales and Languages 199
getAvailableLocales 199
getConfigurationTranslations 200
getLocale 200
setLocale 201
updateConfigurationTranslations 201
Prompt Management 202
addPromptTTS 202
addPromptWav 202
addPromptWavInline 203
deleteLanguagePrompt 203
deletePrompt 204
getPrompt 204
getPrompts 204
modifyPromptTTS 205
modifyPromptWav 205
modifyPromptWavInline 206
Reason Codes 206
createReasonCode 206
deleteReasonCode 206
deleteReasonCodeByType 207
getReasonCode 207
10 Configuration Web Services • Reference Guide

--- PAGE 11 ---
getReasonCodeByType 207
modifyReasonCode 208
Reports 208
getReportResult 209
getReportResultCsv 209
isReportRunning 210
runReport 211
Session Information 211
closeSession 211
Skill Management 212
addSkillAudioFile 212
createSkill 213
deleteSkill 213
getSkill 213
getSkillAudioFiles 214
getSkillInfo 214
getSkills 215
getSkillsInfo 215
getSkillVoicemailGreeting 215
modifySkill 216
removeSkillAudioFile 216
setSkillVoicemailGreeting 217
Speed Dial Information 217
createSpeedDialNumber 218
getSpeedDialNumbers 218
removeSpeedDialNumber 219
User Management 219
createUser 219
deleteUser 220
getUserGeneralInfo 220
getUserInfo 220
getUserVoicemailGreeting 220
getUsersGeneralInfo 221
getUsersInfo 221
modifyUser 222
modifyUserCannedReports 223
setUserVoicemailGreeting 223
userSkillAdd 224
userSkillModify 224
userSkillRemove 225
User Profiles 225
createUserProfile 226
deleteUserProfile 226
getUserProfile 226
11 Configuration Web Services • Reference Guide

--- PAGE 12 ---
getUserProfiles 227
modifyUserProfile 227
modifyUserProfileSkills 228
modifyUserProfileUserList 228
VCC Configuration 228
getApiVersions 229
getVCCConfiguration 229
modifyVCCConfiguration 229
Exceptions 231
Examples 244
XML Examples 244
addToListCsv 244
addRecordToList 245
asyncAddRecordsToList 247
deleteFromContacts 248
runReport 249
PHP Example 250
12 Configuration Web Services • Reference Guide

--- PAGE 13 ---
What’s New
Topic
Release Change
Web Services Platform
July 2025 Updated to include EU, UK, and Frankfurt based
locations.
reportObjectList
Added a usage example to reportObjectList .
Reports
April 2025 Added a note to indicate they are not suitable for
real-time data needs.
deleteUser
Added a note to indicate associated data deletes.
createInboundCampaign
Feb 2025 Added notes to the Create Inbound Campaign
method, the IVR Script Schedule data type, and the
getReportResultCsv
Get Report Result CSV method.
crmUpdateSettings
Oct 2024 Updated the crmUpdateMode parameter about the
UPDATE_ALL value.
Reports
Aug 2024 Updated the Report section to include: methods
runReport get*Report* will use your user's
configured locale.
listUpdateSettings
May 2024 Updated descriptions for c
dispositionsUpdateSettings
olumn numbers.
fieldEntry
Exceptions
Updated the DNISAlreadyAssignedFault
description.
updateContacts
Oct 2023 Added a note explaining the possibility of files
being deleted during the process of creating and
updating records.
getReportResult
Jul 2023 Added important note explaining that using the
getReportResultCsv method to return report data
provides the best results.
13 Configuration Web Services • Reference Guide

--- PAGE 14 ---
About the Five9 Configuration Web
Services API
The Five9 Configuration Web Services enable you to build secure applications to access,
configure, manage, and synchronize call center information with work flow-
management systems, such as lead management, CRM, and ERP systems.
This guide is intended for developers who understand these technologies and
protocols:
l
Client-server architecture and Web services
l
SOAP, HTTP, and XML
l
JSP, ASP, CGI, or Perl
l
Computer-telephony integration concepts, processes, events, and call routing
l
Overall call center integration and configuration
Note
Five9 Configuration Web Services uses the swaRef.xsd to include binary
content for types that are used to upload greetings in WAV format.
If you use Apache CXF, be aware that it does not support swaRef.xsd types.
Before the SOAP envelope, it inserts text for which Five9 returns this exception:
Exception=javax.xml.ws.soap.SOAPFaultException: org.xm-
l.sax.SAXParseException: Content is not allowed in prolog.
To prevent this issue, remove the SwaOutputInterceptor Apache CXF proxy
class. However, with this fix, you cannot use Five9 methods that uses the
swaRef types.
14 Configuration Web Services • Reference Guide

--- PAGE 15 ---
About the Five9 Configuration Web Services API
Web Services Platform
Web Services Platform
Your client sends Web service requests that are acknowledged by Five9 with a Web
services response. Your client needs to check periodically for the status and outcome of
the operations requested. The Web services API contains the XML-encoded SOAP
methods used to communicate with your client application.
Five9 recommends that you use the latest version. Previous versions are still supported
but are not recommended because they do not contain all the features.
Five9username is the user name of the administrator:
Note
In the rest of this guide, the features that apply to these versions are
highlighted. Release 13 supports SOAP web services but adds no new features.
Use the appropriate data center for your location:
US: api.five9.com
UK: api.five9.eu
Canada: api.five9.ca
Frankfurt: api.eu.five9.com
l
Version 13: https://api.five9.com/wsadmin/v13/
AdminWebService?wsdl&user= <Five9username>
l
Version 12: https://api.five9.com/wsadmin/v12/
AdminWebService?wsdl&user= <Five9username>
l
Version 11: https://api.five9.com/wsadmin/v11/
AdminWebService?wsdl&user= <Five9username>
l
Version 10.2: https://api.five9.com/wsadmin/v10_2/
AdminWebService?wsdl&user= <Five9username>
l
Version 10: https://api.five9.com/wsadmin/v10/
AdminWebService?wsdl&user= <Five9username>
15 Configuration Web Services • Reference Guide

--- PAGE 16 ---
About the Five9 Configuration Web Services API
Differences Among Versions 4, 3, 2, and Default
l
Version 9.5 : https://api.five9.com/wsadmin/v9_5/
AdminWebService?wsdl&user= <Five9username>
l
Version 9.3: https://api.five9.com/wsadmin/v9_3/
AdminWebService?wsdl&user= <Five9username>
l
Version 4: https://api.five9.com/wsadmin/v4/
AdminWebService?wsdl&user= <Five9username>
l
Version 3: https://api.five9.com/wsadmin/v3/
AdminWebService?wsdl&user= <Five9username>
l
Version 2: https://api.five9.com/wsadmin/v2/
AdminWebService?wsdl&user= <Five9username>
l
Default version (common to all versions):
https://api.five9.com/wsadmin/AdminWebService?wsdl&user=
<Five9username>
To ensure that connections are secure, send all requests by Transport Layer Security
protocol (HTTPS) or VPN (IPSec or SSH) to the URL for your version, for example:
https://api.five9.com/wsadmin[/ <version> ]/AdminWebService
Differences Among Versions 4, 3, 2, and Default
The differences between API versions 4, 3, 2, and the default are listed in this table.
Version Version 3 Version 2 Default
4
Data Types
adminPermissionType
Added Added
apiOperationType
Added
(VIVRCreateSession Version 3)
basicImportResult )Added
( importTroubles ,
keyFields Version 3 )
basicImportSettings Added Added
( countryCode ,
failOnFieldParseError )
16 Configuration Web Services • Reference Guide

--- PAGE 17 ---
About the Five9 Configuration Web Services API
Differences Among Versions 4, 3, 2, and Default
Version Version 3 Version 2 Default
4
campaignStrategies
New
campaignStrategy
New
campaignStrategyFilter
New
campaignStrategyPeriod
New
contactFieldRestriction Deleted Added
( isEnabled )
importTrouble
New
importTroubleKind
New
listDialingMode (chatEnabled,
Added
visualModeEnabled)
listDialingMode ( EXTENDED_ Added
STRATEGY )
listUpdateSimpleSettings Added New
( countryCode )
passwordPolicies ( entryValues ) Modified Added Modified
passwordPolicyEntries
Removed Added Removed
passwordPolicyEntryValue
Removed Added Removed
supervisorPermissionType Added
( CanViewTextDetailsTab
Version 3
, CanAccessShowFields
Version 3
)
Methods
addRecordToListSimple
New
createContactField
Modified Modified Modified
getCampaignStrategies
New
getContactFields
Modified Modified Modified
modifyContactField
Modified Modified Modified
setCampaignStrategies
New
setDefaultIVRSchedule Added
( isVisualModeEnabled Version 3
Version 3
17 Configuration Web Services • Reference Guide

--- PAGE 18 ---
About the Five9 Configuration Web Services API
Basic Access Authentication
Version Version 3 Version 2 Default
4
, isChatEnabled )
Exceptions
AddRecordToListFault
New
CommonCampaignFault New
Version 3
WrongListDialingModeFault
New
Basic Access Authentication
Your HTTPS requests must provide valid Five9 credentials for basic access
authentication, which is used by the Web services API to enforce access control.
The credentials included in the header should be those of an administrator. Five9
recommends that you create several administrator users reserved for the Web Services
if you plan to send multiple concurrent requests. Otherwise, if you try to use the same
user name and password for multiple concurrent requests, your requests are denied,
and you receive an exception. The administrator user must have the VCC Administrator
role. Be sure to set the appropriate permissions for each administrator.
With HTTP basic authentication, the user name and password are encoded in base 64.
In your client, construct your authorization header as follows:
1 Concatenate the user name and password, for example:
ExampleUsername:ExamplePassword
2 Encode the string in base 64, for example:
RXhhbXBsZVVzZXJOYW1lOkV4YW1wbGVQYXNzd29yZA==
3 In your client, include the Authorization header with the value Basic
<base64-encoded string >.
Example : Web services header with encoded user name and password.
POST https://api.five9.com/wsadmin/AdminWebService HTTP/1.1
Accept-Encoding: gzip,deflate
Content-Type: text/xml;charset=UTF-8
SOAPAction: ""
Authorization: Basic RXhhbXBsZVVzZXJOYW1lOkV4YW1wbGVQYXNzd29yZA==
18 Configuration Web Services • Reference Guide

--- PAGE 19 ---
Data Types
These data types are specific to the Five9 methods used in the requests and responses.
For information on primitive data types, refer to www.w3.org/TR/xmlschema-2/.
dates and times
Note
The time zone of a date and time field value passed in a record is determined by
the domain’s default time zone. However, to pass the date and time field only in
GMT/UTC, use this format: yyyy-mm-dd hh:mm:ss.sss GMT0
2019-06-30 16:00:00.000 GMT0
adminConfigTranslation
Version 9.5
Contains configuration translations for the locale..
Name Type Description
comment string
Comment about the configuration.
objectField i18NObjectField
Object field to be translated.
objectId long
Object ID.
objectType i18NObjectType
Object type to be translated.
value string
Object value.
19 Configuration Web Services • Reference Guide

--- PAGE 20 ---
Data Types
adminPermission
adminPermission
Contains the role of the administrator.
Name Type Description
type adminPermissionType
Permissions assigned to the administrator.
value boolean
Whether to assign the permission.
l
True : Assign the permission.
l
False : Do not assign the permission.
adminPermissionType
Contains the list of permissions assigned to an administrator.
Name Type Description
CanUseAdminSoapApi string
Can submit requests to the
Version 12
Admin SOAP API if the
following permissions are
enabled on the Administrator
application:
l
User Can Execute Web API
requests.
l
Corresponding permission.
For example, to edit
dispositions with the
Admin API, enable the
corresponding permission
User Can Edit Dispositions
on the Administrator
application.
FullPermissions string
Has all the administrator
permissions.
ManageUsers string
Can manage users.
ManageSkills string
Can manage skills.
20 Configuration Web Services • Reference Guide

--- PAGE 21 ---
Data Types
adminRole
Name Type Description
ManageAgentGroups string
Can manage agent groups.
ManageCampaignsStartStop string
Can start and stop a
campaign.
ManageCampaignsResetDispositions string
Can reset campaign
dispositions.
ManageCampaignsResetListPosition string
Can reset campaign list
position.
ManageCampaignsReset string
Can reset campaigns.
ManageCampaignsProperties string
Can manage campaign
properties.
ManageLists string
Can manage lists.
ManageCRM string
Can manage CRMs.
ManageDNC string
Can manage DNC lists.
EditIvr string
Can edit IVRs.
EditProfiles string
Can edit user profiles.
EditConnectors string
Can edit connectors.
EditDispositions string
Can edit dispositions.
EditPrompts string
Can edit prompts.
EditReasonCodes string
Can edit reason codes.
EditWorkflowRules string
Can edit work flow rules.
AccessConfigANI string
Can configure ANIs.
EditCallAttachedData string
Can edit call variables.
EditTrustedIPAddresses string
Can edit trusted IP addresses.
AccessBillingApplication string
Can enable the Billing Portal.
EditDomainEMailNotification string
Can edit email notifications
Version 9.5
for the domain.
EditCampaignEMailNotification string
Can edit email notifications
Version 9.5
for campaigns.
adminRole
Contains the role of the administrator.
21 Configuration Web Services • Reference Guide

--- PAGE 22 ---
Data Types
agentAuditReportCriteria
Name Type Description
permissions adminPermission
List of permissions assigned to the
[0..unbounded]
administrator.
agentAuditReportCriteria
No longer used. For report information, see runReport and its data types.
agentAvailability
Data type of autodial campaigns that enables the dialer to dial only when agents are
available to take calls. If you do not use this object, numbers are dialed continuously
whether or not agents are available. See baseOutboundcampaign .
Name Type Description
ReadyToReceiveCalls string
One or more agents are available,
ready, and not on call.
ReadyToReceiveCallsOrBusy string
One or more agents are logged in and
are either ready or busy taking or
finishing another call. Agents are not
considered busy if they are making a
manual call after having been on
break.
LoggedIn string
One or more agents are logged in,
regardless of their current status.
agentGroup
Contains the details of a single group of agents.
22 Configuration Web Services • Reference Guide

--- PAGE 23 ---
Data Types
agentPermission
Name Type Description
agents string [0..unbounded]
List of agents in the group.
description string
Description of the agent group.
id long
ID of the group.
name string
Name of the group.
agentPermission
Contains the permissions assigned to a user.
Name Type Description
type agentPermissionType
Information about the permissions that can be
assigned to an agent.
value boolean
Whether the agent is assigned the permission.
l
True : Agent assigned the permission.
l
False : Agent not assigned the permission
agentPermissionType
Contains all the permissions that can be assigned to an agent. This variable is a string.
Important
Agents who log into a PSTN station or forward calls between sessions
may incur high long-distance fees. Only give permission to the appro-
priate users.
Name Type Description
ReceiveTransfer
Can receive transfers from
other agents.
ProcessVoiceMail
Can process skill voicemail
23 Configuration Web Services • Reference Guide

--- PAGE 24 ---
Data Types
agentPermissionType
Name Type Description
messages.
DeleteVoiceMail
Can delete voicemail
messages.
TransferVoiceMail
Can transfer voicemail
messages to other users
and queues.
MakeRecordings
Can record calls or a
portion of a call.
SendMessages
Can send messages to
agents, administrators, and
supervisors.
CreateChatSessions
Can start chat sessions with
agents, administrators, and
supervisors.
TrainingMode
Can initiate and receive a
test call in the agent
desktop.
CannotRemoveCRM
Cannot delete contact
records. Five9 recommends
that you assign this
permission to all agents.
CannotEditSession
Cannot edit CRM session
notes.
CallForwarding
Can enable call forwarding.
AddingToDNC
Can add numbers to your
DNC list. Without this
permission, the Add to DNC
option in the agent desktop
is unavailable, but agents
can still use custom
dispositions that add
numbers to the DNC list.
DialManuallyDNC
Can manually dial the
numbers listed in the DNC
List. Without this
permission, agents see an
error message when they
24 Configuration Web Services • Reference Guide

--- PAGE 25 ---
Data Types
agentPermissionType
Name Type Description
dial a number in the DNC
list.
CreateCallbacks
Can create callback
reminders. Without this
permission, the Add
Callback button in the
agent desktop is disabled.
PlayAudioFiles
Can play prerecorded
messages while on call or
leave standard recorded
messages on answering
machines (Play Audio File
button). Without this
permission, the audio files
in the agent desktop are
hidden.
SkipCrmInPreviewDialMode
Can skip records In Preview
Dialing Mode. Disabled by
default.
ManageAvailabilityBySkill
Can select the skill groups
or ACD queues in which to
participate during the
active session.
BrowseWebInEmbeddedBrowser
Can use the browser to
open any URL from the
agent desktop.
ChangePreviewPreferences
Can control when and
where the preview window
is displayed.
CanWrapCall
Can end a call and assign a
disposition to it after
spending time in the Wrap-
Up state. Without this
permission, the agent can
end a call only by setting a
disposition.
CanPlaceCallOnHold
Can place calls on hold.
25 Configuration Web Services • Reference Guide

--- PAGE 26 ---
Data Types
agentPermissionType
Name Type Description
CanParkCall
Can park a call.
CanRejectCalls
When auto-answer is
disabled, the agent can
decline incoming calls
(typically inbound calls). To
use this permission, be
sure to enable
CanConfigureAutoAnswe
r .
CanConfigureAutoAnswer
Can choose whether to
auto-answer calls or be
prompted before accepting
a call. Enabled by default.
ScreenRecording string
Do not use.
string
RecycleDispositionAllowed
Enables agents to view and
Version 3
select the Recycle system
disposition.
string
MakeTransferToAgents
Can transfer calls to other
Version 3
agents.
MakeTransferToSkills string
Can transfer calls to skill
Version 3
groups.
MakeTransferToInboundCampaigns string
Can transfer calls to
Version 3
inbound campaigns.
MakeTransferToExternalCalls
Can transfer calls to
Version 3
external phone numbers.
CreateConferenceWithAgents
Can create a conference
Version 3
with other agents.
CreateConferenceWithSkills
Can create a conference by
Version 3
using skill groups.
CreateConferenceWithInboundCampaigns
Can create a conference
Version 3
with inbound campaigns.
CreateConferenceWithExternalCalls
Can create a conference
Version 3
with external call
participants.
MakeCallToAgents
Can call other agents.
Version 3
MakeCallToSkills
Can call skill groups.
26 Configuration Web Services • Reference Guide

--- PAGE 27 ---
Data Types
agentPermissionType
Name Type Description
Version 3
MakeCallToExternalCalls
Can make external calls.
Version 3
CanRunJavaClient
Can use the Java client of
Version 4
the Agent Desktop Plus
version.
CanRunWebClient
Can use the Web client of
Version 4
the Agent Desktop Plus
version.
CanViewMissedCalls
Can view and return
Version 9.3
missed personal calls.
MakeCallToSpeedDialNumber
Can call speed-dial
Version 9.5
numbers, including
external numbers.
CreateConferenceWithSpeedDialNumber
Can add speed-dial
Version 9.5
numbers to conference
calls, including external
numbers.
MakeTransferToSpeedDialNumber
Can transfer calls to speed-
Version 9.5
dial numbers, including
external numbers.
CanSelectDisplayLanguage
Can select a language in
Version 9.5
the softphone settings.
CanViewWebAnalytics
Can view and use web
Version 9.3
analytics.
CanTransferChatsToAgents
Can transfer chats to
Version 10
agents.
CanTransferChatsToSkills
Can transfer chats to
Version 10
queues.
CanTransferEmailsToAgents
Can transfer email
Version 10
messages to agents.
CanTransferEmailsToSkills
Can transfer emails to
Version 10
queues.
CanCreateChatConferenceWithAgents
Can create chat
Version 10
conferences with agents.
CanCreateChatConferenceWithSkills
Can create chat
27 Configuration Web Services • Reference Guide

--- PAGE 28 ---
Data Types
agentProductivity
Name Type Description
Version 10
conferences with queues.
CanTransferSocialsToAgents
Can transfer social
Version 10
interactions to agents.
CanTransferSocialsToSkills
Can transfer social
Version 10
interactions to queues.
agentProductivity
Contains the number of seconds used in reports to identify possible deviations from
the expected performance of agents.
Name Type Description
longACWTime int
Number of seconds spent performing work after a
call. The time is reported if is longer than this
setting.
longCallDuration int
Number of seconds spent on a call. The time is
reported if is longer than this setting.
longHoldDuration int
Number of seconds for a call placed on hold. The
time is reported if is longer than this setting.
longParkDuration int
Number of seconds for a call waiting in a queue. The
time is reported if is longer than this setting.
shortACWTime int
Number of seconds spent performing work after a
call. The time is reported if is shorter than this
setting.
shortCallDuration int
Number of seconds spent on a call. The time is
reported if it is shorter than this setting.
agentRole
Contains the attributes and permissions that can be assigned to an agent.
28 Configuration Web Services • Reference Guide

--- PAGE 29 ---
Data Types
agentState
Name Type Description
alwaysRecorded boolean
Whether the agent’s calls are recorded.
l
True : Agent’s calls are recorded.
l
False : Agent’s calls are not
recorded.
attachVmToEmail boolean
Whether the agent is allowed to attach
a voicemail message to an email
message.
l
True : Agent is allowed.
l
False : Agent is not allowed.
permissions agentPermission
List of permissions that can be assigned
[0..unbounded]
to an agent.
sendEmailOnVm boolean
Whether the agent is allowed to send
an email message as a follow-up to a
voicemail message.
l
True : Agent is allowed.
l
False : Agent is not allowed.
agentState
Removed from
Version 10
Contains the possible states for an agent.
Name Type Description
AVAILABLE_FOR_CALLS string
Available to take calls.
AVAILABLE_FOR_VMS string
Available to take voicemail messages.
LOGIN string
Logged in or logging in.
LOGOUT string
Logged out or logging out.
NOT_AVAILABLE_FOR_CALLS string
Not available to take calls.
NOT_AVAILABLE_FOR_VMS string
Not available to take voicemail messages.
29 Configuration Web Services • Reference Guide

--- PAGE 30 ---
Data Types
apiOperationType
Name Type Description
NOT_READY string
Not ready.
READY string
Ready.
VM_IN_PROGRESS string
Currently taking a voicemail message.
VM_NOT_AVAILABLE string
Voicemail not available.
WAITING string
Waiting.
apiOperationType
Contains the possible types of operation. QueryStatistics and
QueryChangedStatistics do not apply to the Configuration Web Services API
Name Type Examples
Query string
getListsInfo
Modify string
addSkillToCampaign
Upload string
createCampaign
SingleUpload string
addRecordToList
ReportRequest string
runReport
RetrieveReport string
getReportResult
AsynchronousUpload string
asyncAddRecordsToList
QueryStatistics string
getStatistics
QueryChangedStatistics string
getStatisticsUpdate
Web2CampaignUpload string
Not used.
VIVRCreateSession string
No specific method.
Version 3
autodialCampaign
Contains the attributes of an autodial campaign. autodialCampaign extends
baseOutboundCampaign .
30 Configuration Web Services • Reference Guide

--- PAGE 31 ---
Data Types
baseOutboundcampaign
Name Type Description
baseOutboundCampaign autodialCampaign
Attributes of an autodial
campaign.
baseOutboundcampaign
This section contains information about campaigns.
autodialCampaign
Contains information about autodial campaigns. It is used by
createAutodialResponse , getAutodialCampaignResponse , and
modifyAutodialCampaign
Name Type Examples
agentAvailability agentAvailability
Types of agent states
considered available. Autodial
campaigns dial only agents that
are available to process calls. If
omitted, the list is dialed
continuously regardless of agent
availability.
agentSkillName string
Numbers dialed only if agents
with the specified skill are
available. If empty when
dialIfAgentsAvailable=Tru
e , agent availability is for any
skill.
When
modifyAutodialCampaign
specifies
agentSkillName=null , the
value remains.
defaultIvrSchedule ivrScriptSchedule
Schedule of the IVR script that
processes call flow. Required for
31 Configuration Web Services • Reference Guide

--- PAGE 32 ---
Data Types
baseOutboundcampaign
Name Type Examples
inbound and autodial calls.
dialIfAgentsAvailable boolean
Whether to dial numbers only if
agents with agentSkillName
are available.
l
True: Dial only if agents are
available in the skill group.
l
False: Dial regardless of
agent availability in the skill
group.
maxNumOfLines int
Maximum number of outbound
phone lines dedicated to the
campaign.
outboundCampaign
Contains information about outbound campaigns. All data types used by
createOutboundCampaign are listed below. Depending on the campaign mode and
your goal, you can use these flags as follows:
Goal
limitPreview dialNumberOn previewDial
Time Timeout Immediately
Unlimited preview time false false
Limited preview time true false
Dial number true true false
Set agent to not ready true false false
Dial immediately true
This figure shows the relationship between the groups of elements.
32 Configuration Web Services • Reference Guide

--- PAGE 33 ---
Data Types
baseOutboundcampaign
Name Type Description
actionOnAnswerMachine campaignDialingAction
Action to take when
the answering
machine is detected.
actionOnQueueExpiration campaignDialingAction
Action to take when
the maximum queue
time expires, which
occurs when no
agent is available to
take a call.
callAnalysisMode callAnalysisMode
Types of attempts
when a call is
answered.
callsAgentRatio double
For campaigns in the
power mode, count
33 Configuration Web Services • Reference Guide

--- PAGE 34 ---
Data Types
baseOutboundcampaign
Name Type Description
of phone numbers
dialed for an agent
ready for a new call.
dialNumberOnTimeout boolean
For campaigns in the
preview mode, use
as follows:
l
True: Dial number
when preview
time expires.
l
False: Set agent
to Not Ready
state.
dialingMode campaignDialingMode
Types of dialing
modes.
dialingPriority int
Method to set the
Version 9.5
dialing priority of the
running outbound
campaign by
assigning a priority
to each campaign.
The default for all
campaigns is 3; the
range is 1 to 99.
To enable this
feature, see
campaignsSetting
s .
dialingRatio int
Method to set the
Version 9.5
dialing priority of the
running outbound
campaign by using a
ratio (1 to 99). The
default is 50.
To enable this
feature, see
campaignsSetting
s .
distributionAlgorithm distributionAlgorithm
Method used by the
ACD to transfer calls
34 Configuration Web Services • Reference Guide

--- PAGE 35 ---
Data Types
baseOutboundcampaign
Name Type Description
to agents.
distributionTimeFrame distributionTimeFrame
Time intervals used
by
distributionAlgorith
m.
limitPreviewTime boolean
For campaigns in the
preview mode, use
as follows:
l
True: Dial contact
number after
maxPreviewTime.
l
False: Allow
agents to preview
the contact
number for an
unlimited time.
maxDroppedCallsPercentage float
Maximum allowed
percentage of
dropped calls. Use
when
monitorDroppedCa
lls is set to true.
maxPreviewTime timer
Duration until
expiration of the
preview time.
maxQueueTime timer
Maximum time
allowed for calls in a
queue.
monitorDroppedCalls boolean
Whether to keep
track of the dropped
call percentage of
the campaign.
l
True: Keep track
of the dropped
calls for the last
30 days or since
the last reset.
l
False: Do not
35 Configuration Web Services • Reference Guide

--- PAGE 36 ---
Data Types
baseOutboundcampaign
Name Type Description
keep track of the
dropped calls.
previewDialImmediately boolean
For outbound
campaigns in
preview mode, use
as follows:
l
True:
Automatically dial
the number
without waiting
for an action from
the agent.
l
False: Do not dial
the number
automatically.
useTelemarketingMaxQueTim boolean
Whether to enable
eEq1
maximum queue
Version 9.5
time for
telemarketing in
campaigns to one
second.
generalCampaign
analyzeLevel int
Voice detection level
for an answering
machine. The values
range from 0 (fast
detection) to 11
(accurate detection).
CRMRedialTimeout timer
Minimum time
before redialing a
contact record after
all numbers for the
contact record have
been dialed or
skipped. The default
is 10 minutes.
dnisAsAni boolean
When transferring
calls to third parties,
36 Configuration Web Services • Reference Guide

--- PAGE 37 ---
Data Types
baseOutboundcampaign
Name Type Description
whether to override
the default DNIS of
the domain by using
the contact’s phone
number (ANI) as the
DNIS (caller ID).
l
True: Override
the default DNIS.
l
False: Do not
override the
default DNIS.
enableListDialingRatios boolean
Whether to use list
dialing ratios, which
enable multiple lists
to be dialed at
specified
frequencies.
l
True: Enable
dialing ratios.
l
False: Do not
enable dialing
ratios.
listDialingMode listDialingMode
Describes the list
dialing mode.
noOutOfNumbersAlert boolean
When an outbound
campaign runs out
of numbers to dial,
whether to turn off
notification
messages to
administrators and
supervisors that the
campaign is no
longer dialing
because the lists are
complete.
l
True: Turn off
notification
37 Configuration Web Services • Reference Guide

--- PAGE 38 ---
Data Types
baseOutboundcampaign
Name Type Description
messages.
l
False: Do not turn
off notification
messages.
stateDialingRule campaignStateDialingRul
How dialing rule
e
Version 9.5
options are used in
the campaign.
timeZoneAssignment campaignTimeZoneAssignm
How time zone are
ent
Version 9.5
assigned the
campaign.
campaign
autoRecord boolean
Whether to record
all calls of the
campaign.
l
True: Record all
calls.
l
False: Do not
record all calls.
callWrapup campaignCallWrapup
Details for the work
time after the call.
ftpHost string
Host name of the
FTP server.
ftpPassword string
Password of the FTP
server.
ftpUser string
User name for the
FTP server.
recordingNameAsSid boolean
For FTP transfer,
whether to use the
session ID as the
recording name.
l
True: Use the
session ID as
recording name.
l
False: Do not use
the session ID as
recording name.
38 Configuration Web Services • Reference Guide

--- PAGE 39 ---
Data Types
basicImportResult
Name Type Description
useFtp boolean
Whether to use FTP
to transfer
recordings.
l
True: Use FTP to
transfer
recordings
l
False: Do not use
FTP to transfer
recordings.
basicImportResult
Contains information about rejected records.
Name Type Description
failureMessage string
Description of the error sent to
your email address or in the
newly added callback messages.
importIdentifier string
Identifier used to check the
Version 9.5
status and outcome of a data
import operation.
importTroubles importTrouble
Reason for the rejection.
Version 3
keyFields string
Set of fields marked as keys that
Version 3
define the rejected record.
success boolean
Whether the request was
Version 9.5
successful.
uploadDuplicatesCount long
Number of duplicate contact
records inserted.
uploadErrorsCount long
Number of errors in the updated
contact records.
warningsCount entry
Number of warnings associated
[0..unbounded]
with the imported data.
In addition, these data types use basicImportRresult :
39 Configuration Web Services • Reference Guide

--- PAGE 40 ---
Data Types
basicImportResult
This figure shows the relationship between the data types.
crmImportResult
Contains the results of an import transaction.
Name Type Description
crmRecordsDeleted long
Number of deleted contact records.
crmRecordsInserted long
Number of inserted contact records.
crmRecordsUpdated long
Number of updated contact records.
dispositionsImportResult
Contains the information returned by a dispositions update transaction.
dispositionsImportResult extends dispositionsImportResult .
Name Type Description
dispRecordsUpdated long
Number of updated disposition records.
listImportResult
Contains information about the imported contact records. listImportResult extends
basicImportResult .
Name Type Description
callNowQueued long
Record in the queue ready to be dialed.
40 Configuration Web Services • Reference Guide

--- PAGE 41 ---
Data Types
basicImportSettings
Name Type Description
Value is 0 or 1.
crmRecordsInserted long
Number of inserted contact records.
crmRecordsUpdated long
Number of updated contact records.
listName string
Name of list into which data was
imported.
listRecordsDeleted long
Number of deleted list records.
listRecordsInserted long
Number of inserted list records.
recordDispositionsReset long
Number of reset records.
Version 9.5
basicImportSettings
Contains the settings for updating all lists and contacts.
Name Type Description
allowDataCleanup boolean
Whether to remove duplicate
entries from a list.
l
True: Remove duplicate entries.
l
False: Ignore duplicate entries.
callbackFormat callbackFormat
File format of the HTTP callback
Version 9.5
message.
callbackUrl string
URL of the callback passed in the
Version 9.5
batch method.
countryCode string
Two-letter codes defined in ISO
countryCode
3166-1.
Version 4
failOnFieldParseError boolean
Whether to stop the import if
Version 3
incorrect data is found:
l
True: The record is rejected when
at least one field fails validation.
l
False: Default. The record is
accepted. However, changes to
41 Configuration Web Services • Reference Guide

--- PAGE 42 ---
Data Types
basicImportSettings
Name Type Description
the fields that fail validation are
rejected.
fieldsMapping fieldEntry
Mapping of the column number to
[1..unbounded]
the field name in the contact
database.
For listUpdateSettings , the
column number starts at 1, whereas
for listUpdateSimpleSettings ,
the column number starts at 0.
reportEmail string
Notification about import results is
sent to the email addresses that you
set for your application. See also
basicImportResult .
The following methods ignore the
value of reportEmail :
l
addRecordToList
l
addRecordToListSimple
l
deleteRecordFromList
l
updateCrmRecord
l
asyncAddRecordsToList
l
asyncDeleteRecordsFromList
l
asyncUpdateCrmRecords
l
asyncUpdateCampaignDispositio
ns
separator string
Any ASCII character, such as a
comma, used to separate entries in
a list.
skipHeaderLine boolean
Whether to omit the top row that
contains the names of the fields.
l
True: Omit the top row.
l
False: Include the top row.
These data types use basicImportSettings :
This figure shows the relationship between the data types.
42 Configuration Web Services • Reference Guide

--- PAGE 43 ---
Data Types
basicImportSettings
crmDeleteSettings
Contains deletion settings.
Name Type Description
crmDeleteMode crmDeleteMode
Information about the deletion settings.
crmUpdateSettings
Contains the CRM update settings.
Name Type Description
crmAddMode crmAddMode
Describes how to add a contact record.
crmUpdateMode crmUpdateMode
Describes how to update a contact record.
dispositionsUpdateSettings
Contains the disposition update settings.
Name Type Description
commonDispositionValue string
Disposition value when the
same disposition is
assigned to all records in
the list.
dispositionColumnNumber int
Column number for the
disposition value of a
record. The column is
created when not assigning
the same disposition for all
43 Configuration Web Services • Reference Guide

--- PAGE 44 ---
Data Types
basicImportSettings
Name Type Description
records in the list.
Column numbers with a
range of [1, 256] for the
disposition value of a
record. The column is
created when not assigning
the same disposition for all
records in the list.
dispositionsUpdateMode dispositionsUpdateMo
Describes how dispositions
de
are updated.
updateToCommonDispositi boolean
For all records, whether to
on
use the disposition value
specified in
commonDispositionValu
e .
l
True: Use
commonDispositionVa
lue .
l
False: Do not use
commonDispositionVa
lue .
warnIfNoCrmMatchFound boolean
Whether to add a warning
in the import transaction
report when records do not
match a CRM record.
l
True: Warn when no
CRM match exists.
l
False: Do not warn
when no CRM match
exists.
listDeleteMode
Contains the options for deleting records from a list.
Name Type Description
DELETE_ALL string
Delete all records. Does not apply to single record
44 Configuration Web Services • Reference Guide

--- PAGE 45 ---
Data Types
basicImportSettings
Name Type Description
transactions, such as with the de leteRecordFromList
method.
DELETE_IF_ string
Delete only if a single match is found in the database.
SOLE_CRM_
MATCH
DELETE_ string
Delete all records except the first matched record.
EXCEPT_FIRST
listUpdateSettings
Contains the list update settings.
Name Type Description
callNowColumnNumber int
Column number, starting with 1.
If a record should be dialed
immediately, the content of the
column is 1, T, Y, and Yes. This
column is not included in the
fieldsMapping parameter and is
not imported in the contact
database.
If callNowMode is also specified,
only records that have a true value
and apply to callNowMode are
called immediately.
If you do not want to add a column
for each imported record, use
callNowMode singly.
callNowMode callNowMode
Whether records are dialed
immediately.
If callNowColumnNumber is also
specified, callNowMode applies to
all records with a true value in the
specified column.
If callNowColumnNumber is
omitted, the callNowMode applies
to all records imported by the
45 Configuration Web Services • Reference Guide

--- PAGE 46 ---
Data Types
basicImportSettings
Name Type Description
request.
callTime long
When to dial the records (Epoch
time in milliseconds); applies to all
records in the request, except for
those with a value in the
timeToCallColumn; does not apply
to the addToList method, which is
used to process batch record
transactions.
The call time value is applied only
if the campaign exists when the
record is added to the list assigned
to that campaign. However, if a
campaign is created or associated
with a list after the record is added
to the list, calls may be dialed
sooner than the specified value,
depending on the size of the list,
the position of the record in the
list, and the other parameters
assigned to the list in the
campaign.
callTimeColumnNumber int
Column that contains the times
(Epoch time) to call individual
records. If a record contains a valid
time, this time is used instead of
the callTime parameter. Does
not apply to the addToList
method, which is used to process
batch record transactions.
cleanListBeforeUpdate boolean
Whether all records in the list
should be removed before adding
new records.
l
True: Remove records before
adding new ones.
l
False: Do not remove records
before adding new ones.
crmAddMode crmAddMode
Whether contact records should
be added when a new record is
46 Configuration Web Services • Reference Guide

--- PAGE 47 ---
Data Types
callCounterState
Name Type Description
inserted into a dialing list.
crmUpdateMode crmUpdateMode
Whether contact records should
be updated when a record is
added to a dialing list.
listAddMode listAddMode
Describes how to update the list.
callCounterState
Contains the maximum number and count of requests sent for a specific operation type
in a specific time period.
Name Type Description
limit long
Limit of the operation.
operationType apiOperationType
Type of operation.
value long
Number of requests already sent in that
time interval.
callNowMode
Contains the records that are dialed immediately.
Name Type Description
NONE string
Default. No records are dialed immediately.
NEW_CRM_ONLY string
Newly created CRM records are dialed immediately.
NEW_LIST_ string
New list records are dialed immediately even if the
ONLY
corresponding CRM records existed before the import.
ANY string
All imported records are dialed immediately.
47 Configuration Web Services • Reference Guide

--- PAGE 48 ---
Data Types
callAnalysisMode
callAnalysisMode
Contains the types of attempts when a call is answered.
Name Type Description
NO_ANALYSIS string
No detection is attempted.
FAX_ONLY string
Fax detection is attempted.
FAX_AND_ANSWERING_ string
Fax and answering machine detection are
MACHINE
attempted.
callLogReportCriteria
No longer used. For report information, see runReport and its data types.
callType
Removed from
Version 10
Contains the options used in reports to qualify calls or parts of calls.
Name Type Description
AGENT string
Call dialed manually by an agent.
AUTODIAL string
Call in an autodial campaign.
INBOUND string
Call in an inbound campaign.
INBOUND_VOICEMAIL string
Voicemail in an inbound campaign.
INTERNAL string
Call made in your Five9 domain.
INTERNAL_ string
Voicemail made within your Five9 domain.
VOICEMAIL
48 Configuration Web Services • Reference Guide

--- PAGE 49 ---
Data Types
callVariable
Name Type Description
OUTBOUND string
Call in an outbound campaign.
OUTBOUND_PREVIEW string
Call in preview mode made in an outbound
campaign.
OUTBOUND_ string
Voicemail made in an outbound campaign.
VOICEMAIL
TEST string
Test call.
callVariable
Contains the details of a call variable.
Name Type Description
applyToAllDispositions boolean
Whether to use the
variable for all
dispositions.
l
True: Use the variable
for all dispositions.
l
False: Do not use the
variable for all
dispositions.
defaultValue string
Optional value that may
be assigned to a call
variable. Some data types
( callVariableType ) can
have a default value.
description string
Description of the
variable.
dispositions string
If
[0..unbounded]
applyToAllDispositio
ns is False, this parameter
lists the names of the
dispositions for which to
set this variable.
group string
Group name of the call
49 Configuration Web Services • Reference Guide

--- PAGE 50 ---
Data Types
callVariableRestriction
Name Type Description
variable.
name string
Name of the call variable.
reporting boolean
Whether to add the
values to reports:
l
True: Variables are
added to reports.
l
False: Default.
Variables are not
added to reports.
restrictions callVariableRestriction
Possible values of the
[0..unbounded]
variable.
sensitiveData boolean
Whether the variable
Version 9.5
contains personal data
that identifies the
customer.
type callVariableType
One of the available types
of call variables.
callVariableRestriction
Contains the restriction values of a call variable.
Name Type Description
type cavRestrictionType
One of the available restrictions.
value string
Value by which to limit the variable.
callVariableType
Contains the possible data types of a call variable.
50 Configuration Web Services • Reference Guide

--- PAGE 51 ---
Data Types
callVariablesGroup
Name Type Description
STRING string
Letters and numbers.
NUMBER string
Numbers only.
DATE string
Date only.
TIME string
Time only.
DATE_TIME string
Date and time.
CURRENCY string
Currency.
BOOLEAN string
True or false.
PERCENT string
Percentage.
EMAIL string
Email address.
URL string
URL.
PHONE string
Phone number.
TIME_PERIOD string
Time interval.
callVariablesGroup
Contains a group of call variables.
Name Type Description
description string
Description of the group.
name string
Name of the group.
variables callVariable [0..unbounded]
List of call variable objects.
callbackFormat
Version 9.5
Contains the file format of the HTTP callback message in the HTTP Content-Type
header. For asynchronous batch methods, the HTTP callback request enables the API
client to provide the URL for the API server to post the list update results after
processing is completed.
51 Configuration Web Services • Reference Guide

--- PAGE 52 ---
Data Types
campaign
l
addToList
l
deleteFromList
l
addToListCsv
l
deleteFromListCsv
l
addToListFtp
l
deleteFromListFtp
l
asyncAddRecordsToList
l
updateContacts
l
asyncDeleteRecordsFromList
l
updateContactsCsv
l
asyncUpdateCrmRecords
l
updateContactsFtp
l
deleteAllFromList
l
updateDispositions
l
deleteFromContacts
l
updateDispositionsCsv
l
deleteFromContactsCsv
l
updateDispositionsFtp
l
deleteFromContactsFtp
Name Type Description
string
Possible values:
l
XML: text/xml;charset=UTF-8
l
JSON: application/json
campaign
Contains the campaign attributes returned by getCampaignsResponse.
Name Type Description
description string
Description of the campaign.
mode campaignMode
Campaign mode.
name string
Name of the campaign.
profileName string
Campaign profile name. Applies only to the
advanced campaign mode.
state campaignState
Current state of the campaign.
trainingMode boolean
Whether the campaign is in training mode.
l
True: Campaign in training mode.
l
False: Campaign not in training mode.
type campaignType
Category of campaign.
52 Configuration Web Services • Reference Guide

--- PAGE 53 ---
Data Types
campaignCallWrapup
campaignCallWrapup
Contains the details for the work time after the end of a call.
Name Type Description
agentNotReady boolean
Whether to automatically place agents who reach a
call timeout in a Not Ready state.
l
True: Set agents to Not Ready state.
l
False: Do not set agents to Not Ready state.
dispostionName string
Name of disposition automatically set for the call if
Note spelling.
the timeout is reached.
enabled boolean
Whether to limit the wrap-up time of agents.
l
True: Limit the wrap-up time.
l
False: Do not limit the wrap-up time.
reasonCodeName string
Not Ready reason code for agents who are
automatically placed in Not Ready state after
reaching the timeout.
timeout timer
Time limit for agents in wrap-up mode.
campaignDialNumber
Contains the types of numbers associated with a campaign.
Name Type Description
Primary string
Primary contact number.
Alt1 string
First alternate contact number.
Alt2 string
Second alternate contact number.
campaignDialingAction
Contains the possible actions to take after dialing a number.
53 Configuration Web Services • Reference Guide

--- PAGE 54 ---
Data Types
campaignDialingActionType
Name Type Description
actionArgument string
Name of prompt or IVR
script to execute when a
campaign-related event
occurs. It is ignored when
action type is DROP_CALL.
actionType campaignDialingActionType
Action to take when a
specific event occurs.
maxWaitTime timer
Maximum waiting time for
action on answering
machine.
campaignDialingActionType
Contains the types of dialing actions.
Name Type Description
DROP_CALL string
Drop the call.
PLAY_PROMPT string
Play a prompt.
START_IVR_SCRIPT string
Start an IVR script.
campaignDialingMode
Contains the possible dialing modes.
Name Type Description
PREDICTIVE string
Depending on campaign statistics, dials at a variable
calls-to-agent ratio. For maximum agent use, predicts
agent availability to begin dialing calls before an agent
becomes ready for calls.
PROGRESSIVE string
Depending on campaign statistics, dials at a variable
calls-to-agent ratio when an agent becomes available.
54 Configuration Web Services • Reference Guide

--- PAGE 55 ---
Data Types
campaignDialingOrder
Name Type Description
TCPA string
Enables the agent to review the contact details before
PREVIEW
dialing or skipping the record.
To use the Preview-Only Manual-Dialing mode (for
outbound campaigns only), you must set
limitPreviewTime=True and
dialNumberOnTimeout=False . For more information
on setting related flags, see outboundCampaign .
Note: For domains enabled for TCPA, only this
dialing mode is allowed.
POWER string
Dials at a fixed calls-to-agent ratio (1-to-1 or higher)
when an agent becomes available.
campaignDialingOrder
Contains the dialing order of phone numbers when contact records have multiple
phone numbers.
Name Type Description
PrimaryAlt1Alt2 string
Primary > first alternate > second alternate.
PrimaryAlt2Alt1 string
Primary > second alternate > first alternate.
Alt1PrimaryAlt2 string
First alternate > primary > second alternate.
Alt1Alt2Primary string
First alternate > second alternate > primary.
Alt2PrimaryAlt1 string
Second alternate > primary > first alternate.
Alt2Alt1Primary string
Second alternate > first alternate > primary.
campaignDialingSchedule
Contains the dialing configurations for a campaign profile.
55 Configuration Web Services • Reference Guide

--- PAGE 56 ---
Data Types
campaignFilterCriterion
Name Type Description
dialASAPSortOrder dialSortOrder
Order for dialing
numbers in the ASAP
queue.
dialASAPTimeout int
Duration before
records that are not
dialed are removed
from the ASAP queue
and are treated as
normal records.
dialASAPTimeoutPeriod timePeriod
Unit that specifies the
dial ASAP time-out.
dialingOrder campaignDialingOrder
Dialing order when
contact records have
multiple phone
numbers.
dialingSchedules campaignNumberSchedule
Time ranges used to
[0..unbounded]
call each of the three
possible number
associated with a
campaign.
includeNumbers campaignDialNumber
Whether to call each of
[0..unbounded]
the three numbers in
the campaign
associated with the
profile.
campaignFilterCriterion
Contains the criterion by which to filter records in the dialer.
Name Type Description
compareOperator compareOperatorType
Comparison between the contact
field (left value) and the value
(right value).
leftValue string
Contact field or variable to use as
filter.
rightValue string
Value to use as filter.
56 Configuration Web Services • Reference Guide

--- PAGE 57 ---
Data Types
campaignMode
campaignMode
Contains the options for a campaign.
Name Type Description
BASIC string
Campaign with default settings, without a campaign profile.
ADVANCED string
Campaign with a campaign profile specified in the
profileName parameter.
campaignNumberSchedule
Contains the time ranges applied to a number associated with a record.
Name Type Description
number campaignDialNumber
Which numbers associated with a record to
consider.
startTime timer
When, in local time, to start dialing
numbers for an outbound campaign.
stopTime timer
When to stop dialing numbers.
campaignProfileFilter
Contains the configurations for the campaign profile filter.
Name Type Description
crmCriteria campaignFilterCriterion
Filter criteria for the records.
[0..unbounded]
grouping crmCriteriaGrouping
Configuration for the criteria of
the filter group.
orderByFields orderByField
Sorting order for the records in
[0..unbounded]
the dialer.
57 Configuration Web Services • Reference Guide

--- PAGE 58 ---
Data Types
campaignProfileInfo
campaignProfileInfo
Contains the details of a campaign profile.
Name Type Description
ANI string
ANI to send with
outbound call.
description string
Description of the
profile.
dialingSchedule campaignDialingSchedule
Order and time for
dialing the numbers in a
record.
dialingTimeout int
Time to wait before
disconnecting an
unanswered call and
logging it as No Answer.
The default is 17
seconds.
initialCallPriority int
Priority initially assigned
to inbound and
outbound calls on a
scale of 1 to 100.
Inbound calls have a
default priority of 60.
Calls with a higher
priority are answered
first, regardless of their
time in a queue. To force
calls from a campaign to
be answered before
those from other
campaigns, increase the
priority by 1.
maxCharges int
Applies to inbound and
outbound calls.
Maximum dollar amount
for long distance
charges. The campaign
stops automatically
58 Configuration Web Services • Reference Guide

--- PAGE 59 ---
Data Types
campaignState
Name Type Description
when this amount is
reached. Zero means no
limit.
name string
Name of campaign
profile.
numberOfAttempts int
For outbound
campaigns, number of
dialing attempts for
phone numbers in a list
record, including redials
due to disposition
settings.
campaignState
Contains the possible states of a campaign.
Name Type Description
NOT_RUNNING string
Campaign not currently active.
STARTING string
Campaign being initialized.
RUNNING string
Campaign currently active.
STOPPING string
Campaign currently stopping.
RESETTING string
Temporary state of an outbound campaign that is
returning to its initial state. All dialing results of the
outbound campaign are cleared so that all records can be
redialed.
campaignStateDialingRule
Version 9.5
59 Configuration Web Services • Reference Guide

--- PAGE 60 ---
Data Types
campaignStrategies
Contains the possible dialing rule methods for finding the allowed dialing days and
hours.
Name Type Description
string
Possible values:
l
FOLLOW_STATE_RESTRICTIONS : Follow state restrictions.
l
INHERIT_DOMAIN_SETTINGS : Use domain settings.
l
REGION : Use the dialing rules of the contact’s state.
l
REGION_THEN_PHONE_NUMBER : Initially, use the dialing rules of
the contact’s state. Afterward, search by using the phone
number (area code and prefix).
l
REGION_THEN_POSTCODE : Initially, use the dialing rules of the
contact’s state. Afterward, search by using postal code.
campaignStrategies
Version 4
Contains a list of campaign strategies. For each campaign, you can create up to 20
strategies, and you can use up to 20 active strategies concurrently.
Name Type Description
strategies campaignStrategy
List of all strategies in your
[0..unbounded]
domain.
campaignStrategy
Version 4
Contains information about a campaign strategy. A strategy is a set of rules that
enables you to set dialing patterns for processing dialing lists.
60 Configuration Web Services • Reference Guide

--- PAGE 61 ---
Data Types
campaignStrategyFilter
Name Type Description
description string
Optional description of the
strategy.
enabled boolean
Whether the strategy is
active. At least one
strategy, named Default,
must be active.
filter campaignStrategyFilter
Conditions that apply to a
strategy.
name string
Required name of the
strategy. However, you can
modify the name at any
time.
schedule campaignStrategyPeriod
Dialing pattern for the
[..unbounded]
strategy.
startAfterTimeMins long
Start time (HH:MM) for the
strategy. The strategy can
start as soon as the dialing
list is ready. If you leave
this field blank, the dialer
starts to dial immediately.
campaignStrategyFilter
Version 4
Contains the conditions that apply to a strategy.
Name Type Description
conditionGroupingType crmCriteriaGroupingType
Types of filters that
you can apply.
conditions campaignFilterCriterion
List of criteria used by
[..unbounded]
the dialer to filter
records.
customGrouping string
Custom type of group.
61 Configuration Web Services • Reference Guide

--- PAGE 62 ---
Data Types
campaignStrategyPeriod
campaignStrategyPeriod
Version 4
Contains the dialing pattern for the strategy.
Name Type Description
redialAfterMins long
Number of minutes for the dialer to wait before
redialing a number.
startFromDay long
Day of the week to start the strategy.
campaignTimeZoneAssignment
Version 9.5
Contains the possible methods for finding the contact’s time zone.
Name Type Description
string
Possible values:
l
INHERIT_DOMAIN_SETTINGS : Use domain settings.
l
PHONE_NUMBER : Search for the time zone by using the phone
number (area code and prefix).
l
POSTCODE_THEN_PHONE_NUMBER : Initially, search for the time
zone by using the postal code. Afterward, search by using the
phone number (area code and prefix).
l
REGION_THEN_PHONE_NUMBER : Initially, search for the time
zone by using the state. Afterward, search by using the phone
number (area code and prefix).
campaignType
Contains the types of campaigns.
62 Configuration Web Services • Reference Guide

--- PAGE 63 ---
Data Types
campaignsSettings
Name Type Description
OUTBOUND string
Calls made by a dialer to customers in lists created by
administrators. These calls are passed to agents who
process the calls.
AUTODIAL string
Numbers are dialed automatically to phone numbers in a
list. The campaign uses call-progress detection to determine
whether the call was received by an answering machine or a
person.
INBOUND string
Calls received from customers originate from a DNIS. The
calls are processed according to the rules set in the IVR
Script of the campaign.
campaignsSettings
Version 9.5
Contains information about domain settings for running outbound campaigns.
Name Type Description
gracefulAgentStateTransitionDelay int
Domain setting:
Number of seconds
between the
agents’ action and
the effective
change of the
agents’ state to Not
Ready.
gracefulAgentStateTransitionModeEnabled boolean
Domain setting:
Whether to enable
Graceful Agent
State Transition.
priorityEnabled boolean
Whether absolute
priority is enabled.
You may enable
priority, ratio, both,
or neither.
63 Configuration Web Services • Reference Guide

--- PAGE 64 ---
Data Types
cannedReport
Name Type Description
ratioEnabled boolean
Whether priority by
ratio is enabled.
You may enable
priority, ratio, both,
or neither.
cannedReport
Contains reference information for a canned report.
Name Type Description
index int
Order number of the report.
name string
Name of the report.
cavRestrictionType
Contains the possible restrictions that can be placed on the value of a call variable.
Name Type Description
MinValue string
Minimum value.
MaxValue string
Maximum value.
Regexp string
Regular expressions.
Required string
Field must contain a value.
Set string
Single value.
Multiset string
Several possible values.
Precision string
Sum of the digits before and after the decimal
point.
Scale string
Digits after decimal point.
TimeFormat string
Time format.
64 Configuration Web Services • Reference Guide

--- PAGE 65 ---
Data Types
compareOperatorType
Name Type Description
DateFormat string
Date format.
TimePeriodFormat string
Time interval format.
CurrencyType string
Symbol for the type of currency, for example: $
compareOperatorType
Contains the operators for the filter criteria.
Name Type Description
Contains string
Contains a specified value.
DontContains string
Does not contain a specified value.
Note spelling.
IsNull string
Null.
IsNotNull string
Is not null.
EndsWith string
Ends with.
Equals string
Is equal to.
NotEqual string
Not equal to.
Greater string
Greater than.
GreaterOrEqual string
Greater than or equal to.
Less string
Less than.
LessOrEqual string
Less than or equal to.
Like string
Specified pattern in a column (see SQL LIKE
operator)
StartsWith string
Starts with.
contactField
Contains the configuration of a contact field.
65 Configuration Web Services • Reference Guide

--- PAGE 66 ---
Data Types
contactFieldDisplay
Name Type Description
displayAs contactFieldDisplay
Display options for the data in
the Agent desktop.
mapTo contactFieldMapping
Map of the system information
into the field. The field is updated
when a disposition is set.
name string
Name of the contact field.
restrictions contactFieldRestriction
Restrictions imposed on the data
[0..unbounded]
that can be stored in this field.
system boolean
Whether this field is set by the
system or an agent.
l
True: Field set by system.
l
False: Field set by agent.
type contactFieldType
Type of data stored in this field.
contactFieldDisplay
Contains the options for the appearance of field data in the agent’s desktop.
Name Type Description
Short string
Half line.
Long string
Full line.
Invisible string
Not represented.
contactFieldMapping
Contains data that can be mapped to a specific field in the contact database.
Name Type Description
None string
66 Configuration Web Services • Reference Guide

--- PAGE 67 ---
Data Types
contactFieldRestriction
Name Type Description
LastAgent string
Name of last logged-in agent.
LastDisposition string
Name of last disposition assigned
to a call.
LastSystemDisposition string
Name of last system disposition
assigned to a call.
LastAgentDisposition string
Name of last disposition assigned
by an agent to a call.
LastDispositionDateTime string
Date and time of last disposition
assigned to a call.
LastSystemDispositionDateTime string
Date and time of last system
disposition assigned to a call.
LastAgentDispositionDateTime string
Date and time of last disposition
assigned by an agent to a call.
LastAttemptedNumber string
Last number attempted by the
dialer or by an agent.
LastAttemptedNumberN1N2N3 string
Index of the last dialed phone
number in the record: number1,
number2, or number3.
LastCampaign string
Name of the last campaign that
dialed the record.
AttemptsForLastCampaign string
Dialing attempts for last
campaign.
LastList string
Name of last list used.
CreatedDateTime string
Date and time of record creation
in the contact database.
LastModifiedDateTime string
Date and time of record
modification in the contact
database.
contactFieldRestriction
Contains the restriction that applies to the data stored in a contact field.
67 Configuration Web Services • Reference Guide

--- PAGE 68 ---
Data Types
contactFieldRestrictionType
Name Type Description
type contactFieldRestrictionType
One of the restriction types.
value string
Value of the restriction, such as $ if
the restriction type is CurrencyType .
contactFieldRestrictionType
Contains the available types of restrictions.
Name Type Description
MinValue string
Minimum value.
MaxValue string
Maximum value.
Regexp string
Regular expressions.
Required string
Field must contain a value.
Set string
Single value.
Multiset string
Several possible values.
Precision string
Sum of the digits before and after the decimal
point.
Scale string
Digits after decimal point.
TimeFormat string
Time format.
DateFormat string
Date format.
TimePeriodFormat string
Time interval format.
CurrencyType string
Symbol for the type of currency, for example: $ .
contactFieldType
Contains the types of data that can be stored in a specific contact field.
68 Configuration Web Services • Reference Guide

--- PAGE 69 ---
Data Types
contactsLookupResult
Name Type Description
STRING string
Letters and numbers.
NUMBER string
Numbers only.
DATE string
Date only.
TIME string
Time only.
DATE_TIME string
Date and time.
CURRENCY string
Currency.
BOOLEAN string
True or false.
PERCENT string
Percentage.
EMAIL string
Email address.
URL string
URL.
PHONE string
Phone number.
TIME_PERIOD string
Time interval.
contactsLookupResult
Contains the contact database records that match the crmLookupCriteria .
Name Type Description
fields string [0..unbounded]
Field names in the contact database.
records record [0..unbounded]
Records in the contact database.
crmAddMode
Specifies whether a contact record is added to the contact database when a new
record is added to a dialing list.
Name Type Description
ADD_NEW string
Contact records are created in the contact database and are
added to the dialing list.
69 Configuration Web Services • Reference Guide

--- PAGE 70 ---
Data Types
crmManagerRole
Name Type Description
DONT_ string
Records are added to the dialing list but no records are created
ADD
in the contact database.
crmManagerRole
Contains the attributes and permissions that can be assigned to a CRM manager.
crmManagerPermission
Contains the permissions assigned to a user.
Name Type Description
type crmManagerPermissionType
Information about the permissions that
can be assigned to a CRM manager.
value boolean
Whether the CRM manager is assigned
the permission.
l
True: CRM manager is assigned the
permission.
l
False: CRM manager is not assigned
the permission.
crmManagerPermissionType
Contains the possible permissions that can be assigned to a CRM Manager. Currently,
there are no permissions that can be assigned to the CRM Manager role.
70 Configuration Web Services • Reference Guide

--- PAGE 71 ---
Data Types
crmCriteriaGrouping
crmCriteriaGrouping
Contains the conditions for the filter group of a campaign profile.
Name Type Description
expression string
Expression for the group of filters if
crmCriteriaGroupingType=Custom
. The supported operators are AND ,
OR , NOT .
Example: (1 AND 2 AND 3) OR (4
AND 5 AND 6 AND 7)
type crmCriteriaGroupingType
Possible types of filters.
crmCriteriaGroupingType
Contains the types of filters that you can apply before a record can be called.
Name Type Description
All string
All the conditions must be met.
Any string
Any of the conditions must be met.
Custom string
Custom relationship defined by
crmCriteriaGrouping=expression .
crmDeleteMode
Contains the modes used for deleting data from the contact database.
Name Type Description
DELETE_ALL string
Delete all records. Does not apply to single
record transactions, such as when using the
deleteRecordFromList method.
71 Configuration Web Services • Reference Guide

--- PAGE 72 ---
Data Types
crmDeleteSettings
Name Type Description
DELETE_SOLE_MATCHES string
Delete only single matches.
DELETE_EXCEPT_FIRST string
Delete all records except the first matching
record.
crmDeleteSettings
Contains the available options for deleting data from the contact database.
Name Type Description
basicImportSettings crmDeleteSettings
Information about the deletion
options.
crmFieldCriterion
Contains an individual criterion in the contact database.
Name Type Description
field string
Field in the contact database.
value string
Value in the contact database.
crmImportResult
Contains the results of an import transaction.
Description
Name Type
basicImportResult crmImportResult
Information about list import.
72 Configuration Web Services • Reference Guide

--- PAGE 73 ---
Data Types
crmLookupCriteria
crmLookupCriteria
Contains the criteria used to find matching records in the contact database.
Name Type Description
contactIdField string
Field name of the response that
contains the ID of the contact, which is
the internal database identifier in the
VCC.
criteria crmFieldCriterion
List of contact database criteria.
[0..unbounded]
crmUpdateMode
Contains how contact records should be updated when records are added to a dialing
list.
Name Type Description
UPDATE_FIRST string
Update the first matched record.
UPDATE_ALL string
Update all matched records. Does not
apply to single record transactions, such as
with the updateCrmRecord method.
UPDATE_SOLE_MATCHES string
Update only if one matched record is
found.
DONT_UPDATE string
Do not update any record.
crmUpdateSettings
This section contains the settings used for updating CRM records. These settings specify
how records are added and updated in the system.
73 Configuration Web Services • Reference Guide

--- PAGE 74 ---
Data Types
cssTheme
Name Type Description
basicImportSettings crmUpdateSettings
Detailed information about
the settings. See section on
basicImportSettings .
crmAddMode crmAddMode
Describes how to add a
contact record.
crmUpdateMode crmUpdateMode
Specifies how to update an
existing contact record.
Important : The UPDATE_
ALL value of the
crmUpdateMode parameter
is not supported for the
asyncAddrecordsToList
and
asyncUpdateCrmrecords
methods. You cannot use
the UPDATE_ALL mode to
update all the fields of a
contact record at once
when using these methods.
cssTheme
Version 9.5
Contains the possible CSS theme values.
Name Type Description
cssTheme string
Possible styles (a – d) that you can use for the Visual IVR
that your customers see.
74 Configuration Web Services • Reference Guide

--- PAGE 75 ---
Data Types
customDispositionType
customDispositionType
Contains CRM update settings.
Name Type Description
FinalDisp string
Any contact number of the contact is not
dialed again by the current campaign.
FinalApplyToCampaigns string
Contact is not dialed again by any campaign
that contains the disposition.
AddActiveNumber string
Adds the number dialed to the DNC list.
AddAndFinalize string
Adds the call results to the campaign
history. This record is no longer dialing in
this campaign. Does not add the contact’s
other phone numbers to the DNC list.
AddAllNumbers string
Adds all the contact’s phone numbers to
the DNC list.
DoNotDial string
Number is not dialed in the campaign, but
other numbers from the CRM record can be
dialed.
RedialNumber string
Number is dialed again when the list to dial
is completed, and the dialer starts again
from the beginning.
customReportCriteria
Contains the criteria by which to filter the data contained in a report.
Name Type Description
reportObjects reportObjectList
List of objects by which to filter
[0..unbounded]
the report.
time reportTimeCriteria
Start and end of reporting time.
75 Configuration Web Services • Reference Guide

--- PAGE 76 ---
Data Types
data
data
Contains the parameter that contains the value of one field of a contact record.
Name Type Description
data string
Value of one field of a contact record. One data
[0..unbounded]
parameter must be used for each contact record field.
In the row, list of values that correspond to the column
names of the header row.
dateRange
Contains the dates for which a dialing rule applies. You must specify either the days of
the week or a date range. If both are specified, daysOfWeek is used, and the date range
is ignored.
Name Type Description
daysOfWeek dayOfWeek [0..unbounded]
Array of the days of the week.
endDate dateTime
Last day of the date range.
startDate dateTime
First day of the date range.
dayOfWeek
Contains the days of the week.
Name Type Description
SUNDAY string
MONDAY string
TUESDAY string
WEDNESDAY string
76 Configuration Web Services • Reference Guide

--- PAGE 77 ---
Data Types
dialSortOrder
Name Type Description
THURSDAY string
FRIDAY string
SATURDAY string
dialSortOrder
Contains the order for dialing numbers in the ASAP queue.
Name Type Description
LIFO string
Last in, first out: newest added called first.
FIFO string
First in, first out.
ContactFields string
Sort order of the campaign profile.
dialingRule
Contains the configuration for a dialing rule. Dialing rules are used to ensure that
numbers are not dialed during certain times or days.
Name Type Description
applyToManualCalls boolean
Whether to restrict manual calls to the
dialing rule.
l
True : Restrict manual calls.
l
False : Do not restrict manual calls.
contactText string
Comma-separated list of the possible
entries for a state in the calling list. For
example, "Alabama, AL" indicates that
the state dialing rule applies to contact
records that have either Alabama or
AL in the state contact field. If
omitted, the name and abbreviation of
the state are used by default.
77 Configuration Web Services • Reference Guide

--- PAGE 78 ---
Data Types
disposition
Name Type Description
dateRange dateRange
Date range when dialers do not dial
numbers.
fixedTimeZone string
Time zone used by the dialer to check
whether a number can be called. If
omitted, the time zone of the dialed
number is used by default. For
example, US/Pacific is used for PDT
time. The names of the time zones are
located in the Dialing Rules tab of
Administrator Configuration.
name string
Name of the dialing rule.
state stateProvince
State for which to apply this rule. If
omitted, the rule applies to numbers
of any state. If specified, the rule
applies to the value of the state
contact field.
timeRange timeRange
Part of the day that applies to the rule.
If omitted, the assumption is all day
long.
disposition
Contains the attributes of a custom disposition.
Name Type Description
agentMustComplete boolean
Whether the
Worksheet
agent needs to
complete a
worksheet before
selecting a
disposition.
l
True :
Worksheet
required.
l
False :
78 Configuration Web Services • Reference Guide

--- PAGE 79 ---
Data Types
disposition
Name Type Description
Worksheet not
required.
agentMustConfirm boolean
Whether the
agent is prompted
to confirm the
selection of the
disposition.
l
True : Agent
prompted to
confirm
disposition.
l
False : Agent
not prompted
to confirm
disposition.
description string
Description of the
disposition.
name string
Name of the
disposition.
resetAttemptsCounter boolean
Whether assigning
the disposition
resets the number
of dialing
attempts for this
contact.
l
True :
Disposition
resets the
counter to
zero.
l
False :
Disposition
does not reset
the counter to
zero.
sendEmailNotification boolean
Whether call
details are sent as
an email
79 Configuration Web Services • Reference Guide

--- PAGE 80 ---
Data Types
disposition
Name Type Description
notification when
the disposition is
used by an agent.
l
True : Send
email
notification.
l
False : Do not
send email
notification.
sendIMNotification boolean
Whether call
details are sent as
an instant
message in the
Five9 system
when the
disposition is used
by an agent.
l
True : Send
instant
message.
l
False : Do not
send instant
message.
trackAsFirstCallResolution boolean
Whether the call
is included in the
first call resolution
statistics
(customer’s needs
addressed in the
first call). Used
primarily for
inbound
campaigns.
l
True : Include
in statistics.
l
False : Do not
include in
statistics.
80 Configuration Web Services • Reference Guide

--- PAGE 81 ---
Data Types
dispositionCount
Name Type Description
type customDispositionType
Disposition type.
typeParameters dispositionTypeParams
Parameters that
apply to the
disposition type.
dispositionCount
Contains the number of times that a disposition can be used before the campaign is
stopped.
Name Type Description
count int
Limit of the disposition.
dispositions string
List of the dispositions to which this limit
[0..unbounded]
applies.
dispositionTypeParams
Contains the information returned by a dispositions update transaction.
Name Type Description
allowChangeTimer boolean
Whether the agent can change the redial timer
for this disposition.
l
True : Agent can change redial timer.
l
False : Agent cannot change redial timer.
attempts byte
Number of redial attempts.
timer timer
Redial timer.
useTimer boolean
Whether this disposition uses a redial timer.
l
True : Use a redial timer.
l
False : Do not use a redial timer.
81 Configuration Web Services • Reference Guide

--- PAGE 82 ---
Data Types
dispositionsImportResult
dispositionsImportResult
Contains the number of updated disposition records.
Name Type Description
dispRecordsUpdated long
Number of updated disposition records.
dispositionsUpdateMode
Contains how dispositions are updated.
Name Type Description
UPDATE_ALL string
Update disposition for all records that match the key.
UPDATE_IF_ string
Update disposition if only one record matches the key.
SOLE_CRM_MATCH
Otherwise, request for update is denied.
dispositionsUpdateSettings
Contains the settings to be used when updating dispositions.
Name Type Description
basicImportSettings dispositionsUpdateSettings
Detailed information
about the import
settings.
distributionAlgorithm
Contains the algorithm used by the ACD to determine to which agent to transfer a call
in a specific queue.
82 Configuration Web Services • Reference Guide

--- PAGE 83 ---
Data Types
distributionTimeFrame
Name Type Description
LongestReadyTime string
Agent with the longest idle time since
the last call.
LongestReadyTimeExcludeMC string
Agent with the longest idle time,
excluding manual calls, such as
callbacks.
RoundRobin string
Agent with the highest idle time
among those logged into the queue.
When agents log into the queue, they
have the lowest idle time. The first
queued call is delivered to the agent
with the highest idle time. This agent
is removed from the list. The process
continues with the next agent with the
highest idle time and the next queued
call.
MinCallsHandled string
Agent who has handled the fewest
calls during the interval specified in
distributionTimeFrame .
MinHandleTime string
Agent who has the lowest total call
handle time during the interval
specified in
distributionTimeFrame .
distributionTimeFrame
Contains the time interval for MinCallsHandled and MinHandleTime in
distributionAlgorithm .
Name Type Description
minutes15 string
minutes30 string
minutes60 string
hours8 string
hours24 string
thisDay string
83 Configuration Web Services • Reference Guide

--- PAGE 84 ---
Data Types
emailNotifications
emailNotifications
Contains the options for email notifications.
Name Type Description
emailAddress string
Email address to receive error messages. This
address is used for bounced email messages
and as the Reply-To address.
maxAttachmentSize int
Maximum MB for a voicemail attachment. If
a voicemail attachment exceeds the
specified size, the email notification is sent
without the attachment.
newUserNotification boolean
Whether to send the login credentials to the
newly created email address of a user.
l
True : Send the login credentials.
l
False : Do not send the login credentials.
entry
Contains import warnings in key-value pair format.
Name Type Description
key string
Number of warnings for the type of warning that occurred
during data import.
value long
Warning message.
extensionSettings
Version 9.5
Contains the number of digits that can be used for extensions assigned to users and
inbound campaigns.
84 Configuration Web Services • Reference Guide

--- PAGE 85 ---
Data Types
fieldEntry
Name Type Description
maximalExtensionLength int
Maximum number of digits in the
user’s extension.
minimalExtensionLength int
Minimum number of digits in the
user’s extension.
minimalGeneratedExtension string
Minimal extension number generated
for a new user.
fieldEntry
Maps the column number to the contact database field name for each field imported
into the dialing list and contact database.
Name Type Description
columnNumber int
Column numbers with a range of [1,256]. Column
number in a CSV file or importData array that
contains data for the associated contact field.
fieldName string
Name of the contact field associated with the column
number.
key boolean
Whether the key is used to find the record in the
contact database.
When a record needs to be updated, the key is used
to find the record to update in the contact database.
For example, the key can be first_name , first_
name+last_name , Number1 , or a combination.
When a record is added, the value of the key
determines if the record already exists. If so, the
values in crmAddMode , crmUpdateMode , and
listAddMode determine how to handle matching
records.
l
True : Use the key.
l
False : Do not use the key.
85 Configuration Web Services • Reference Guide

--- PAGE 86 ---
Data Types
ftpImportSettings
ftpImportSettings
Contains the settings to access an FTP server.
Name Type Description
hostname string
Host name.
password string
Password.
path string
Path.
username string
User name.
generalCampaign
Contains information about a campaign. These elements are returned in the
inboundCampaign data type by the getInboundCampaignResponse method.
Name Type Description
defaultIvrSchedule ivrScriptSchedule
Configuration of an IVR script.
maxNumOfLines int
Maximum number of
simultaneous calls.
i18NObjectField
Version 9.5
Contains the possible values of the object field to be translated.
Name Type Description
i18NObjectField string
Possible values:
l NAME
l DESCRIPTION
86 Configuration Web Services • Reference Guide

--- PAGE 87 ---
Data Types
i18NObjectType
i18NObjectType
Version 9.5
Contains the possible values of the object type to be translated.
Name Type Description
i18NObjectType string
Possible values:
l
CAMPAIGN
l
CONNECTOR
l
CONTACT_FIELD
l
DISPOSITION
l
FIELD_VIEW: Contact field
views.
l
REASON_CODE
l
SKILL
l
SPEED_DIAL
importData
Contains the data to be imported.
Name Type Description
values stringArray Array to import. Each item corresponds to the
[0..unbounded] fieldsMapping element specified in
listUpdateSettings . Depending on the value of
skipHeaderLine , the first record may not be read. For
more information, see basicImportSettings .
importIdentifier
Contains the data import identifier.
87 Configuration Web Services • Reference Guide

--- PAGE 88 ---
Data Types
importTrouble
Name Type Description
identifier string
Identifier used to check on the status and outcome of a
data import operation.
importTrouble
Version 3
Contains general information about the rejection.
Name Type Description
key string
List of fields marked as keys.
[0..unbounded]
kind importTroubleKind
Information about the possible
reasons for the import failure.
rowNumber int
Number of the row that has the
problem.
troubleMessage string
Message that describes the problem.
importTroubleKind
Version 3
Contains detailed information about import problems.
Name Type Description
ParseError string
Error message.
DuplicateKey string
Record with the key field that already
exists.
AllKeyFieldsAreEmpty string
At least one key field should not be
empty.
NoMatchesInContacts string
No corresponding contact in the
88 Configuration Web Services • Reference Guide

--- PAGE 89 ---
Data Types
inboundCampaign
Name Type Description
database.
OneMatchInContacts string
Record being imported already exists
in CRM. Occurs when
CrmUpdateMode=DONT_UPDATE .
MultipleMatchesInContacts string
Several contacts in the list have the
same key value. Not allowed by the
settings of another request.
InternalImportError string
Undefined error.
inboundCampaign
Contains the attributes of an inbound campaign.
Name Type Description
inboundCampaign generalCampaign
Attributes of an inbound campaign.
inboundIvrScriptSchedule
Version 9.5
Contains the attributes of an IVR script schedule for an inbound campaign.
Name Type Description
ivrSchedule ivrScriptSchedule
Configuration of the IVR script.
visualModeSettings visualModeSettings
Configuration for the visual
mode.
89 Configuration Web Services • Reference Guide

--- PAGE 90 ---
Data Types
ivrIcons
ivrIcons
Version 10
Contains the IVR icon graphics data.
Name Type Description
largeIcon base64Binary
Large icon binary data.
mediumIcon base64Binary
Medium icon binary data.
smallIcon base64Binary
Small icon binary data.
ivrScriptDef
Contains an IVR script.
Name Type Description
description string
Description of the script.
name string
Name of the script.
xmlDefinition string
Script in XML format. Specify the text as CDATA, or
replace the special characters with their ISO 8859-1
codes.
ivrScriptOwnership
Version 10
Contains the IVR script ownership information.
Name Type Description
isOthersCanCopy boolean
Whether other users can copy the script.
ivrScriptName string
Name of the script.
ownedBy string
User who owns the script.
90 Configuration Web Services • Reference Guide

--- PAGE 91 ---
Data Types
ivrScriptSchedule
ivrScriptSchedule
Contains the configuration of an IVR script.
Note: When using this in the createInboundCampaign , only the default IVR
schedule can be set or modified via the API. Additionally, the name parameter
of the IVR script schedule object must be excluded.
Name Type Description
name string
Name of the IVR schedule.
scriptName string
Name of the IVR script.
scriptParameters scriptParameterValue
Parameters of a foreign script
[0..unbounded]
module used in the IVR script.
keyPerfomanceIndicators
Note
Note the spelling of the data type.
Contains the settings used to customize Service Level statistics in the supervisor
application and in reporting.
Name Type Description
minTimeOfResponse int
Minimum call length.
speedOfAnswer int
For inbound campaigns, percentage of calls
answered in the specified number of seconds.
keyValuePair
Contains a key-value pair.
91 Configuration Web Services • Reference Guide

--- PAGE 92 ---
Data Types
language
Name Type Description
key string
Name used to identify the pair.
value string
Value that corresponds to the name.
language
Contains the language of the prompts.
Name Type Description
En_US string
U.S. English.
limitTimeoutState
Contains the maximum number and count of requests sent for a specific operation type
in a specific time period.
Name Type Description
callCounterStates callCounterState
Array of the different API requests
[0..unbounded]
and their limits and counts for that
time period.
timeout long
Time period in seconds to which the
limits apply.
listAddMode
Contains how to add records to a list.
Name Type Description
ADD_FIRST string
Adds the first record when multiple matches
92 Configuration Web Services • Reference Guide

--- PAGE 93 ---
Data Types
listDeleteSettings
Name Type Description
exist.
ADD_ALL string
Add all records. Does not apply to
asynchronous transactions, such as with the
addRecordToList and
asyncAddRecordsToList methods.
ADD_IF_SOLE_CRM_ string
Add record if only one match exists in the
MATCH
database.
listDeleteSettings
Contains the list deletion settings.
Name Type Description
listDeleteMode listDeleteMode
Describes how to delete dialing list and
contact records.
listDialingMode
Contains the list dialing modes. These options apply to lists used with the Predictive,
Power, and Progressive campaign dialing modes.
Name Type Description
VERTICAL_DIALING string
Dialer attempts to call all numbers in a CRM
record before proceeding to the next record.
LIST_PENETRATION string
Dialer attempts to call all numbers in a column
before proceeding to the next column.
EXTENDED_STRATEGY string
Dialer attempts to call numbers in a list in order
EXTENDED_STRATEGY
of importance. For example, until a contact is
reached, numbers that are more important are
Version 4
redialed sooner and more often than those that
are not.
93 Configuration Web Services • Reference Guide

--- PAGE 94 ---
Data Types
listInfo
listInfo
Contains a dialing list.
Name Type Description
name string
Name of dialing list.
size int
Size of dialing list.
listImportResult
Contains information about the modified contact records. listImportResult extends
basicImportResult .
Name Type Description
callNowQueued long
Record in the queue ready to be dialed.
Value is 0 or 1.
crmRecordsInserted long
Number of inserted contact records.
crmRecordsUpdated long
Number of updated contact records.
listName string
Name of list into which data was
imported.
listRecordsDeleted long
Number of deleted list records.
listRecordsInserted long
Number of inserted list records.
recordDispositionsReset long
Number of reset records.
Version 9.5
listState
Contains the attributes of each list associated with a campaign.
94 Configuration Web Services • Reference Guide

--- PAGE 95 ---
Data Types
listUpdateSettings
Name Type Description
campaignName string
Name of campaign to which the list is associated.
dialingPriority int
Dialing priority for the list In the campaign.
dialingRatio int
Dialing ratio for this list compared to other lists
associated with the same campaign.
listName string
Name of list.
priority int
Dialing priority of a list in a campaign. A list with a
lower priority number is dialed first.
listUpdateSettings
Contains the list update settings. listUpdateSettings extends basicImportSettings .
Name Type Description
callNowColumnNumber int
Column numbers with a range of
[1,256]. If a record should be
dialed immediately, the content of
the column is 1 , T , Y , and Yes . This
column is not included in the
fieldsMapping parameter and is
not imported in the contact
database.
If callNowMode is also specified,
only records that have a true value
and apply to callNowMode are
called immediately.
If you do not want to add a column
for each imported record, use
callNowMode singly.
callNowMode callNowMode
Whether records are dialed
immediately.
If callNowColumnNumber is also
specified, callNowMode applies to
all records with a true value in the
specified column.
If callNowColumnNumber is
95 Configuration Web Services • Reference Guide

--- PAGE 96 ---
Data Types
listUpdateSettings
Name Type Description
omitted, the callNowMode applies
to all records imported by the
request.
callTime long
When to dial the records (Epoch
time in milliseconds); applies to all
records in the request, except for
those with a value in the
timeToCallColumn ; does not
apply to the addToList method,
which is used to process batch
record transactions.
Note: The call time value
is applied only if the
campaign exists when the
record is added to the list
assigned to that
campaign. However, if a
campaign is created or
associated with a list after
the record is added to the
list, calls may be dialed
sooner than the specified
value, depending on the
size of the list, the
position of the record in
the list, and the other
parameters assigned to
the list in the campaign.
callTimeColumnNumber int
Column numbers with a range of
[1,256]. Column that contains the
times (Epoch time) to call
individual records. If a record
contains a valid time, this time is
used instead of the callTime
parameter. Does not apply to the
addToList method, which is used
to process batch record
transactions.
cleanListBeforeUpdate boolean
Whether to remove all records in
96 Configuration Web Services • Reference Guide

--- PAGE 97 ---
Data Types
listUpdateSimpleSettings
Name Type Description
the list before adding new records.
l
True : Remove all records.
l
False : Do not remove all
records.
crmAddMode crmAddMode
Describes how to add new contact
records into a dialing list.
crmUpdateMode crmUpdateMode
Describes how to update contact
records when adding a record to a
dialing list.
listAddMode listAddMode
Describes how to update the list.
listUpdateSimpleSettings
Version 3
Contains list update settings for the addRecordToListSimple method.
Name Type Description
callAsap boolean
Whether to call the contact as soon as
possible.
countryCode string
Two-letter codes defined in ISO 3166-1.
countryCode
Version 4
fieldsMapping fieldEntry
Mapping of the column number to the field
[0..unbounded]
name in the contact database.
Column numbers start at 0 whereas in
listUpdateSettings , column numbers
start at 1.
timeToCall long
When to dial the records (Epoch time in
milliseconds).
updateCRM boolean
Whether to update the contact field data of
an existing record:
97 Configuration Web Services • Reference Guide

--- PAGE 98 ---
Data Types
mediaType
Name Type Description
l
True : Changes to the value of a contact
field are saved.
l
False : Changes to the value of a contact
field are not saved, but new records are
inserted.
mediaType
Version 9.5
Contains the values of the possible media type.
Name Type Description
mediaType string
Possible options:
l
VOICE
l
CHAT
l
SOCIAL
l
EMAIL
l
VIDEO
l
CASE
Version 10.2
mediaTypeConfig
Version 9.5
Contains information about the media types.
Name Type Description
mediaTypes mediaTypeItem [0..unbounded]
List of media type items.
98 Configuration Web Services • Reference Guide

--- PAGE 99 ---
Data Types
mediaTypeItem
mediaTypeItem
Version 9.5
Contains information about single media type items.
Name Type Description
enabled boolean
Whether the media type is enabled.
intlligentRouting boolean
Whether Intelligent Routing is enabled.
Note spelling.
maxAlowed byte
Maximum number of items allowed for the
Note spelling.
type.
type mediaType
Type of media.
miscVccOptions
Contains global configuration options that are not found in other categories.
Name Type Description
defaultCampaign string
Name of the campaign selected by default
when agents start manual calls to external
numbers.
enableReasonCodes boolean
Whether agents can choose reason codes
when selecting Not Ready and Logout.
l
True : Agents can choose reason codes.
l
False : Agents cannot choose reason
codes.
internalCallTimeout int
Number of seconds to wait for a call to be
answered by another agent. The default
value is 20 seconds.
maySelectCampaign boolean
In the softphone menu, whether agents can
select a campaign other than the default.
l
True : Agents can select another
99 Configuration Web Services • Reference Guide

--- PAGE 100 ---
Data Types
operationType
Name Type Description
campaign.
l
False : Agents cannot select another
campaign.
maySelectNone boolean
Whether agents can make manual calls not
associated with a campaign.
l
True : Agents can make manual calls.
l
False : Agents cannot make manual calls.
showDialAttempts boolean
Whether agents can see call attempts
automatically assigned a disposition by the
dialer in the Contact Sessions panel.
l
True : Agents can see call attempts.
l
False : Agents cannot see call attempts.
voicemailTimeout int
Number of seconds for an agent to wait
before accepting a transferred skill group
voicemail. If the agent does not accept the
voicemail message within the set time, the
voicemail message is transferred to the next
agent in the skill group.
operationType
Contains the type of operation.
Name Type Description
Add string
Update string
Remove string
orderByField
Contains the sorting order of fields in the dialer.
100 Configuration Web Services • Reference Guide

--- PAGE 101 ---
Data Types
outboundCampaign
Name Type Description
descending boolean
Whether fields are in descending or ascending order.
l
True : Fields are in descending order.
l
False : Fields are in ascending order.
fieldname string
Contact field to sort.
rank int
Sorting priority for the values.
outboundCampaign
Contains the attributes of an outbound campaign.
Name Type Description
baseOutboundCampaign outboundCampaign
Attributes of an outbound
campaign.
passwordPolicies
Version 2
Contains the password policies for the domain.
Name Type Description
adminLoginAttempts int
Number of allowed login attempts for
administrators.
enforcePasswordHistory int
Number of passwords remembered by the
system.
loginAttempts int
Number of allowed login attempts for agents.
minCapitalCharacters int
Minimum required number of capital letters.
minNumberCharacters int
Minimum required number of alphabetical
characters in the password.
101 Configuration Web Services • Reference Guide

--- PAGE 102 ---
Data Types
passwordPolicyEntries
Name Type Description
minPasswordLength int
Minimum length of a password.
minSpecialCharacters int
Minimum required number of special
characters
passwordExpires int
Number of days before the expiration of the
password
passwordPolicyEntries
Version 2
Contains the password settings.
Name Type Description
MIN_LENGTH string
Minimum length of a password.
SPECIAL_SMBL
Any character other than a letter or digit.
CAPITAL_SMBL
Capital symbols allowed in the password.
DIGIT
Digits allowed in the password.
LOCKOUT
Number of unsuccessful login attempts
allowed before an agent’s account is locked.
ADMINLOCKOUT
Number of unsuccessful login attempts
allowed before an administrator’s account is
locked.
REUSELIFE
Password history.
TIMELIFE
Password expiration date and time.
QUESTCANTCONTAINPWD
Whether a security question can contain the
password.
CANRESETPASSWORD
Whether the user is allowed to reset the
password.
102 Configuration Web Services • Reference Guide

--- PAGE 103 ---
Data Types
passwordPolicyEntryValue
passwordPolicyEntryValue
Contains the password policies for the domain.
Name Type Description
entry passwordPolicyEntries
Password settings.
value int
Value that corresponds to the entry
selected.
promptInfo
Contains information about a prompt.
Name Type Description
description string
Description of the prompt.
languages string
List of languages for getPrompt() or one
[0..unbounded]
Version 9.5
language for the methods that modify
prompts
This field is ignored for the methods that add
prompts.
If you try to create or modify a prompt in
more than one language in the same request,
an exception occurs. For several languages,
use several requests.
name string
Name of the prompt.
type promptType
Type of prompt.
promptType
Contains the type of prompt.
103 Configuration Web Services • Reference Guide

--- PAGE 104 ---
Data Types
reasonCode
Name Type Description
TTSGenerated string
Audio file generated with Five9 text-to-speech.
PreRecorded string
Audio file recorded with third-party tool.
reasonCode
Contains a single reason code that can be selected by agents. Reason codes must be
enabled in the Five9 platform under the Other tab.
Name Type Description
enabled boolean
Whether a reason code is enabled.
l
True : Reason code is enabled.
l
False : Reason code is not enabled.
name string
Name of the reason code.
paidTime boolean
Whether the agent is paid for the time away.
l
True : Agent is paid.
l
False : Agent is not paid.
shortcut unsignedShort
Character used as a keyboard shortcut by the
agent going away.
type reasonCodeType
Situation for which reason code is set.
reasonCodeType
Contains the types of reason codes.
Name Type Description
NotReady string
Ready state changed to not ready.
Logout string
Agent logs out.
104 Configuration Web Services • Reference Guide

--- PAGE 105 ---
Data Types
record
record
Contains a row of a reporting table.
Name Type Description
values data
Values that make up one contact record.
recordData
Contains the fields for a single dialing list record. This record is added to the contact
database, or it is modified if it already exits.
Name Type Description
fields string [0..unbounded]
Fields to be added to a dialing list.
remoteHostLoginSettings
Contains the FTP server settings for exporting recordings or reports to a remote server.
Name Type Description
hostName string
FTP server name, which must be a fully qualified domain
name or an IP address. Enter only the domain name without
ftp:// .
password string
FTP password.
UserName string
FTP user name.
reportObjectList
Contains the type of data to be included in the report.
105 Configuration Web Services • Reference Guide

--- PAGE 106 ---
Data Types
reportObjectList
Name Type Description
objectNames string [0..unbounded]
Names of the objects.
objectType wsObjectType
Possible filters that you can use in
reports.
Example Usage
SOAP Request
<soapenv:Envelope xmlns:soapenv="h-
ttp://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="h-
ttp://service.admin.ws.five9.com/">
<soapenv:Header/>
<soapenv:Body>
<ser:runReport>
<folderName>List Reports</folderName>
<reportName>List Details</reportName>
<criteria>
<!-- Zero or more repetitions: -->
<reportObjects>
<!-- Zero or more repetitions: -->
<objectNames>My List name</objectNames>
<objectType>List</objectType>
</reportObjects>
<time>
<start>2025-06-01T00:00:00Z</start>
<end>2025-06-30T12:00:00Z</end>
</time>
</criteria>
</ser:runReport>
</soapenv:Body>
</soapenv:Envelope>
Explanation
l
folderName : Specifies the folder where the report is located. In this example, it's
"List Reports".
l
reportName : The name of the report to run. "List Details".
l
criteria : Contains the criteria for the report.
106 Configuration Web Services • Reference Guide

--- PAGE 107 ---
Data Types
reportRowData
o
reportObjects : Specifies the objects to include in the report.
– objectNames : The names of the objects. In this example, "My List
name".
– ObjectType : The type of the object, which is "List" in this case. The
possible filters that you can use in reports are detailed in the
wsObjectType .
l
time : Specifies the time range for the report.
o
start : The start time in ISO 8601 format.
o
end : The end time in ISO 8601 format.
reportRowData
Contains the reporting data as a two-dimensional array. Note that the time is in Pacific
Standard Time (PST).
Name Type Description
header record
Row of column names.
records record
Array of rows in the table. By default, the limit is
[0..unbounded]
50000 records.
reportTimeCriteria
Contains the period from which to retrieve data from for a report.
Name Type Description
end dateTime
End of the reporting period.
start dateTime
Start of the reporting period with the time zone. Example:
2013-04-23T21:00:00.000-07:00 .
107 Configuration Web Services • Reference Guide

--- PAGE 108 ---
Data Types
reportingPermission
reportingPermission
Contains the reporting permissions.
Name Type Description
type reportingPermissionType
List of reporting permissions.
value boolean
Whether to assign the permission.
l
True : Assign the permission.
l
False : Do not assign the
permission.
reportingPermissionType
Contains the possible reporting permissions.
Name Type Description
CanScheduleReportsViaFtp string
Can schedule reports for an FTP
server.
CanAccessRecordingsColumn string
Can access the Recording column,
which links to recordings in the
Reporting portal. Enabled by default.
CanViewStandardReports string
Can access the Standard Reports tab.
CanViewCustomReports string
Can access the Custom Reports tab.
CanViewScheduledReports string
Can access the Scheduled Reports tab.
CanViewRecentReports string
Can access the Recent Reports tab.
CanViewRelease7Reports string
Can access the Release 7 Reports tab.
CanViewCannedReports string
Can access the Canned Reports tab.
CanViewDashboards string
Can view and run Dashboard reports
Version 9.5
and view Key Performance Indicators
(KPIs).
Supervisors with this permission see
only the dashboards for the skill and
groups to which they belong.
108 Configuration Web Services • Reference Guide

--- PAGE 109 ---
Data Types
reportingRole
Name Type Description
CanViewAllSkills string
Can access all skills.
Version 9.5
CanViewAllGroups string
Can view all agent groups.
Version 9.5
CanViewSocialReports string
Can access social reports.
Version 9.5
reportingRole
Contains the reporting role.
Name Type Description
permissions reportingPermission
List of reporting permissions
[0..unbounded]
assigned to the user.
sayAs
Contains the possible text elements of a prompt should be read. This information is
located in the TTS Builder.
Name
Type Description
Default
string
Words string
Word strings are spoken as words instead of being
pronounced as strings of individual letters and digits.
However, the characters of a word may be spoken
individually when character sequences are particularly
difficult to pronounce. Meant for acronyms to be read as
words.
Acronym string
Letters and/or digits, such as NATO and UNESCO in English,
that are spoken as words when considered natural in the
target language. Otherwise, letters and digits are pro-
nounced individually, for example: API in English. Use
109 Configuration Web Services • Reference Guide

--- PAGE 110 ---
Data Types
sayAs
Name
Type Description
strict
detail to force spelling mode. In that case, punc-
tuation is also spoken, for example: speaking a comma as
comma strict
. Acronym with detail is equivalent to letters
strict
with detail . don’t understand the last 2 sentences
about strict something
Address string
Postal addresses.
Cardinal string
Supported if relevant in the target language. Roman car-
dinals are often supported.
Currency string
Text is a currency amount with or without the currency
symbol. Supports currencies commonly specified in the
country corresponding to the target language.
Date string
Decimal string
Same as number with format decimal. The separator for
the integral part is optional. For example, in U.S. English,
123456.123 and 123,456.123 are pronounced in the same
way.
Digits string
Same as number with format digits. Numbers must be read
digit by digit, including decimal periods and commas.
Duration string
hms
For example, duration with format is read as <h> hour
(s), <m> minute(s), and <s> seconds.
Fraction string
Same as number with format fraction. For example, pro-
nounce 1/3 as one third.
Letters string
Strings are pronounced as a sequence of single letters
strict
and/or digits. With detail punctuation is also spoken,
comma
for example: speaking a comma as . Letters with
strict strict
detail is equivalent to acronym with detail . For
inter-
the true spelling of all readable characters, use the
pret-as spell
value .
Measure string
Many units, such as km, hr, dB, lb, or MHz, are supported.
Units may appear immediately next to a number, such as
1cm, or be separated by a space, such as 15 ms. For some
units, the distinction between singular and plural may not
always be made correctly.
Name string
Interpret a string as a proper name if possible.
Net string
Email can be used for email addresses.
Telephone string
Supports phone numbers specified in the country cor-
responding to the target language. See the language-spe-
110 Configuration Web Services • Reference Guide

--- PAGE 111 ---
Data Types
sayAsFormat
Name
Type Description
cific User Guide for a list of the supported formats. Use
punctuation
detail to speak punctuation, such as speaking
dash
a dash as .
Ordinal string
Same as number with format ordinal. See the language-
specific User’s Guide for a list of the supported formats.
Spell string
Characters in text string are pronounced as individual char-
acters.
Time string
Hour must be less than 24; minutes and seconds must be
less than 60; AM/PM is read only if explicitly specified. See
the language-specific User’s Guide for a list of the sup-
ported formats.
sayAsFormat
Contains the date and time format of the prompt.
Name Type Description
NoFormat string
Default string
Date_MDY string
Date_DMY string
Date_YMD string
Date_YM string
Date_MY string
Date_DM string
Date_MD string
Date_Y string
Date_M string
Date_D string
Duration_HMS string
Duration_HM string
Duration_MS string
Duration_H string
111 Configuration Web Services • Reference Guide

--- PAGE 112 ---
Data Types
scriptParameterValue
Name Type Description
Duration_M string
Duration_S string
Net_URI string
Net_EMAIL string
Time_HMS string
Time_HM string
Time_H string
scriptParameterValue
Contains the values of external variables for an IVR script.
Name Type Description
name string
External variable name.
value string
External variable value.
sForceEmailAccount
Contains the attributes of a Salesforce email account.
Name Type Description
consumerKey string
Salesforce object that is automatically generated
when you save a remote access definition.
consumerSecret string
Salesforce object that is automatically generated
when you save a remote access definition.
enabled boolean
Whether the Salesforce email integration is
enabled.
l
True : Email integration is enabled.
l
False : Email integration is not enabled.
112 Configuration Web Services • Reference Guide

--- PAGE 113 ---
Data Types
skill
Name Type Description
password string
User’s password generated by Salesforce.
securityToken string
Security token that you provide to your agents in
addition to the password generated by Salesforce if
your agents’ IP address is not in the trusted IP
range configured in Salesforce for your
organization.
userName string
User’s name generated by Salesforce.
skill
Contains the attributes of a skill.
Name Type Description
description string
Skill description.
id long
Skill ID.
messageOfTheDay string
Message of the day for the skill.
name string
Skill name.
routeVoiceMails boolean
Whether to route voicemail messages to the skill.
l
True : Route voicemail messages to skill.
l
False : Do not route voicemail messages to
skill.
skillInfo
Contains a skill assigned to users.
Name Type Description
skill skill
Skill description.
users userSkill [0..unbounded]
Users who possess the skill.
113 Configuration Web Services • Reference Guide

--- PAGE 114 ---
Data Types
speedDialNumber
speedDialNumber
Version 10.2
Contains a number to speed dial.
Name Type Description
code string
Code assigned to the telephone number to speed dial.
description string
Description for the number.
number string
Telephone number to speed dial.
stateDialingRule
Version 9.5
Contains the possible methods for finding the state dialing rules that apply to the
contact.
Name Type Description
REGION string
Use the dialing rules of the contact’s state.
REGION_THEN_ string
Initially, use the dialing rules of the contact’s state.
PHONE_NUMBER
Afterward, search by using the phone number (area code
and prefix).
REGION_THEN_ string
Initially, use the dialing rules of the contact’s state.
POSTCODE
Afterward, search by using postal code.
stateProvince
Contains the states and provinces of the U.S. and Canada that are used in state dialing
rules.
114 Configuration Web Services • Reference Guide

--- PAGE 115 ---
Data Types
stateProvince
Name Type Description
ANY string
US_ALABAMA string
US_ALASKA string
US_ARIZONA string
US_ARKANSAS string
US_CALIFORNIA string
US_COLORADO string
US_CONNECTICUT string
US_DELAWARE string
US_FLORIDA string
US_GEORGIA string
US_HAWAII string
US_IDAHO string
US_ILLINOIS string
US_INDIANA string
US_IOWA string
US_KANSAS string
US_KENTUCKY string
US_LOUISIANA string
US_MAINE string
US_MARYLAND string
US_MASSACHUSETTS string
US_MICHIGAN string
US_MINNESOTA string
US_MISSISSIPPI string
US_MISSOURI string
US_MONTANA string
US_NEBRASKA string
US_NEVADA string
US_NEW_HAMPSHIRE string
115 Configuration Web Services • Reference Guide

--- PAGE 116 ---
Data Types
stateProvince
Name Type Description
US_NEW_JERSEY string
US_NEW_MEXICO string
US_NEW_YORK string
US_NORTH_CAROLINA string
US_NORTH_DAKOTA string
US_OHIO string
US_OKLAHOMA string
US_OREGON string
US_PENNSYLVANIA string
US_RHODE_ISLAND string
US_SOUTH_CAROLINA string
US_SOUTH_DAKOTA string
US_TENNESSEE string
US_TEXAS string
US_UTAH string
US_VERMONT string
US_VIRGINIA string
US_WASHINGTON string
US_WEST_VIRGINIA string
US_WISCONSIN string
US_WYOMING string
CA_ALBERTA string
CA_BRITISH_COLUMBIA string
CA_MANITOBA string
CA_NEW_BRUNSWICK string
CA_NEWFOUNDLAND_AND_LABRADOR string
CA_NOVA_SCOTIA string
CA_ONTARIO string
CA_PRINCE_EDWARD_ISLAND string
CA_QUEBEC string
CA_SASKATCHEWAN string
116 Configuration Web Services • Reference Guide

--- PAGE 117 ---
Data Types
stringArray
stringArray
Contains the values of import setting fields. The name space for this data type is
http://jaxb.dev.java.net/array .
Name Type Description
item string
Value of a record that corresponds to a field specified
[0..unbounded]
in import settings.
supervisorPermission
Contains the supervisor role.
Name Type Description
type supervisorPermissionType
List of supervisor permissions.
value boolean
Whether the user is assigned the
supervisor permission.
l
True : Permission is assigned.
l
False : Permission is not assigned.
supervisorPermissionType
Contains the list of supervisor permissions.
Important
Supervisors who log into a PSTN station or forward calls between ses-
sions may incur high long-distance fees. Therefore, be sure to give per-
mission only to the appropriate users.
117 Configuration Web Services • Reference Guide

--- PAGE 118 ---
Data Types
supervisorPermissionType
Name Type Description
CanUseSupervisorSoapApi string
Can submit requests to the
Version 12
Supervisor
API if the following permissions are
enabled on the VCC Administration
console:
l User Can Execute Web API
Requests .
l
Permission to execute the
required request. For example,
to edit dispositions with the
Supervisor API, enable the
corresponding permission: User
Can Edit Dispositions .
Users string
Can view the Users tab in the
Supervisor desktop.
Agents string
Can monitor the status of agents
(logged out, on break, on a call) and
view agent statistics and ACD
queues.
CallMonitoring string
Can listen to agents’ calls (silent
monitoring).
Stations string
Can view station IDs assigned to
their domain.
ChatSessions string
Can view active chat sessions.
Campaigns string
Can view the Campaigns tab,
including campaign status
information and statistics, and
other information and abilities.
CampaignManagement string
Can be enabled for any of the single
campaign management permissions
at the bottom of this table:
CampaignManagementStart ,
CampaignManagementStop ,
CampaignManagementReset ,
CampaignManagementResetDispo
sitions , CampaignManagement
ResetListPositions , and
CampaignManagementResetDiale
118 Configuration Web Services • Reference Guide

--- PAGE 119 ---
Data Types
supervisorPermissionType
Name Type Description
rDCP .
AllSkills string
If false, only the skill data assigned
to the user is visible. It disables the
Filter Statistics by Skill option in the
Supervisor View menu. verify
BillingInfo string
Whether the user can view the
billing information: true or false.
BargeInMonitor string
Can speak with the customer. Use
this value when the supervisor
needs to help but not take over the
call from the agent.
WhisperMonitor string
Can speak to the agent without
being heard by the customer. Use
this value when coaching agents or
assisting with difficult calls.
ViewDataForAllAgentGroups string
Can access all agent groups. When
the permission is disabled, the
supervisor can access only agent
groups of which the supervisor is a
member.
ReviewVoiceRecordings string
Can access voicemail messages and
recordings associated with each
agent that the supervisor can
access.
EditAgentSkills string
Can add and remove skills and
change skill levels for agents that
the supervisor can view.
CanAccessDashboardMenu string
Can access the Dashboard menu in
the supervisor desktop.
CampaignManagementStart string
Can start a campaign.
CampaignManagementStop string
Can stop a campaign.
CampaignManagementReset string
Can reset a campaign.
CampaignManagementResetDisposit string
Can reset the dispositions of a
ions
campaign.
CanUseSupervisorSoapApi string
Can submit requests to the
119 Configuration Web Services • Reference Guide

--- PAGE 120 ---
Data Types
supervisorRole
Name Type Description
Version 12
Supervisor SOAP API if the following
permissions are enabled on the
Administration application:
l
User Can Execute Web API
Requests.
l
User can edit agent skills on the
Administration application.
CampaignManagementResetListPosi string
Can reset the dialing list position
tions
for outbound and autodial
campaigns.
CampaignManagementResetAbandonC string
Can reset the dialer’s dropped call
allRate
percentage for outbound and
autodial campaigns.
CanViewTextDetailsTab string
Can view and log into the Text
Version 3
Details tab of the Supervisor
desktop to access social media,
email, and chat.
CanAccessShowFields string
Can use the View > Show Fields
Version 3
menu to set the layout of the
application.
CanRunJavaClient string
Can run the Java client applications.
Version 10
CanRunWebClient string
Can run the web client applications.
Version 10
CanChangeDisplayLanguage string
Can change the display language.
Version 10.1
CanMonitorIdleAgents string
Supervisors can monitor agents
Version 11
when agents are not on a call.
supervisorRole
Contains the supervisor role.
Name Type Description
permissions supervisorPermission
List of supervisor
[0..unbounded]
permissions.
120 Configuration Web Services • Reference Guide

--- PAGE 121 ---
Data Types
timePeriod
timePeriod
Contains the unit of the dial ASAP time-out.
Name Type Description
Second string
Minute string
Hour string
Day string
timeRange
Contains the time range for a dialing rule.
Name Type Description
startHour int
Beginning hour of the range, for example: 8 for 8:32AM.
startMinute int
Beginning minute of the range, for example: 32 for 8:32PM.
stopHour int
Ending hour of the range, for example: 17 for 5:00PM.
stopMinute int
Ending minute value of the range, for example: 0 for
5:00PM.
timeZoneAssignment
Version 9.5
Contains the possible methods for finding the contact’s time zone.
Name Type Description
PHONE_NUMBER string
Search for the time zone by using the phone number
(area code and prefix).
121 Configuration Web Services • Reference Guide

--- PAGE 122 ---
Data Types
timer
Name Type Description
POSTCODE_ string
Initially, search for the time zone by using the postal
THEN_PHONE_
code. Afterward, search by using the phone number
NUMBER
(area code and prefix).
REGION_THEN_ string
Initially, search for the time zone by using the state.
PHONE_NUMBER
Afterward, search by using the phone number (area code
and prefix).
timer
Contains the amount of time until expiration. The amount is the sum of the days,
hours, minutes, and seconds.
Name Type Description
days int
Number of days.
hours int
Number of hours from 0 to 23.
minutes int
Number of minutes from 0 to 59.
seconds int
Number of seconds from 0 to 59.
ttsInfo
Contains a TTS prompt.
Name Type Description
language language
Language used for the prompts.
sayAs sayAs
Describes how letters, numbers, and symbols are
pronounced.
sayAsFormat sayAsFormat
Date and time format of the prompt.
text string
Content of the prompt.
voice string
Voice used to pronounce the TTS prompt, for
Version 9.5
example Terry.
122 Configuration Web Services • Reference Guide

--- PAGE 123 ---
Data Types
userInfo
userInfo
Contains the information about a user.
Name Type Description
agentGroups string
Agent groups to which the user belongs.
[0..unbounded]
cannedReports cannedReport
Reports associated with the user.
[0..unbounded]
generalInfo userGeneralInfo
General information about the user, such
as name and email address.
roles userRoles
Roles assigned to the user.
skills userSkill
List of user skills.
[0..unbounded]
userGeneralInfo
Contains detailed information about a user.
Name Type Description
active boolean
Whether the user account is
enabled.
l
True : Account enabled.
l
False : Account disabled.
canChangePassword boolean
Whether the user can change
the password.
l
True : User can change
password.
l
False : User cannot change
password.
EMail string
User’s email address.
extension int
User’s phone extension.
federationId string
Federation ID.
123 Configuration Web Services • Reference Guide

--- PAGE 124 ---
Data Types
userGeneralInfo
Name Type Description
v 10.2
firstName string
First name of the user.
fullName string
First and last name.
IEXScheduled boolean
Do not use.
id long
User ID.
lastName string
User’s last name.
locale string
User’s locale.
Version 9.5
mediaTypeConfig mediaTypeConfig
Information about the user’s
Version 9.5
media types.
mustChangePassword boolean
Whether the user is required
to change the password when
logging in for the first time.
l
True : User required to
change password.
l
False : User not required to
change password.
osLogin string
Do not use.
password string
Password.
phoneNumber string
Phone number of the unified
communication user.
startDate dateTime
Date that the user started
using the Five9 system. This
value is used in reporting.
unifiedCommunicationId string
Unified communication ID, for
Version 9.3
example, a Skype for Business
ID such as
syoung@qa59.local.com .
userName string
User name.
userProfileName string
Profile assigned to the user.
Version 9.3
124 Configuration Web Services • Reference Guide

--- PAGE 125 ---
Data Types
userProfile
userProfile
Contains the details of a profile.
Name Type Description
description string
Description of the profile.
IEXScheduled boolean
Do not use.
locale string
User’s locale.
Version 9.5
mediaTypeConfig mediaTypeConfig
Information about the user’s media
Version 9.5
types.
name string
Name of the profile.
roles userRoles
User roles assigned to the profile.
skills string
Skills assigned to the profile.
[0..unbounded]
users string
List of agents using the profile.
[0..unbounded]
userRoleType
Contains roles that can be assigned to a user.
Name Type Description
DomainAdmin string
Administrator role.
Agent string
Agent role.
Supervisor string
Supervisor role.
Reporting string
Reporting role.
userRoles
Contains roles assigned to a user.
125 Configuration Web Services • Reference Guide

--- PAGE 126 ---
Data Types
userSkill
Name Type Description
admin adminRole
Administrator role permissions.
agent agentRole
Agent role permissions.
reporting reportingRole
Reporting role permissions.
supervisor supervisorRole
Supervisor role permissions.
userSkill
Contains the queue assigned to a user.
Name Type Description
id long
Queue ID.
userSkill.level int
Priority of agent to receive calls sent to this queue.
level
Level 1 is the highest priority; level 10 is the lowest.
Higher level receive calls first. When agents are
assigned to several queues, each queue may have a
different priority.
skillName string
Queue name.
userName string
User name assigned the queue.
vccConfiguration
Contains global settings.
Name Type Description
agentProductivity agentProductivity
Minimum and
maximum call
durations used in
reports to identify
possible agent
productivity
exceptions.
126 Configuration Web Services • Reference Guide

--- PAGE 127 ---
Data Types
vccConfiguration
Name Type Description
campaignsSettings campaignsSettings
Global campaign
Version 9.5
settings.
emailProperties emailNotifications
Email notification
settings.
extensionSettings extensionSettings
Domain extension
Version 9.5
settings that apply
to users.
keyPerfomanceIndicators keyPerfomanceIndicators
Service Level
Note spelling. Note spelling.
setting used in
reporting and
statistics.
miscOptions miscVccOptions
Other options for
configuration.
passwordPolicies passwordPolicies
Settings for
password
management.
recordingsServer remoteHostLoginSettings
FTP server settings
for recordings.
reportsServer remoteHostLoginSettings
FTP server settings
for reports.
saleforceEmailAccount sForceEmailAccount
Attributes of a
Note spelling.
Salesforce email
account.
stateDialingRule stateDialingRule
Information about
Version 9.5
the methods for
finding the dialing
rules that apply to
the contact.
timeZoneAssignment timeZoneAssignment
Information about
Version 9.5
the methods for
finding the
contact’s time
zone.
transcriptsServer remoteHostLoginSettings
FTP server settings
Version 9.5
for exporting
recordings or
reports to a remote
server.
127 Configuration Web Services • Reference Guide

--- PAGE 128 ---
Data Types
versions
versions
Version 9.5
Contains the available API versions for the domain.
From the most recent version to the oldest, the possible values are v13, v12, v11, v10_
2, v10, v9_5, v9_3, and "" (empty string).
Name Type Description
maxVersion string
Later API version number.
minVersion string
Earlier API version number.
visualModeSettings
Version 9.5
Contains visual mode settings that apply to the inbound campaign.
Name Type Description
callbackEnabled boolean
Whether callback is enabled.
chatEnabled boolean
Whether chat is enabled.
cssTheme cssTheme
Details about the CSS theme.
emailEnabled boolean
Whether email is enabled.
sentimentFeedbackEnabled boolean
Whether sentiment is enabled.
videoEnabled boolean
Whether video is enabled.
visualModeEnabled boolean
Whether visual mode is
enabled.
xFrameOption xFrameOption
Value of the X-Frame-Options
header.
xFrameOptionUrl string
URL of the X-Frame-Options
header.
xFrameOptionsEnabled boolean
Whether the X-Frame-Options
header is used.
128 Configuration Web Services • Reference Guide

--- PAGE 129 ---
Data Types
webConnector
webConnector
Contains the configuration details of a web connector.
Name Type Description
addWorksheet boolean
Applies only to POST
requests. Whether to
pass worksheet
answers as
parameters.
l
True : Pass
worksheet answers
as parameters.
l
False : Do not pass
worksheet answers
as parameters.
agentApplication webConnectorAgentAppType
If
executeInBrowser=t
rue , this parameter
specifies whether to
open the URL in an
external or an
embedded browser.
clearTriggerDispositi boolean
When modifying an
ons
existing connector,
whether to clear the
existing triggers.
l
True : Clear existing
triggers.
l
False : Do not clear
existing triggers.
constants keyValuePair [0..unbounded]
List of parameters
passed with constant
values.
ctiWebServices webConnectorCTIWebServices
In the Internet
Type
Explorer toolbar,
whether to open the
HTTP request in the
129 Configuration Web Services • Reference Guide

--- PAGE 130 ---
Data Types
webConnector
Name Type Description
current or a new
browser window.
description string
Purpose of the
connector.
executeInBrowser boolean
When enabling the
agent to view or enter
data, whether to open
the URL in an
embedded or external
browser window.
l
True : External —
open a browser
window.
l
False : Embedded
— do not open a
browser window,
which is the desired
action when using
the On Call
disposition triggers.
name string
Name of the
connector.
postConstants keyValuePair [0..unbounded]
When using the POST
method, constant
parameters to pass in
the URL.
postMethod boolean
Whether the HTTP
request type is POST
or GET.
l
True : HTTP POST.
l
False : HTTP GET.
postVariables keyValuePair [0..unbounded]
When using the POST
method, variable
parameters to pass in
the URL.
startPageText string
When using the POST
method, enables the
130 Configuration Web Services • Reference Guide

--- PAGE 131 ---
Data Types
webConnectorAgentAppType
Name Type Description
administrator to enter
text to be displayed in
the browser (or agent
Browser tab) while
waiting for the
completion of the
connector.
trigger webConnectorTriggerType
Available trigger
during a call when the
request is sent.
triggerDispositions string [0..unbounded]
When the trigger is
OnCallDispositione
d , specifies the trigger
dispositions.
url string
URL of the external
Web site.
variables keyValuePair [0..unbounded]
When using the POST
method, connectors
can include worksheet
data as parameter
values. The variable
placeholder values are
surrounded by @ signs.
For example, the
parameter ANI has the
value @Call.ANI@
webConnectorAgentAppType
Contains the types of browsers in which a connector can be open.
Name Type Description
EmbeddedBrowser string
Embedded browser window.
ExternalBrowser string
External browser window.
131 Configuration Web Services • Reference Guide

--- PAGE 132 ---
Data Types
webConnectorCTIWebServicesType
webConnectorCTIWebServicesType
Contains the possible browsers that can be used to open connectors when using the
CTI Web Services.
Name Type Description
CurrentBrowserWindow string
Current browser window.
NewBrowserWindow string
New browser window.
webConnectorTriggerType
Contains the possible connector triggers that can be used during a call.
Name Type Description
OnCallAccepted string
Triggered when the call is
accepted.
OnCallDisconnected string
Triggered when the call is
disconnected.
ManuallyStarted string
Connector is started
manually.
ManuallyStartedAllowDuringPreviews string
Connector is started
manually during call
preview.
OnPreview string
Triggered when the call is
previewed.
OnContactSelection string
Triggered when a contact is
selected.
OnWarmTransferInitiation string
Triggered when a warm
transfer is initiated.
OnCallDispositioned string
Triggered when a
disposition is selected.
OnChatArrival string
Triggered when a chat
Version 9.5
message is delivered to the
132 Configuration Web Services • Reference Guide

--- PAGE 133 ---
Data Types
wrongListDialingMode
Name Type Description
agent.
OnChatTransfer string
Triggered when a chat
Version 9.5
session is transferred.
OnChatTermination string
Triggered when the
Version 9.5
customer or the agent
closed the session, but the
agent has not yet set the
disposition.
OnChatClose string
Triggered when the
Version 9.5
disposition is set.
OnEmailArrival string
Triggered when an email
Version 9.5
message is delivered to the
agent.
OnEmailTransfer string
Triggered when an email
Version 9.5
message is transferred.
OnEmailClose string
Triggered when the
Version 9.5
disposition is set.
wrongListDialingMode
Version 9.3
Contains information about an error message.
Name Type Description
campaignName string
Name of the campaign.
message string
Error message.
wsObjectType
Contains the available filters that you can use in the reports.
133 Configuration Web Services • Reference Guide

--- PAGE 134 ---
Data Types
xFrameOption
Name Type Description
AgentGroup string
Agent group.
Campaign string
Campaign
CampaignProfile string
Campaign profile.
CrmField string
CRM field.
Disposition string
Disposition.
List string
Dialing list.
Prompt string
Prompt.
ReasonCode string
Reason code.
Skill string
Skill.
User string
User name.
UserProfile string
User profile.
IvrScript string
IVR script.
CallVariableGroup string
Call variable group.
CallVariable string
Call variable.
Connector string
Connector.
xFrameOption
Version 9.5
Contains the possible values of the X-Frame-Options header for your Visual IVR pages.
Name Type Description
string
Possible values:
l
DENY : No display even if the frame is located in the same
domain as the page. Cannot start a Visual IVR script with this
value. Use this value if you do not need to place a Visual IVR
link in an iframe. Most secure option.
l
SAME_ORIGIN : Display only if the frame is located in the same
domain as the page. Mostly for internal use because
customers cannot access internal Web pages.
134 Configuration Web Services • Reference Guide

--- PAGE 135 ---
Data Types
xFrameOption
Name Type Description
Example: The HTTP header of
http://shop.example.com/confirm.asp contains X-
FRAME-OPTIONS: SAME_ORIGIN . Any frame in the
http://shop.example.com domain can be displayed.
l
ALLOW_FROM : Display only if the frame is located in the domain
that you specify in the field.
Example: The HTTP header of
http://shop.example.com/confirm.asp contains X-
FRAME-OPTIONS: ALLOW_FROM
https://partner.affiliate.com . The page may be framed
only by pages in the https://partner.affiliate.com
domain.
135 Configuration Web Services • Reference Guide

--- PAGE 136 ---
Methods
This chapter contains these groups of methods:
Agent Groups List Management
Call Variables Locales and Languages
Campaign Configuration Prompt Management
Campaign Management Reason Codes
Campaign Profiles Reports
Connectors Session Information
Contact Fields Skill Management
Contact Management Speed Dial Information
Dialing Rules User Management
Disposition Configuration User Profiles
Domain Limits VCC Configuration
IVR Script
Agent Groups
createAgentGroup
Use this method to create an agent group. The group can be empty or contain agents.
createAgentGroup
Parameter Type Description
group agentGroup
Information about the group to create.
136 Configuration Web Services • Reference Guide

--- PAGE 137 ---
Methods
Agent Groups
createAgentGroupResponse
Parameter Type Description
group agentGroup
Information about the created group.
deleteAgentGroup
Deletes an agent group. Agents in the group are not deleted.
deleteAgentGroup
Parameter Type Description
groupName string
Name of the group.
deleteAgentGroupResponse
Empty.
getAgentGroup
Returns an agent group.
getAgentGroup
Parameter Type Description
groupName string
Name of the group.
getAgentGroupResponse
Parameter Type Description
return agentGroup
Information about the group.
getAgentGroups
Returns a list of agent groups whose names match a string pattern.
137 Configuration Web Services • Reference Guide

--- PAGE 138 ---
Methods
Call Variables
getAgentGroups
Parameter Type Description
groupNamePattern string
Name of the group or regular expression. For all
agent groups, use this pattern: .* .
getAgentGroupsResponse
Parameter Type Description
return agentGroup [0..unbounded]
Groups that match the pattern.
modifyAgentGroup
Updates an agent group.
modifyAgentGroup
Parameter Type Description
group agentGroup
Group to be modified with the name of an
existing group. If included, the new
parameters replace those of the existing
group.
addAgents string
List of agent names to be added to the
[0..unbounded]
group.
removeAgents string
List of agent names to be removed from the
[0..unbounded]
group.
modifyAgentGroupResponse
Empty.
Call Variables
138 Configuration Web Services • Reference Guide

--- PAGE 139 ---
Methods
Call Variables
createCallVariable
Creates a call variable.
createCallVariable
Parameter Type Description
variable callVariable
Information about a call variable.
createCallVariableResponse
Empty.
createCallVariablesGroup
Creates a call variables group.
createCallVariablesGroup
Parameter Type Description
name string
Name of call variables group.
description string
Comment about the group.
createCallVariablesGroupResponse
Empty.
deleteCallVariable
Deletes a call variable.
deleteCallVariable
Parameter Type Description
name string
Name of call variables group.
groupName string
Group name of call variable.
139 Configuration Web Services • Reference Guide

--- PAGE 140 ---
Methods
Call Variables
deleteCallVariableResponse
Empty.
deleteCallVariablesGroup
Deletes a group of call variables.
deleteCallVariablesGroup
Parameter Type Description
name string
Name of call variables group.
deleteCallVariablesGroupResponse
Empty.
getCallVariableGroups
Returns information about a group of call variables that match a pattern.
getCallVariableGroups
Parameter Type Description
namePattern string
Name of call variables group or regular expression. If
omitted, all call variables are returned.
getCallVariableGroupsResponse
Parameter Type Description
return callVariablesGroup
Call variables groups that match the
[0..unbounded]
pattern.
getCallVariables
Returns information about a group of call variables.
140 Configuration Web Services • Reference Guide

--- PAGE 141 ---
Methods
Call Variables
getCallVariables
Parameter Type Description
namePattern string
Name of call variables group or regular expression. If
omitted, all call variables are returned.
groupName string
Group name of call variables.
getCallVariablesResponse
Parameter Type Description
return callVariable [0..unbounded]
Call variables that match the
pattern.
modifyCallVariable
Replaces a call variable with another of the same name.
modifyCallVariable
Parameter Type Description
variable callVariable
New configuration for the call variable.
modifyCallVariableResponse
Empty.
modifyCallVariablesGroup
Updates the description of a call variables group.
modifyCallVariablesGroup
Parameter Type Description
name string
Name of group.
description string
New description of the group.
141 Configuration Web Services • Reference Guide

--- PAGE 142 ---
Methods
Campaign Configuration
modifyCallVariablesGroupResponse
Empty.
Campaign Configuration
Important
The names of campaigns and of their components, such as dispositions, need
to reflect their purpose in your business. Agents use these elements when
processing calls, voicemail, and callbacks. Therefore when creating campaigns
and dispositions, be sure to use meaningful names that have fewer than 50
characters so that agents can easily read the names.
addDispositionsToCampaign getListsForCampaign
addDNISToCampaign getOutboundCampaign
addListsToCampaign modifyAutodialCampaign
addSkillsToCampaign modifyCampaignLists
createAutodialCampaign modifyInboundCampaign
createInboundCampaign modifyOutboundCampaign
createOutboundCampaign removeDispositionsFromCampaign
deleteCampaign removeDNISFromCampaign
getAutodialCampaign removeListsFromCampaign
getCampaignDNISList removeSkillsFromCampaign
getCampaigns renameCampaign
getDNISList setDefaultIVRSchedule
getInboundCampaign
addDispositionsToCampaign
Adds a list of dispositions to a campaign. The dispositions must already be configured.
142 Configuration Web Services • Reference Guide

--- PAGE 143 ---
Methods
Campaign Configuration
addDispositionsToCampaign
Parameter Type Description
campaignName string
Name of campaign.
dispositions string
List of dispositions to add to
[0..unbounded]
the campaign.
isSkipPreviewDisposition boolean
For campaigns running in
preview mode, whether the
dispositions that are added
should be used as skip call
preview dispositions.
addDispositionsToCampaignResponse
Empty.
addDNISToCampaign
Adds DNIS (Dialed Number Identification Service) numbers to an inbound campaign. A
DNIS is a phone number that can be dialed by a caller. When calls are received from
that number, Five9 runs the IVR script associated with the campaign to which the DNIS
has been added.
addDNISToCampaign
Parameter Type Description
campaignName string
Name of campaign.
DNISList string [0..unbounded]
List of numbers to add to the
campaign.
addDNISToCampaignResponse
Empty.
addListsToCampaign
Adds dialing lists to an outbound campaign. The dialing lists must already be
configured.
143 Configuration Web Services • Reference Guide

--- PAGE 144 ---
Methods
Campaign Configuration
addListsToCampaign
Parameter Type Description
campaignName string
Name of campaign.
lists listState
Dialing lists to add to the campaign. This data
[0..unbounded]
type contains the campaign attributes of
each list.
addListsToCampaignResponse
Empty.
addSkillsToCampaign
Adds skills to the specified campaign. The skills must already be configured.
addSkillsToCampaign
Parameter Type Description
campaignName string
Name of campaign.
skills string [0..unbounded]
List of skills to add to the campaign.
addSkillsToCampaignResponse
Empty.
createAutodialCampaign
Creates an autodial campaign.
createAutodialCampaign
Parameter Type Description
campaign autodialCampaign
Attributes of the campaign.
144 Configuration Web Services • Reference Guide

--- PAGE 145 ---
Methods
Campaign Configuration
createAutodialCampaignResponse
Empty.
createInboundCampaign
Creates an inbound campaign.
Note: When using the ivrScriptSchedule in this method, only the default IVR
schedule can be set or modified via the API. Additionally, the name parameter
of the IVR script schedule object must be excluded.
createInboundCampaign
Parameter Type Description
campaign inboundCampaign
Attributes of the campaign.
createInboundCampaignResponse
Empty.
createOutboundCampaign
Creates an outbound campaign.
createOutboundCampaign
Parameter Type Description
campaign outboundCampaign
Attributes of the campaign.
createOutboundCampaignResponse
Empty.
145 Configuration Web Services • Reference Guide

--- PAGE 146 ---
Methods
Campaign Configuration
deleteCampaign
Deletes a campaign.
deleteCampaign
Parameter Type Description
campaignName string
Name of the campaign.
deleteCampaignResponse
Empty.
getAutodialCampaign
Returns the attributes of an autodial campaign.
getAutodialCampaign
Parameter Type Description
campaignName string
Name of the campaign.
getAutodialCampaignResponse
Parameter Type Description
return autodialCampaign
Name of the campaign.
getCampaigns
Returns a list of campaigns whose names match a string pattern. If no name is
specified, all the existing campaigns in the domain are returned.
146 Configuration Web Services • Reference Guide

--- PAGE 147 ---
Methods
Campaign Configuration
getCampaigns
Parameter Type Description
campaignNamePattern string
Name of the campaign or regular
expression that matches several
campaign names. For example, for all
campaigns, use this pattern: .* .
campaignType campaignType
Type of campaign: inbound, outbound,
or autodial.
getCampaignsResponse
Parameter Type Description
return campaign [0..unbounded]
Name and basic attributes of the
campaign.
getCampaignDNISList
Returns the list of DNIS associated with a campaign.
getCampaignDNISList
Parameter Type Description
campaignName string
Name of the campaign.
getCampaignDNISListResponse
Parameter Type Description
return string [0..unbounded]
List of DNIS associated with the campaign.
getDNISList
Returns the list of DNIS for the domain.
147 Configuration Web Services • Reference Guide

--- PAGE 148 ---
Methods
Campaign Configuration
getDNISList
Parameter Type Description
selectUnassigned boolean
Whether to return the list of DNIS unassigned to
a campaign:
l
True: the list is returned.
l
False: all DNIS provisioned for the domain
are returned.
getDNISListResponse
Parameter Type Description
return string
List of unassigned DNIS associated with the
[0..unbounded]
domain.
getInboundCampaign
Returns the attributes of an inbound campaign.
getInboundCampaign
Parameter Type Description
campaignName string
Name of the campaign.
getInboundCampaignResponse
Parameter Type Description
return inboundCampaign
Attributes of the campaign.
getListsForCampaign
Returns the attributes of the dialing lists associated with an outbound campaign.
148 Configuration Web Services • Reference Guide

--- PAGE 149 ---
Methods
Campaign Configuration
getListsForCampaign
Parameter Type Description
campaignName string
Name of the outbound campaign.
getListsForCampaignResponse
Parameter Type Description
return listState
List and attributes of dialing lists associated
[0..unbounded]
with this campaign.
getOutboundCampaign
Returns the attributes of an outbound campaign.
getOutboundCampaign
Parameter Type Description
campaignName string
Name of the outbound campaign.
getOutboundCampaignResponse
Parameter Type Description
return outboundCampaign
Attributes of the campaign.
modifyCampaignLists
Updates the lists and attributes of dialing lists associated with an outbound campaign.
modifyCampaignLists
Parameter Type Description
campaignName string
Name of the outbound campaign.
lists listState
List and attributes of dialing lists associated
[0..unbounded]
with this campaign.
149 Configuration Web Services • Reference Guide

--- PAGE 150 ---
Methods
Campaign Configuration
modifyCampaignListsResponse
Empty.
modifyAutodialCampaign
Updates attributes of an autodial campaign.
modifyAutodialCampaign
Parameter Type Description
campaign autodialCampaign
Attributes of autodial campaign.
modifyAutodialCampaignResponse
Empty.
modifyInboundCampaign
Updates the attributes of an inbound campaign.
modifyInboundCampaign
Parameter Type Description
campaign inboundCampaign
Attributes of inbound campaign.
modifyInboundCampaignResponse
Empty.
modifyOutboundCampaign
Updates the attributes of an outbound campaign.
150 Configuration Web Services • Reference Guide

--- PAGE 151 ---
Methods
Campaign Configuration
modifyOutboundCampaign
Parameter Type Description
campaign outboundCampaign
Attributes of outbound campaign.
modifyOutboundCampaignResponse
Empty.
removeDispositionsFromCampaign
Deleted the dispositions from a campaign.
removeDispositionsFromCampaign
Parameter Type Description
campaignName string
Name of campaign.
dispositions string
List of dispositions to remove from this
[0..unbounded]
campaign.
removeDispositionsFromCampaignResponse
Empty.
removeDNISFromCampaign
Removes a list of DNIS from a campaign. When calls are received at that number after
it has been removed from a campaign, a recording plays indicating the number is out of
service.
removeDNISFromCampaign
Parameter Type Description
campaignName string
Name of campaign.
DNISList string
List of DNIS to remove from this
[0..unbounded]
campaign.
151 Configuration Web Services • Reference Guide

--- PAGE 152 ---
Methods
Campaign Configuration
removeDNISFromCampaignResponse
Empty.
removeListsFromCampaign
Removes dialing lists from an outbound campaign.
removeListsFromCampaign
Parameter Type Description
campaignName string
Name of campaign.
lists string
List of dialing lists to remove from this
[0..unbounded]
campaign.
removeListsFromCampaignResponse
Empty.
removeSkillsFromCampaign
Removes skills from an outbound campaign.
removeSkillsFromCampaign
Parameter Type Description
campaignName string
Name of campaign.
skills string
List of skills to remove from this
[0..unbounded]
campaign.
removeSkillsFromCampaignResponse
Empty.
renameCampaign
Renames a campaign.
152 Configuration Web Services • Reference Guide

--- PAGE 153 ---
Methods
Campaign Management
renameCampaign
Parameter Type Description
campaignName string
Name of campaign.
campaignNewName string
New name of campaign.
renameCampaignResponse
Empty.
setDefaultIVRSchedule
Assigns a default IVR script to a campaign.
setDefaultIVRSchedule
Parameter Type Description
campaignName string
Name of campaign.
scriptName string
Name of the script.
params scriptParameterValue
List of external variables to
[0..unbounded]
set for the IVR script before
executing the script.
isVisualModeEnabled boolean
Whether Visual IVR is
Version 3
enabled in the campaign
schedule.
isChatEnabled boolean
Whether chat is enabled in
Version 3
the campaign schedule.
setDefaultIVRScheduleResponse
Empty.
Campaign Management
153 Configuration Web Services • Reference Guide

--- PAGE 154 ---
Methods
Campaign Management
asyncUpdateCampaignDispositions
Version 9.5
Updates campaign dispositions asynchronously.
Use this method to update the disposition of a small number of records. The method
returns an importIdentifier object that you can use to query the import status and
result. To check the status of the update, use the response identifier in the request of
getDispositionsImportResult .
asyncUpdateCampaignDispositions
Parameter Type Description
campaignName string
Name of
campaign.
dispositionsUpdateSettings dispositionsUpdateSettings
Update
settings.
importData importData
List of
dispositions to
be imported.
asyncUpdateCampaignDispositionsResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. Use this
identifier to check the import status and result.
forceStopCampaign
Stops a campaign, which immediately disconnects all active calls.
forceStopCampaign
Parameter Type Description
campaignName string
Name of campaign.
154 Configuration Web Services • Reference Guide

--- PAGE 155 ---
Methods
Campaign Management
forceStopCampaignResponse
Empty.
getCampaignState
Returns the state of a campaign and track changes in the state of a campaign by using
long polling. The method returns the updated state or the current state after the time-
out.
getCampaignState
Parameter Type Description
campaignName string
Name of campaign.
waitUntilChange long
Optional duration in seconds to wait for changes. If
omitted, the response is returned immediately.
getCampaignStateResponse
Parameter Type Description
Current state of the campaign, which may be running, not
return campaignState
running, starting, or stopping.
getCampaignStrategies
Version 4
Returns a list of strategies for the specified campaign.
getCampaignStrategies
Parameter Type Description
campaignName string
Name of campaign.
getCampaignStrategiesResponse
Parameter Type Description
return campaignStrategies
List of strategies.
155 Configuration Web Services • Reference Guide

--- PAGE 156 ---
Methods
Campaign Management
getDispositionsImportResult
Returns details about the imported dispositions.
getDispositionsImportResult
Parameter Type Description
identifier importIdentifier
Identifier of the import session, which was
returned in the response to the import
request.
getDispositionsImportResultResponse
Parameter Type Description
return dispositionsImportResult
Result of disposition import
operation.
resetCampaign
Resets the campaign to redial every number, except for numbers on the Do-Not-Call
list.
resetCampaign
Parameter Type Description
campaignName string
Name of campaign.
resetCampaignResponse
Empty.
resetCampaignDispositions
Resets the dispositions of the campaign list records that match the dispositions. Calls
that occurred during the date and time interval are reset so that the contacts can be
dialed again if their disposition included in the list of dispositions.
156 Configuration Web Services • Reference Guide

--- PAGE 157 ---
Methods
Campaign Management
resetCampaignDispositions
Parameter Type Description
campaignName string
Name of campaign.
dispositions string
List of dispositions to reset.
[0..unbounded]
after dateTime
Start time of the call interval. The start time
is not included in the interval.
before dateTime
End time of the call interval. The end time is
not included in the interval.
resetCampaignDispositionsResponse
Empty.
resetListPosition
Resets to the beginning the dialing lists position of an outbound campaign. By default,
the dialer attempts to dial all the records in campaign lists before restarting. In some
cases, you may need to start dialing from the beginning of the lists. To do so, use the
resetListPosition method to reset campaign lists position to the first record in the
dialing lists, based on the record order at list upload.
resetListPosition
Parameter Type Description
campaignName string
Name of campaign.
resetListPositionResponse
Empty.
setCampaignStrategies
Version 4
Updates the strategies for the specified campaign.
157 Configuration Web Services • Reference Guide

--- PAGE 158 ---
Methods
Campaign Management
setCampaignStrategies
Parameter Type Description
campaignName string
Name of campaign.
campaignStrategies campaignStrategies
List of updated strategies.
setCampaignStrategiesResponse
Empty.
startCampaign
Starts a campaign.
startCampaign
Parameter Type Description
campaignName string
Name of campaign.
startCampaignResponse
Empty.
stopCampaign
Stops a campaign.
stopCampaign
Parameter Type Description
campaignName string
Name of campaign.
stopCampaignResponse
Empty.
158 Configuration Web Services • Reference Guide

--- PAGE 159 ---
Methods
Campaign Management
updateDispositions
Updates batches of disposition values in a campaign. Records are passed as a two-
dimensional array (collection of strings).
Sets or resets a disposition for the specified records. Each request can contain up to
50,000 records. To check the status of the update, use the response identifier in the
request of getDispositionsImportResult .
updateDispositions
Parameter Type Description
campaignName string
Name of
campaign.
DispositionsUpdateSettings dispositionsUpdateSettings
Update
settings.
Note: This is case
sensitive.
importData importData
List of
dispositions to
be imported.
updateDispositionsResponse
Parameter Type Description
return importIdentifier
Identifier for the requested dispositions import.
This identifier can be used to check import
status and outcome.
updateDispositionsCsv
Updates batches of disposition values in a campaign. Records are passed as a string of
comma-separated values. The method returns an importIdentifier that you can use to
query import state and import result. To check the status of the update, use the
response identifier in the request of getDispositionsImportResult .
159 Configuration Web Services • Reference Guide

--- PAGE 160 ---
Methods
Campaign Management
updateDispositionsCsv
Parameter Type Description
campaignName string
Name of
campaign.
DispositionsUpdateSettings dispositionsUpdateSettings
Update
settings.
Note: This is case
sensitive.
csvData string
List of
dispositions to
be imported in
CSV format.
updateDispositionsCsvResponse
Parameter Type Description
return importIdentifier
Identifier for the requested dispositions import.
This identifier can be used to check import
status and outcome.
updateDispositionsFtp
Updates batches of disposition values in a campaign, based on data contained in a file
obtained from an FTP server.
Parameter Type Description
campaignName string
Name of campaign.
updateSettings dispositionsUpdateSettings
Update settings.
ftpSettings ftpImportSettings
FTP settings.
updateDispositionsFtpResponse
Empty.
160 Configuration Web Services • Reference Guide

--- PAGE 161 ---
Methods
Campaign Profiles
Campaign Profiles
createCampaignProfile
Creates a campaign profile.
createCampaignProfile
Parameter Type Description
campaignProfile campaignProfileInfo
Configuration of a campaign
profile.
createCampaignProfileResponse
Parameter Type Description
return campaignProfileInfo
New campaign profile.
deleteCampaignProfile
Deletes a campaign profile.
deleteCampaignProfile
Parameter Type Description
profileName string
Name of campaign profile.
deleteCampaignProfileResponse
Empty.
getCampaignProfileDispositions
Returns information about the dispositions of a campaign profile.
161 Configuration Web Services • Reference Guide

--- PAGE 162 ---
Methods
Campaign Profiles
getCampaignProfileDispositions
Parameter Type Description
profileName string
Name of campaign profile.
getCampaignProfileDispositionsResponse
Parameter Type Description
return dispositionCount [0..unbounded]
Dispositions for the profile.
getCampaignProfileFilter
Returns information about the filter of a campaign profile.
getCampaignProfileFilter
Parameter Type Description
profileName string
Name of campaign profile.
getCampaignProfileFilterResponse
Parameter Type Description
return campaignProfileFilter
Filter configuration for the profile.
getCampaignProfiles
Returns information about campaign profiles that match a pattern.
getCampaignProfiles
Parameter Type Description
namePattern string
Name of campaign profile or regular expression. If
omitted, all profiles are returned.
162 Configuration Web Services • Reference Guide

--- PAGE 163 ---
Methods
Campaign Profiles
getCampaignProfilesResponse
Parameter Type Description
return campaignProfileInfo
Campaign profiles that match the
[0..unbounded]
pattern.
modifyCampaignProfile
Updates a campaign profile.
modifyCampaignProfile
Parameter Type Description
campaignProfile campaignProfileInfo
Configuration of campaign profile.
modifyCampaignProfileResponse
Empty.
modifyCampaignProfileCrmCriteria
Updates the CRM filters of a campaign profile.
modifyCampaignProfileCrmCriteria
Parameter Type Description
profileName string
Name of campaign profile.
grouping crmCriteriaGrouping
Filter relationship between
the criteria.
addCriteria campaignFilterCriterion
Criteria to add to the
[0..unbounded]
profile.
removeCriteria campaignFilterCriterion
Criteria to remove from
[0..unbounded]
profile.
modifyCampaignProfileCrmCriteriaResponse
Empty.
163 Configuration Web Services • Reference Guide

--- PAGE 164 ---
Methods
Campaign Profiles
modifyCampaignProfileFilterOrder
Updates the criteria by which to dial the records of a campaign profile.
modifyCampaignProfileFilterOrder
Parameter Type Description
campaignProfile string
Name of campaign profile.
addOrderByField orderByField
List, priority, and order of columns
[0..unbounded]
to sort.
removeOrderByField string
Name of the contact field to remove
[0..unbounded]
from the filter order.
modifyCampaignProfileFilterOrderResponse
Empty.
modifyCampaignProfileDispositions
Updates the disposition count limits for a campaign. If a campaign with this profile
reaches the maximum count for a disposition, the campaign stops automatically.
modifyCampaignProfileDispositions
Parameter Type Description
profileName string
Name of campaign profile.
addDispositionCounts dispositionCount
Limits for the number of
[0..unbounded]
dispositions.
removeDispositionCounts dispositionCount
Disposition limits to
[0..unbounded]
remove from the profile.
modifyCampaignProfileDispositionsResponse
Empty.
164 Configuration Web Services • Reference Guide

--- PAGE 165 ---
Methods
Connectors
Connectors
Connectors enable you to transfer information about a call to a third-party service
when one of these events occurs:
l
A contact record is selected.
l
A call is accepted, disconnected, or assigned a disposition.
l
A preview record is delivered to the agent.
l
The agent initiates a warm transfer.
l
The agent triggers a manual connector.
createWebConnector
Creates a web connector.
createWebConnector
Parameter Type Description
connector webConnector
Name and configuration of Web connector.
createWebConnectorResponse
Empty.
deleteWebConnector
Deletes a web connector.
deleteWebConnector
Parameter Type Description
name string
Name of Web connector.
deleteWebConnectorResponse
Empty.
165 Configuration Web Services • Reference Guide

--- PAGE 166 ---
Methods
Contact Fields
getWebConnectors
Returns the configuration of Web connectors.
getWebConnectors
Parameter Type Description
namePattern string
Regular expression. If omitted, all objects are returned.
getWebConnectorsResponse
Parameter Type Description
return webConnector
Web connectors that match the name
[0..unbounded]
pattern.
modifyWebConnector
Updates a Web connector.
modifyWebConnector
Parameter Type Description
connector webConnector
Name and configuration of the connector.
modifyWebConnectorResponse
Empty.
Contact Fields
166 Configuration Web Services • Reference Guide

--- PAGE 167 ---
Methods
Contact Fields
createContactField
Creates custom contact fields. When creating contact fields, campaigns must not be
running.
createContactField
Parameter Type Description
field contactField
New contact field.
createContactFieldResponse
Empty.
deleteContactField
Deletes a contact field. When deleting contact fields, campaigns must not be running.
deleteContactField
Parameter Type Description
fieldName string
Name of contact field.
deleteContactFieldResponse
Empty.
getContactFields
Returns the configuration of contact fields.
getContactFields
Parameter Type Description
namePattern string
Regular expression. If omitted, all objects are returned.
167 Configuration Web Services • Reference Guide

--- PAGE 168 ---
Methods
Contact Management
getContactFieldsResponse
Parameter Type Description
return contactField
Contact fields that match the name
[0..unbounded]
pattern.
modifyContactField
Updates a contact field. When modifying contact fields, campaigns must not be
running.
modifyContactField
Parameter Type Description
field contactField
Contact field configuration.
modifyContactFieldResponse
Empty.
Contact Management
You can add and update contact database records in XML or CSV format.
asyncUpdateCrmRecords
Updates up to 100 records in the contact database.
To check the status of the update, use the response identifier in the request of
getCrmImportResult .
168 Configuration Web Services • Reference Guide

--- PAGE 169 ---
Methods
Contact Management
asyncUpdateCrmRecords
Parameter Type Description
crmUpdateSettings crmUpdateSettings
Update options.
importData importData
List of records to update.
asyncUpdateCrmRecordsResponse
Parameter Type Description
return importIdentifier
Identifier for the request. This identifier can be
used to check status and result.
deleteFromContacts
Deletes batches from the contact database based on the specified import settings.
Records are passed as a two-dimensional string array.
To check the status of the update, use the response identifier in the request of
getCrmImportResult .
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To delete single
records while an outbound campaign is running, use deleteRecordFromList
instead. To delete up to 100 records, use asyncDeleteRecordsFromList . If you
require a larger batch, contact your Five9 representative.
deleteFromContacts
Parameter Type Description
crmDeleteSettings crmDeleteSettings
Deletion options.
importData importData
List of XML-formatted records to
delete.
169 Configuration Web Services • Reference Guide

--- PAGE 170 ---
Methods
Contact Management
deleteFromContactsResponse
Parameter Type Description
return importIdentifier
Identifier for the request. This identifier can be
used to check status and result.
deleteFromContactsCsv
Deletes batches of records from the contact database based on the specified import
settings. Records are passed as a two-dimensional string array.
To check the status of the update, use the response identifier in the request of
getCrmImportResult .
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To delete single
records while an outbound campaign is running, use deleteRecordFromList
instead. To delete up to 100 records, use asyncDeleteRecordsFromList . If you
require a larger batch, contact your Five9 representative.
deleteFromContactsCsv
Parameter Type Description
crmDeleteSettings crmDeleteSettings
Deletion options.
csvData string
List of CSV-formatted records to
delete.
deleteFromContactsCsvResponse
Parameter Type Description
return importIdentifier
Identifier for the request. This identifier can be
used to check status and result.
170 Configuration Web Services • Reference Guide

--- PAGE 171 ---
Methods
Contact Management
deleteFromContactsFtp
Deletes batches of records by FTP. For more information about the format of the file
obtained from the FTP server, refer to the Administrator’s Guide.
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To delete single
records while an outbound campaign is running, use deleteRecordFromList
instead. To delete up to 100 records, use asyncDeleteRecordsFromList . If you
require a larger batch, contact your Five9 representative.
deleteFromContactsFtp
Parameter Type Description
DeleteSettings crmDeleteSettings
Deletion options.
ftpSettings ftpImportSettings
FTP settings.
deleteFromContactsFtpResponse
Empty.
getContactRecords
Returns one or more records from the contact database.
getContactRecords
Parameter Type Description
lookupCriteria crmLookupCriteria
Search criteria.
getContactRecordsResponse
Parameter Type Description
return contactsLookupResult
Description of the results.
171 Configuration Web Services • Reference Guide

--- PAGE 172 ---
Methods
Contact Management
getCrmImportResult
Returns the result of the contact records import process.
getCrmImportResult
Parameter Type Description
identifier importIdentifier
Identifier for the imported data.
getCrmImportResultResponse
Parameter Type Description
return crmImportResult
Description of the results.
updateContacts
Updates batches of records in the contact database. Records are passed as a two-
dimensional string array. To check the status of the update, use the response identifier
in the request of getCrmImportResult .
Note
In the process of creating and updating records, with multiple files/loads at once, if the
same record is being deleted before the list is completed, there is a possibility that the
deletion will occur before the update. This can result in the record being recreated with
the new updates.
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To update single
records while an outbound campaign is running, use updateCrmRecord instead. To
update up to 100 records, use asyncUpdateCrmRecords .
updateContacts
Parameter Type Description
crmUpdateSettings crmUpdateSettings
Options that determine how
contact records are updated.
importData importData
XML-formatted data to import.
172 Configuration Web Services • Reference Guide

--- PAGE 173 ---
Methods
Contact Management
updateContactsResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. This identifier
can be used to check import status and result.
updateContactsCsv
Updates batches of records in CSV format. Records are passed as a two-dimensional
string array. To check the status of the update, use the response identifier in the
request of getCrmImportResult .
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To update single
records while an outbound campaign is running, use updateCrmRecord instead. To
update up to 100 records, use asyncUpdateCrmRecords .
updateContactsCsv
Parameter Type Description
crmUpdateSettings crmUpdateSettings
Options that determine how
contact records are updated.
csvData string
Data in CSV format to be imported
to the Contacts database.
updateContactsCsvResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. This identifier
can be used to check import status and result.
updateContactsFtp
Imports batches of records by using FTP. For information about the format of the file
obtained from the FTP server, see the Administrator’s Guide.
173 Configuration Web Services • Reference Guide

--- PAGE 174 ---
Methods
Contact Management
Important
Because this batch method affects the performance of the dialer and uses significant
database resources, use this method only during off-peak periods. To update single
records while an outbound campaign is running, use updateCrmRecord instead. To
update up to 100 records, use asyncUpdateCrmRecords .
updateContactsFtp
Parameter Type Description
updateSettings crmUpdateSettings
Options that determine how contact
records are updated.
ftpSettings ftpImportSettings
FTP settings.
updateContactsFtpResponse
This method contains no parameters.
updateCrmRecord
Updates single records.
updateCrmRecord
Parameter Type Description
crmUpdateSettings crmUpdateSettings
Options that determine how
contact records are updated.
record recordData
Contact record to be updated.
updateCrmRecordResponse
Parameter Type Description
return crmImportResult
Result of the update request.
174 Configuration Web Services • Reference Guide

--- PAGE 175 ---
Methods
Dialing Rules
Dialing Rules
getDialingRules
Returns details about existing dialing rules.
getDialingRules
Parameter Type Description
namePattern string
Optional regular expression that matches one or more
dialing rules. If omitted, all objects are returned.
getDialingRulesResponse
Parameter Type Description
return dialingRule [0..unbounded]
Configuration details of dialing rules.
setDialingRules
Creates, modifies, or deletes dialing rules.
setDialingRules
Parameter Type Description
setRules dialingRule
Dialing rules to create or modify. If a rule
[0..unbounded]
exists with the same name, it is replaced with
the new configuration.
removeRules string
Names of the dialing rules to delete.
[0..unbounded]
setDialingRulesResponse
Empty.
175 Configuration Web Services • Reference Guide

--- PAGE 176 ---
Methods
Disposition Configuration
Disposition Configuration
createDisposition
Creates a disposition.
createDisposition
Parameter Type Description
disposition disposition
Name and attributes of the disposition.
createDispositionResponse
Empty.
getDisposition
Returns the attributes of a disposition.
getDisposition
Parameter Type Description
dispositionName string
Name of disposition.
getDispositionResponse
Parameter Type Description
return disposition
Name and attributes of disposition.
getDispositions
Returns the attributes of the dispositions that match a name pattern.
176 Configuration Web Services • Reference Guide

--- PAGE 177 ---
Methods
Disposition Configuration
getDispositions
Parameter Type Description
dispositionNamePattern string
Name pattern to be compared to the
disposition names in the domain.
getDispositionsResponse
Parameter Type Description
return disposition
Attributes of the dispositions that match
[0..unbounded]
the pattern.
modifyDisposition
Updates the attributes of a disposition.
modifyDisposition
Parameter Type Description
disposition disposition
Name and attributes of disposition.
modifyDispositionResponse
Empty.
removeDisposition
Deletes a disposition from the configuration.
removeDisposition
Parameter Type Description
dispositionName string
Name of the disposition.
removeDispositionResponse
Empty.
177 Configuration Web Services • Reference Guide

--- PAGE 178 ---
Methods
Domain Limits
renameDisposition
Updates a disposition.
renameDisposition
Parameter Type Description
dispositionName string
Name of the disposition.
dispositionNewName string
New name of the disposition.
renameDispositionResponse
Empty.
Domain Limits
For security reasons, Five9 has implemented default limits for each type of Web
Services request. If you require higher limits for some types of requests, contact Five9
Customer Support.
Important
API request limits may change over time. To ensure that you always know the correct
limits for your domain, use getCallCountersState . The response contain the cur-
rent limits for each type of request in the table below.
The minute, hour, or day count starts at the beginning of the time interval at the
location of the data center, including its time zone.
If you start to send requests at 9:30 PM in California, the hourly interval ends at 10:00
PM. At that time, the limit is reset for the next hour.
If your production domain has 4000 agents, calculate as follows the number of records
that you can update or insert each hour with asyncUpdateCrmRecords . Your domain
may have different limits from those in the example.
Maximum number of requests each hour: 1000
X
Maximum number of records in each request: 100
178 Configuration Web Services • Reference Guide

--- PAGE 179 ---
Methods
Domain Limits
Result: 100,000 records
Types of API Requests Minute Hour Day
Query 450 172800
15000
getContactRecords returns a maximum of
1000 records.
checkDncForNumbers, getAgentGroup,
getAgentGroups, getAutodialCampaign,
getCallVariableGroups, getCallVariables,
getCampaignDNISList,
getCampaignProfileDispositions,
getCampaignProfileFilter,
getCampaignProfiles, getCampaigns,
getCampaignState, getContactFields,
getContactRecords, getCrmImportResult,
getDialingRules, getDisposition,
getDispositionsImportResult,
getDispositions, getDNISList,
getInboundCampaign, getIVRScripts,
getListImportResult, getListsForCampaign,
getListsInfo, getOutboundCampaign,
getPrompt, getReasonCodeByType,
getReasonCode, getSkillInfo, getSkill,
getSkillsInfo, getSkills,
getSkillVoicemailGreeting,
getUserGeneralInfo, getUserInfo,
getUserProfile, getUserProfiles,
getUsersGeneralInfo, getUserInfo,
getUserVoicemailGreeting,
getVCCConfiguration, getWebConnectors,
isImportRunning, and isReportRunning
Modify (creating, modifying, or deleting 140 172800
7200
values or objects)
addDispositionsToCampaign,
addDNISToCampaign, addListsToCampaign,
addNumbersToDnc, addPromptTTS,
addPromptWavInline, addPromptWav,
addSkillsToCampaign, createAgentGroup,
createAutodialCampaign,
createCallVariable,
createCallVariablesGroup,
createCampaignProfile, createContactField,
createDisposition, createInboundCampaign,
createIVRScript, createList,
createOutboundCampaign, createReasonCode,
createSkill, createUser,
createUserProfile, createWebConnector,
179 Configuration Web Services • Reference Guide

--- PAGE 180 ---
Methods
Domain Limits
Types of API Requests Minute Hour Day
deleteAgentGroup, deleteCallVariable,
deleteCallVariablesGroup, deleteCampaign,
deleteCampaignProfile, deleteContactField,
deleteIVRScript, deleteList, deletePrompt,
deleteReasonCodeByType, deleteReasonCode,
deleteSkill, deleteUser,
deleteUserProfile, deleteWebConnector,
forceStopCampaign, modifyAgentGroup,
modifyAutodialCampaign,
modifyCallVariable,
modifyCallVariablesGroup,
modifyCampaignLists,
modifyCampaignProfileCrmCriteria,
modifyCampaignProfileDispositions,
modifyCampaignProfileFilterOrder,
modifyCampaignProfile, modifyContactField,
modifyDisposition, modifyInboundCampaign,
modifyIVRScript, modifyOutboundCampaign,
modifyPromptTTS, modifyPromptWavInline,
modifyPromptWav, modifyReasonCode,
modifySkill, modifyUserCannedReports,
modifyUser, modifyUserProfile,
modifyUserProfileSkills,
modifyUserProfileUserList,
modifyVCCConfiguration,
modifyWebConnector, removeDisposition,
removeDispositionsFromCampaign,
removeDNISFromCampaign,
removeListsFromCampaign,
removeNumbersFromDnc,
removeSkillsFromCampaign, renameCampaign,
renameDisposition,
resetCampaignDispositions, resetCampaign,
resetListPosition, setDefaultIVRSchedule,
setDialingRules,
setSkillVoicemailGreeting,
setUserVoicemailGreeting, startCampaign,
stopCampaign, userSkillAdd,
userSkillModify, userSkillRemove
Importing single records 160 172800
7200
addRecordToList, deleteRecordFromList,
updateCrmRecord
Importing multiple records asynchronously 20 2000
1000
You can upload up to 100 records in each
request.
asyncAddRecordsToList,
asyncDeleteRecordsFromList,
asyncUpdateCampaignDispositions,
asyncUpdateCrmRecords
180 Configuration Web Services • Reference Guide

--- PAGE 181 ---
Methods
Domain Limits
Types of API Requests Minute Hour Day
Generating reports 16 800
120
runReport
Retrieving reports 20 1000
200
You can retrieve up to 50,000 records in
each report. For other reporting limits,
refer to the Dashboard and Reporting
User’s Guide .
getReportResultCsv, getReportResult
Uploading 20 2000
400
You can upload up to 50,000 records in
each request.
addNumbersToDnc, addToList, addToListCsv,
addToListFtp, deleteAllFromList,
deleteFromContactsCsv,
deleteFromContactsFtp, deleteFromContacts,
deleteFromList, deleteFromListCsv,
deleteFromListFtp, updateContacts,
updateContactsCsv, updateContactsFtp,
updateDispositions, updateDispositionsCsv,
and updateDispositionsFtp
getCallCountersState
Returns your domain’s request limits.
No limit is set for this request. However, Five9 recommends that you do not use it
excessively.
getCallCountersState
This method contains no parameters.
getCallCountersStateResponse
Parameter Type Description
return limitTimeoutState
Collection of limits for different request types.
181 Configuration Web Services • Reference Guide

--- PAGE 182 ---
Methods
IVR Script
IVR Script
These methods allow you to manage Interactive Voice Response (IVR) scripts, which are
visual devices for routing calls in inbound and autodial campaigns.
createIVRScript
Creates an IVR script. To add details, use modifyIVRScript.
createIVRScript
Parameter Type Description
name string
Name of script.
createIVRScriptResponse
Parameter Type Description
return ivrScriptDef
Name and description of script.
deleteIVRScript
Deletes an IVR script.
deleteIVRScript
Parameter Type Description
name string
Name of script.
deleteIVRScriptResponse
Empty.
182 Configuration Web Services • Reference Guide

--- PAGE 183 ---
Methods
IVR Script
getIVRScripts
Returns information about IVR scripts.
getIVRScripts
Parameter Type Description
namePattern string
Regular expression for the script names. If omitted, all
objects are returned.
getIVRScriptsResponse
Parameter Type Description
return ivrScriptDef [0..unbounded]
Name and description of scripts.
modifyIVRScript
Updates an IVR script.
modifyIVRScript
Parameter Type Description
scriptDef ivrScriptDef
Name and description of scripts.
modifyIVRScriptResponse
Empty.
setIvrScriptOwnership
Version 10
Sets the ownership information for an IVR script.
183 Configuration Web Services • Reference Guide

--- PAGE 184 ---
Methods
IVR Script
setIvrScriptOwnership
Parameter Type Description
ivrScriptName string
Name of script.
othersCanCopy boolean
Whether other users can copy the script.
setIvrScriptOwnershipResponse
Empty.
getIvrScriptOwnership
Version 10
Gets the ownership information for an IVR script.
getIvrScriptOwnership
Parameter Type Description
ivrScriptName string
Name of script.
getIvrScriptOwnershipResponse
Parameter Type Description
return ivrScriptOwnership
Script ownership information.
removeIvrScriptOwnership
Version 10
Removes the ownership from an IVR script.
removeIvrScriptOwnership
Parameter Type Description
ivrScriptName string
Name of script.
184 Configuration Web Services • Reference Guide

--- PAGE 185 ---
Methods
IVR Script
removeIvrScriptOwnershipResponse
Empty.
setIvrIcons
Version 10
Sets the icon graphics data for an IVR script.
setIvrIcons
Parameter Type Description
ivrIcons ivrIcons
Icons.
ivrScriptName string
Name of script.
setIvrIconsResponse
Empty.
getIvrIcons
Version 10
Gets the icon graphics data for an IVR script.
getIvrIcons
Parameter Type Description
ivrScriptName string
Name of script.
getIvrIconsResponse
Parameter Type Description
ivrIcons ivrIcons
Icons.
185 Configuration Web Services • Reference Guide

--- PAGE 186 ---
Methods
List Management
removeIvrIcons
Version 10
Removes the icon graphics data from an IVR script.
removeIvrIcons
Parameter Type Description
ivrScriptName string
Name of script.
removeIvrIconsResponse
Empty.
List Management
You can create, delete, and modify dialing lists. You can add, modify, or delete records
to/from a list.
addNumbersToDnc
Adds phone numbers to your domain’s do-not-call (DNC) list. Because these lists are
typically very large, you can import them only from 11:00 PM – 6:00 AM Pacific Time. If
you use this method at other times, you receive an exception.
addNumbersToDnc
Parameter Type Description
numbers string [0..unbounded]
List of numbers to add to the list.
addNumbersToDncResponse
Parameter Type Description
return int
Number of records added to the DNC list.
186 Configuration Web Services • Reference Guide

--- PAGE 187 ---
Methods
List Management
addRecordToList
Adds a record to a list. If a corresponding record does not already exist in the contact
database, a new record is added. Otherwise, the existing record is updated based on
the options settings.
Important
To import large numbers of records, use addToList or addToListCsv .
addRecordToList
Parameter Type Description
listName string
Name of list.
listUpdateSettings listUpdateSettings
List update settings.
record recordData
Data to import.
addRecordToListResponse
Parameter Type Description
return listImportResult
Result of the addition.
addRecordToListSimple
Version 3
Adds a record to a list instead of addRecordToList if you need only a few parameters.
Because this method is simpler, it is faster than addRecordToList. If a corresponding record
does not exist in the contact database, a new record is added. Otherwise, the existing
record is updated according to the parameters.
Important
To import large numbers of records, use addToList or addToListCsv .
Because addRecordToListSimple does not have a duplicate records flag, if the list
record has more than two matches, the behavior is as follows:
187 Configuration Web Services • Reference Guide

--- PAGE 188 ---
Methods
List Management
l
No contact field data is updated.
l
No record is added to the list.
l
Users receive this fault: More than one record matches specified criteria.
This behavior is equivalent to this:
l
crmUpdateMode = UPDATE_SOLE_MATCHES
l listAddMode = ADD_IF_SOLE_CRM_MATCH
addRecordToListSimple
Parameter Type Description
listName string
Name of list.
listUpdateSimpleSettings listUpdateSimpleSettings
List update
settings.
record recordData
Data to import.
addRecordToListSimpleResponse
Empty.
addToList
Imports batches of list records into a list. Depending on the settings, importing records
may affect the contact database records. Records are passed as a two-dimensional
array (collection of strings). To check the status of the update, use the response
identifier in the request of getListImportResult .
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To insert single records while an outbound campaign is
running, use a ddRecordToListSimple instead. To insert up to 100 records,
use asyncAddRecordsToList .
188 Configuration Web Services • Reference Guide

--- PAGE 189 ---
Methods
List Management
addToList
Parameter Type Description
listName string
Name of list.
listUpdateSettings listUpdateSettings
List update settings.
importData importData
Data to import.
addToListResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. Can be used to
check import status and result.
addToListCsv
Imports batches of records into a list. Depending on the import settings, contact
records may be affected. Records are passed as a string of comma-separated values. To
check the status of the update, use the response identifier in the request of
getListImportResult .
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To insert single records while an outbound campaign is
running, use addRecordToListSimple instead. To insert up to 100 records,
use asyncAddRecordsToList .
addToListCsv
Parameter Type Description
listName string
Name of list.
listUpdateSettings listUpdateSettings
List update settings.
csvData string
Data to import. Fields are
separated by commas; records
are separated by new lines.
189 Configuration Web Services • Reference Guide

--- PAGE 190 ---
Methods
List Management
addToListCsvResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. Can be used to
check import status and result.
addToListFtp
Imports by FTP a batch of list records. Depending on the settings, importing records
may affect the contact database records. Records are passed as a string of comma-
separated values. The method returns an identifier object that you can use to query the
import status and result. For more information about the format of the file obtained
from the FTP server, refer to the Administrator’s Guide.
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To insert single records while an outbound campaign is
running, use addRecordToListSimple instead. To insert up to 100 records,
use asyncAddRecordsToList .
addToListFtp
Parameter Type Description
listName string
Name of list.
updateSettings listUpdateSettings
List update settings.
ftpSettings ftpImportSettings
FTP settings.
addToListFtpResponse
Empty.
asyncAddRecordsToList
Adds up to 100 records to a list. If the records do not exist in the contact database, they
are added. Otherwise, the existing records are updated based on the list update
190 Configuration Web Services • Reference Guide

--- PAGE 191 ---
Methods
List Management
settings. To check the status of the update, use the response identifier in the request of
getListImportResult .
Important
To insert a large number of records, use addToList or addToListCsv .
asyncAddRecordsToList
Parameter Type Description
listName string
Name of list.
listUpdateSettings listUpdateSettings
List update
settings.
importData importData
Data to
import in XML
format.
resetDispositionsInCampaignsImportDa string
Optional list
ta [0..unbounded]
of campaign
Version 9.5
names in
which to reset
the
dispositions.
asyncAddRecordsToListResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. Can be used to
check import status and result.
asyncDeleteRecordsFromList
Deletes multiple records from a list. Use one of the deleteFromContacts methods to
delete a contact. To check the status of the update, use the response identifier in the
request of getListImportResult .
191 Configuration Web Services • Reference Guide

--- PAGE 192 ---
Methods
List Management
Important
Because this method affects the performance of the dialer, use this
method only during off-peak periods. To delete a large number of
records, use deleteFromList or deleteFromListCsv instead.
asyncDeleteRecordsFromList
Parameter Type Description
listName string
Name of list.
listDeleteSettings listDeleteSettings
List update settings.
importData importData
Records to be deleted.
asyncDeleteRecordsFromListResponse
Parameter Type Description
return importIdentifier
Identifier for the imported data. Can be used to
check import status and result.
checkDncForNumbers
Checks whether phone numbers are part of a DNC list. The response contains the
numbers found in the DNC list.
checkDncForNumbers
Parameter Type Description
numbers string
List of numbers to search in the DNC list. You may
[0..unbounded]
include up to 50000 phone numbers in a request.
checkDncForNumbersResponse
Parameter Type Description
return string [0..unbounded]
Numbers found in the DNC list.
192 Configuration Web Services • Reference Guide

--- PAGE 193 ---
Methods
List Management
createList
Creates a dialing list.
createList
Parameter Type Description
listName string
Name of list.
createListResponse
Empty.
deleteAllFromList
Deletes all records from a list.
To check the status of the update, use the response identifier in the request of
getListImportResult .
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To delete single records while an outbound campaign is
running, use deleteRecordFromList instead. To delete up to 100 records,
use asyncDeleteRecordsFromList . If you require a larger batch, contact
your Five9 representative.
deleteAllFromList
Parameter Type Description
listName string
Name of list.
reportEmail string
Email address for the deletion report.
callbackUrl string
URL for the HTTP callback.
Version 9.5
callbackFormat callbackFormat
File format returned by the client.
Version 9.5
193 Configuration Web Services • Reference Guide

--- PAGE 194 ---
Methods
List Management
deleteAllFromListResponse
Parameter Type Description
return importIdentifier
Identifier for the deleted data. Can be used to
check import status and result.
deleteFromList
Deletes batches of records from a list.
To check the status of the update, use the response identifier in the request of
getListImportResult .
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To delete single records while an outbound campaign is
running, use deleteRecordFromList instead. To delete up to 100 records,
use asyncDeleteRecordsFromList . If you require a larger batch, contact
your Five9 representative.
deleteFromList
Parameter Type Description
listName string
Name of list.
listDeleteSettings listDeleteSettings
List deletion settings.
importData importData
Records to delete from the list.
deleteFromListResponse
Parameter Type Description
return importIdentifier
Identifier for the deleted data. Can be used to
check import status and result.
194 Configuration Web Services • Reference Guide

--- PAGE 195 ---
Methods
List Management
deleteFromListCsv
Deletes batches of records from a list. Records are passed as a string of comma-
separated values.
To check the status of the update, use the response identifier in the request of
getListImportResult .
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To delete single records while an outbound campaign is
running, use deleteRecordFromList instead. To delete up to 100 records,
use asyncDeleteRecordsFromList . If you require a larger batch, contact
your Five9 representative.
deleteFromListCsv
Parameter Type Description
listName string
Name of list.
listDeleteSettings listDeleteSettings
List deletion settings.
csvData string
Records to remove from the list
in CSV format.
deleteFromListCsvResponse
Parameter Type Description
return importIdentifier
Identifier for the deleted data. Can be used to
check import status and result.
deleteFromListFtp
Removes batches of records from a list by FTP. For more information about the format
of the file obtained from the FTP server, refer to the Administrator’s Guide.
195 Configuration Web Services • Reference Guide

--- PAGE 196 ---
Methods
List Management
Important
Because this batch method affects the performance of the dialer and
uses significant database resources, use this method only during off-
peak periods. To delete single records while an outbound campaign is
running, use deleteRecordFromList instead. To delete up to 100 records,
use asyncDeleteRecordsFromList . If you require a larger batch, contact
your Five9 representative.
deleteFromListFtp
Parameter Type Description
listName string
Name of list.
deleteSettings listDeleteSettings
List deletion settings.
ftpSettings ftpImportSettings
FTP settings.
deleteFromListFtpResponse
Empty.
deleteList
Deletes a list from the Five9 configuration. Although the list is deleted, the contact
records remain in the Contact database.
deleteList
Parameter Type Description
listName string
Name of list.
deleteListResponse
Empty.
196 Configuration Web Services • Reference Guide

--- PAGE 197 ---
Methods
List Management
deleteRecordFromList
Deletes a record from a list. Use one of the deleteFromContacts methods to delete a
contact.
Important
Because this method affects the performance of the dialer, use this
method only during off-peak periods. To delete a large number of
records, use deleteFromList or deleteFromListCsv instead.
deleteRecordFromList
Parameter Type Description
listName string
Name of list.
listDeleteSettings listDeleteSettings
List deletion settings.
record recordData
Records to delete from the list.
deleteRecordFromListResponse
Parameter Type Description
return listImportResult
Result of the deletion.
getListImportResult
Returns the detailed outcome of a list import. The import is identified by the identifier
object returned in the list import response.
getListImportResult
Parameter Type Description
identifier importIdentifier
Identifier returned in one of the import
responses.
getListImportResultResponse
Parameter Type Description
return listImportResult
Detailed description of the import results.
197 Configuration Web Services • Reference Guide

--- PAGE 198 ---
Methods
List Management
getListsInfo
Returns the names and sizes of all the dialing lists in a domain. The request contains
the specified list name starts-with pattern. The response contains all the matching lists
in the Five9 domain where the Five9 user ID in the HTTP header is located. For more
information about the HTTP header, see Basic Access Authentication.
getListsInfo
Parameter Type Description
listNamePattern string
Pattern that is matched to the list names in the
user’s domain.
getListsInfoResponse
Parameter Type Description
return listInfo
All dialing lists in domain with the size of
[0..unbounded]
each list.
isImportRunning
Checks whether data is being imported by using the importIdentifier object returned in
the list import response. To track changes in the import process, use the waitTime
parameter (long-polling technique). The method returns the new state when it is
changed or the current state after the specified waitTime .
isImportRunning
Parameter Type Description
identifier importIdentifier
Identifier for the import session.
waitTime long
Optional number of seconds to wait for
changes. If not specified, This method
contains the result immediately.
isImportRunningResponse
Parameter Type Description
return boolean
Whether import is running.
198 Configuration Web Services • Reference Guide

--- PAGE 199 ---
Methods
Locales and Languages
removeNumbersFromDnc
Checks whether phone numbers are part of a DNC list. The response contains the
numbers found in the DNC list.
Note: For instructions on removing phone numbers from a DNC list, see
Managing Do Not Call Lists.
removeNumbersFromDnc
Parameter Type Description
numbers string [0..unbounded]
List of numbers to remove from the DNC
list.
removeNumbersFromDncResponse
Parameter Type Description
return int
0 if successful.
Locales and Languages
getAvailableLocales
getConfigurationTranslations
getLocale
setLocale
updateConfigurationTranslations
getAvailableLocales
Version 9.5
Returns the list of locales for the domain.
getAvailableLocales
Takes no parameters.
199 Configuration Web Services • Reference Guide

--- PAGE 200 ---
Methods
Locales and Languages
getAvailableLocalesResponse
Parameter Type Description
return string [0..unbounded]
List of available locales.
getConfigurationTranslations
Version 9.5
Returns configuration translations for the locale.
getConfigurationTranslations
Parameter Type Description
localeName string
Name of the locale.
getConfigurationTranslationsResponse
Parameter Type Description
return adminConfigTranslation
List of configuration translations
[0..unbounded]
for the locale.
getLocale
Version 9.5
Returns the name of the locale.
getLocale
Takes no parameters.
getLocaleResponse
Parameter Type Description
return string
Name of the locale.
200 Configuration Web Services • Reference Guide

--- PAGE 201 ---
Methods
Locales and Languages
setLocale
Version 9.5
Sets the name of the locale.
setLocale
Parameter Type Description
localeName string
Name of the locale.
setLocaleResponse
Empty.
updateConfigurationTranslations
Version 9.5
Updates the configuration translations for the locale.
updateConfigurationTranslations
Parameter Type Description
localeName string
Name of the locale.
diffTranslations adminConfigTranslation
List of configuration
[0..unbounded]
translations for the locale.
updateConfigurationTranslationsResponse
Parameter Type Description
translationsWithNonExistingKey adminConfigTranslation
Updated list of
[0..unbounded]
configuration
translations for
the locale.
201 Configuration Web Services • Reference Guide

--- PAGE 202 ---
Methods
Prompt Management
Prompt Management
addPromptTTS
Creates a prompt and to generate an audio file with text and text-to-speech settings.
addPromptTTS
Parameter Type Description
prompt promptInfo
New prompt attributes.
ttsInfo ttsInfo
Properties of the text-to-speech audio file.
addPromptTTSResponse
Empty.
addPromptWav
Creates a prompt and to upload a WAV audio file. For more information about the
supported WAV formats, refer to the Five9 Administrator’s Guide .
addPromptWav
Parameter Type Description
prompt promptInfo
New prompt attributes.
wavFile swaRef
WAV file attachment in a MIME package. For more
information, see Using swaRef.
addPromptWavResponse
Empty.
202 Configuration Web Services • Reference Guide

--- PAGE 203 ---
Methods
Prompt Management
addPromptWavInline
Creates a prompt and uploads an audio file in base-64 format.
addPromptWavInline
Parameter Type Description
prompt promptInfo
New prompt attributes.
wavFile base64Binary
WAV file attachment in a MIME package.
addPromptWavInlineResponse
Empty.
deleteLanguagePrompt
Version 9.5
Deletes a prompt in the specified language.
You cannot overwrite an existing prompt. If you try to modify a prompt in any
language, an exception occurs.
Each prompt can exist in only one version in each language. If you try to modify an
existing prompt, you get an exception. Therefore, use this method to delete the current
language version. Afterward, use one of the modification methods to upload the new
version.
deleteLanguagePrompt
Parameter Type Description
promptName string
Name of the prompt.
language string
Language of the prompt.
deleteLanguagePromptResponse
Empty.
203 Configuration Web Services • Reference Guide

--- PAGE 204 ---
Methods
Prompt Management
deletePrompt
Deletes a prompt.
deletePrompt
Parameter Type Description
promptName string
Name of prompt.
deletePromptResponse
Empty.
getPrompt
Returns the attributes of a prompt.
getPrompt
Parameter Type Description
promptName string
Name of prompt.
getPromptResponse
Parameter Type Description
return promptInfo
Prompt attributes.
getPrompts
Version 9.5
Returns a list of prompts.
getPrompts
Contains no parameters.
204 Configuration Web Services • Reference Guide

--- PAGE 205 ---
Methods
Prompt Management
getPromptsResponse
Parameter Type Description
prompts promptInfo [0..unbounded]
List of prompt attributes.
modifyPromptTTS
Updates the text-to-speech settings and the text of a prompt.
modifyPromptTTS
Parameter Type Description
prompt promptInfo
New prompt attributes.
ttsInfo ttsInfo
Properties of the text-to-speech audio file.
modifyPromptTTSResponse
Empty.
modifyPromptWav
Updates the settings and the audio file of a prompt.
modifyPromptWav
Parameter Type Description
prompt promptInfo
Prompt attributes.
wavFile swaref
WAV file attachment in a MIME package. For more
information, see the Web Services specifications.
modifyPromptWavResponse
Empty.
205 Configuration Web Services • Reference Guide

--- PAGE 206 ---
Methods
Reason Codes
modifyPromptWavInline
Updates the settings and the audio file of a prompt.
modifyPromptWavInline
Parameter Type Description
prompt promptInfo
Prompt attributes.
wavFile base64Binary
Prompt file, application/octet-stream.
modifyPromptWavInlineResponse
Empty.
Reason Codes
createReasonCode
Creates a reason code. The response contains an exception if a reason code with the
same name already exists or if the maximum number of reason codes has been
reached.
createReasonCode
Parameter Type Description
reasonCode reasonCode
Name and attributes of reason code.
createReasonCodeResponse
Empty.
deleteReasonCode
No longer used. Instead, use deleteReasonCodeByType .
206 Configuration Web Services • Reference Guide

--- PAGE 207 ---
Methods
Reason Codes
deleteReasonCodeByType
Deletes a reason code.
deleteReasonCodeByType
Parameter Type Description
reasonCodeName string
Name of reason code.
type reasonCodeType
Type of reason code.
deleteReasonCodeByTypeResponse
Empty.
getReasonCode
No longer used. Instead, use getReasonCodeByType .
getReasonCodeByType
Returns the details of a reason code.
getReasonCodeByType
Parameter Type Description
reasonCodeName string
Name of reason code.
type reasonCodeType
Type of reason code.
getReasonCodeByTypeResponse
Parameter Type Description
return reasonCode
Name and attributes of reason code.
207 Configuration Web Services • Reference Guide

--- PAGE 208 ---
Methods
Reports
modifyReasonCode
Updates a reason code.
modifyReasonCode
Parameter Type Description
reasonCode reasonCode
Name and attributes of reason code.
modifyReasonCodeResponse
Empty.
Reports
Important: When using the SOAP API reporting methods (e.g., runReport ,
getReportResult , getReportResultCsv , isReportRunning ), avoid running
reports frequently to retrieve near real-time data. Reports are not designed for
real-time data extraction. Consider alternative approaches for real-time data
needs.
Reports obtained with the API use the Pacific time zone, adjusted for daylight savings
time if needed. For example, for users in the Central time zone, the report time is
minus (-) 2 hours.
The methods runReport and get*Report* use the user’s configured locale. If no locale
is configured, the system defaults to the domain’s locale. The system follows this
process when searching for report folders or report names.
To generate and retrieve reports, use the methods in this order:
1 Authenticate the reporting user.
2 Send runReport .
3 Send isReportRunning repeatedly until the response is false, which indicates
that the report is completed.
4 To obtain the results, send getReportResults .
208 Configuration Web Services • Reference Guide

--- PAGE 209 ---
Methods
Reports
getReportResult
Returns the data from a report generated by runReport.
Important
For best results, Five9 recommends using the getReportResultCsv
method to return report data.
getReportResult
Parameter Type Description
identifier string
Unique identifier returned by runReport .
getReportResultResponse
Parameter Type Description
return reportRowData
Result of the report in table format (two-
dimensional array). The time zone is Pacific
Standard Time (PST). By default, the limit is 5,000
records.
getReportResultCsv
Returns the data from a report generated by runReport . The result of the report is in
CSV format.
Note: The CSV output will always use the original column names in English,
regardless of any modification applied elsewhere.
getReportResultCsv
Parameter Type Description
identifier string
Unique identifier returned by runReport .
209 Configuration Web Services • Reference Guide

--- PAGE 210 ---
Methods
Reports
getReportResultCsvResponse
Parameter Type Description
return string
Result of the report in CSV format. By default, the limit is
50,000 records.
isReportRunning
Checks whether a report is running and tracks changes in the status of a report. The
method returns the response as soon as the report is completed.
Important
To prevent this method from overloading the system, Five9 recommends
that you set the timeout parameter to at least five seconds. If report gen-
eration takes longer than the specified time-out, the method returns
True, and the client resends the method.
isReportRunning
Parameter Type Description
identifier string
Unique identifier returned by runReport .
timeout long
Required time in seconds to wait for changes before
returning the current state. If set to 0, this method
returns the result immediately. Cannot be empty. Long
polling.
isReportRunningResponse
Parameter Type Description
return boolean
Whether the report is running.
l
True: Report still being
generated.
l
False: Report generation
completed.
210 Configuration Web Services • Reference Guide

--- PAGE 211 ---
Methods
Session Information
runReport
Use this method to generate a report. Because the time to generate a report varies,
you need to follow up with isReportRunning until it returns false. If you omit this step,
the report that you retrieve may not contain all the data that you expect. When the
report is completely generated, retrieve the data with getReportResult or
getReportResultCsv .
To reduce network traffic when calling runReport, Five9 recommends that you limit the
criteria to a smaller time period to reduce the data returned. For example, to obtain
data for a year, split the time period into months or weeks to return smaller data
amounts instead of requesting one large report for an entire year.
runReport
Parameter Type Description
folderName string
Report category, such as Call Log
Reports . For more information, see the
Dashboards and Reports User’s Guide .
reportName string
Name of the report, such as Call Log .
criteria customReportCriteria
Filters used to generate the report.
runReportResponse
Parameter Type Description
return string
Identifier used to check the status of the report
( isReportRunning ) and to retrieve the results
( getReportResult ).
Session Information
closeSession
Closes the administrator’s session. The administrator can then log in to the VCC
Administrator application.
211 Configuration Web Services • Reference Guide

--- PAGE 212 ---
Methods
Skill Management
closeSession
Takes no parameters.
closeSessionResponse
Empty.
Skill Management
You can create, add, and modify skills, and obtain skill information. After you create
skills, you can assign them to users.
Important
Because methods to add, delete, and modify skills affect the per-
formance of the dialer, Five9 recommends that you use these methods
only during off-peak hours.
addSkillAudioFile
Version 9.5
Add audio files for the skill.
addSkillAudioFile
Parameter Type Description
skillName string
Skill name.
promptName string
Prompt name.
addSkillAudioFileResponse
Empty.
212 Configuration Web Services • Reference Guide

--- PAGE 213 ---
Methods
Skill Management
createSkill
Creates a skill. An exception is thrown if the skill already exists, if the limit number of
skills is reached, or if skill attributes are invalid.
createSkill
Parameter Type Description
skillInfo skillInfo
New skill information.
createSkillResponse
Parameter Type Description
return skillInfo
New skill information.
deleteSkill
Deletes a skill.
deleteSkill
Parameter Type Description
skillName string
Name of skill to be deleted.
deleteSkillResponse
Empty.
getSkill
Returns skill information: skill name, skill description, message of the day, and whether
skill voicemail messages are routed to agents.
getSkill
Parameter Type Description
skillName string
Name of skill.
213 Configuration Web Services • Reference Guide

--- PAGE 214 ---
Methods
Skill Management
getSkillResponse
Parameter Type Description
return getSkill
Skill information.
getSkillAudioFiles
Version 9.5
Gets a list of skill audio files.
getSkill
Parameter Type Description
skillName string
Name of skill.
getSkillResponse
Parameter Type Description
prompts string [0..unbounded]
List of files.
getSkillInfo
Returns detailed skill information about a skill.
getSkillInfo
Parameter Type Description
skillName string
Name of skill.
getSkillInfoResponse
Parameter Type Description
return skillInfo
Skill information.
214 Configuration Web Services • Reference Guide

--- PAGE 215 ---
Methods
Skill Management
getSkills
Returns information about each skill name that matches a pattern.
getSkills
Parameter Type Description
skillNamePattern string
Pattern of skill name. The skill name pattern is a
regular expression. If omitted or equal to an
empty string, all objects are returned.
getSkillsResponse
Parameter Type Description
return skill
Skill information for each skill that matches the
[0..unbounded]
pattern.
getSkillsInfo
Returns a list of users that possess the skill that matches a skill name pattern.
getSkillsInfo
Parameter Type Description
skillNamePattern string
Pattern of skill name. The skill name pattern is a
regular expression. If omitted or equal to an
empty string, all objects are returned.
getSkillsInfoResponse
Parameter Type Description
return skillInfo
Skill information for each skill that matches the
[0..unbounded]
pattern.
getSkillVoicemailGreeting
Returns the attributes of a prompt.
215 Configuration Web Services • Reference Guide

--- PAGE 216 ---
Methods
Skill Management
getSkillVoicemailGreeting
Parameter Type Description
skillName string
Name of skill with the specified voicemail greeting.
getSkillVoicemailGreetingResponse
Parameter Type Description
return base64Binary
Audio file that is the voicemail greeting of specified
skill. For more information, refer to the XML
definition.
modifySkill
Modifies an existing skill. An exception is thrown if the skill already exists or if the skill
attributes are invalid.
modifySkill
Parameter Type Description
skill skill
Name of skill to modify.
modifySkillResponse
Parameter Type Description
return skillInfo
Information about the modified skill.
removeSkillAudioFile
Version 9.5
Deletes a skill audio file.
216 Configuration Web Services • Reference Guide

--- PAGE 217 ---
Methods
Speed Dial Information
removeSkillAudioFile
Parameter Type Description
skillName string
Skill name.
promptName string
Prompt name.
removeSkillAudioFileResponse
Empty.
setSkillVoicemailGreeting
Uploads the audio file in WAV format provided by the Web Services user and associates
it with a skill to be played when no agents are available to take calls. If a voicemail
greeting already exists for the skill, it is replaced. For more information about the
supported WAV formats, refer to the Administrator’s Guide.
setSkillVoicemailGreeting
Parameter Type Description
skillName string
New prompt attributes.
wavFile base64Binary
Audio file that contains the recording. For more
information, refer to the XML definition.
setSkillVoicemailGreetingResponse
Empty.
Speed Dial Information
Version 10.2
You can add, retrieve, and remove numbers to speed dial.
217 Configuration Web Services • Reference Guide

--- PAGE 218 ---
Methods
Speed Dial Information
createSpeedDialNumber
Version 10.2
Adds a speed dial number.
createSpeedDialNumber
Parameter Type Description
code string
Code assigned to the telephone number to speed dial.
description string
Description for the number.
number string
Telephone number to dial.
createSpeedDialNumberResponse
Parameter Type Description
SpeedDialNumber speedDialNumber
Information about the speed dial
number.
getSpeedDialNumbers
Version 10.2
Returns a list of speed dial numbers.
getSpeedDialNumbers
Empty.
getSpeedDialNumbersResponse
Parameter Type Description
SpeedDialNumber speedDialNumber
Speed dial numbers.
[0..unbounded]
218 Configuration Web Services • Reference Guide

--- PAGE 219 ---
Methods
User Management
removeSpeedDialNumber
Version 10.2
Removes a speed dial number.
removeSpeedDialNumber
Parameter Type Description
code string
Code assigned to the number to speed dial.
removeSpeedDialNumberResponse
Empty.
User Management
You can create users, add and modify user attributes, and obtain user information.
createUser
Creates a user.
An exception is thrown if the user already exists, if the limit number of users is reached,
or if user attributes are invalid.
createUser
Parameter Type Description
userInfo userInfo
New user information.
createUserResponse
Parameter Type Description
return userInfo
New user information.
219 Configuration Web Services • Reference Guide

--- PAGE 220 ---
Methods
User Management
deleteUser
Deletes the specified user. An exception is thrown if the user does not exist.
Note: When you delete a user, all associated data, including voicemails,
recordings, and callbacks, will also be deleted, as indicated in the notification
from the platform before the user is deleted.
deleteUser
Parameter Type Description
userName string
Name of user to be deleted.
deleteUserResponse
Empty.
getUserGeneralInfo
No longer used. Use getUsersGeneralInfo instead.
getUserInfo
No longer used. Use getUsersInfo instead.
getUserVoicemailGreeting
Returns the user’s voicemail greeting.
getUserVoicemailGreeting
Parameter Type Description
userName string
Name of user who has the specified voicemail greeting.
220 Configuration Web Services • Reference Guide

--- PAGE 221 ---
Methods
User Management
getUserVoicemailGreetingResponse
Parameter Type Description
return base64Binary
Audio file that is the voicemail greeting of specified
user. For more information, refer to the XML
definition.
getUsersGeneralInfo
Returns general information about each user name that matches a pattern.
getUsersGeneralInfo
Parameter Type Description
userNamePattern string
Regular expression that describes the user name
pattern. If omitted or equal to an empty string, all
objects are returned. For example, a pattern may
be the first characters of the user name.
Warning
Five9 recommends that you specify a string for the user-
NamePattern parameter as part of the method to reduce the number
of objects processed and returned. If you do not specify a string, all user
objects are returned. Depending on the number of user objects, the
response time may result in performance degradation.
getUsersGeneralInfoResponse
Parameter Type Description
return userGeneralInfo
Information about each user name that matches
[0..unbounded]
the pattern.
getUsersInfo
Returns information about roles and skills of each user name that matches a pattern.
221 Configuration Web Services • Reference Guide

--- PAGE 222 ---
Methods
User Management
getUsersInfo
Parameter Type Description
userNamePattern string
Regular expression that describes the user name
pattern. If omitted or equal to an empty string, all
objects are returned. For example, a pattern may
be the first characters of the user’s name.
Warning
Five9 recommends that you specify a string for the user-
NamePattern parameter as part of the method to reduce the number
of objects processed and returned. If you do not specify a string, all user
objects are returned. Depending on the number of user objects, the
response time may result in performance degradation.
getUsersInfoResponse
Parameter Type Description
return userInfo
Information about each user name that matches
[0..unbounded]
the pattern.
modifyUser
Modifies the user’s attributes.
An exception is thrown if the user already exists, if the limit number of users is reached,
or if user attributes are invalid.
modifyUser
Parameter Type Description
userGeneralInfo userGeneralInfo
User information to modify.
rolesToSet userRoles
User roles to modify.
rolesToRemove userRoleType
User roles to remove.
[0..unbounded]
222 Configuration Web Services • Reference Guide

--- PAGE 223 ---
Methods
User Management
modifyUserResponse
Parameter Type Description
return userInfo
Modified user information.
modifyUserCannedReports
Updates the list of canned reports associated with a specific user. To get a list of the
user’s current canned reports, use getUsersInfo .
modifyUserCannedReports
Parameter Type Description
userName string
Name of user.
cannedReportsToAdd cannedReport
References to existing reports to
[0..unbounded]
associate with user.
cannedReportsToRemove string
Names of reports to disassociate
[0..unbounded]
from user.
modifyUserCannedReportsResponse
Parameter Type Description
return userInfo
Modified user information.
setUserVoicemailGreeting
Uploads the audio file in WAV format provided by the Web Services user and to play
the file when the user is not available to take calls. If a voicemail greeting already exists
for the user, it is replaced. For more information about the WAV formats supported by
the VCC, see the Administrator’s Guide.
setUserVoicemailGreeting
Parameter Type Description
userName string
Name of user.
wavFile base64Binary
File name.
223 Configuration Web Services • Reference Guide

--- PAGE 224 ---
Methods
User Management
setUserVoicemailGreetingResponse
Empty.
userSkillAdd
Adds a skill to a user.
Important
To prevent the userSkillAdd method from overloading the system, Five9
recommends that you set a sleep parameter of at least 3 seconds
between each request. Because this method affects the performance of
the dialer and uses significant database resources, use this method only
during off-peak periods.
userSkillAdd
Parameter Type Description
userSkill userSkill
Skill to be added.
userSkillAddResponse
Empty.
userSkillModify
Modifies a skill.
Important
To prevent the userSkillModify method from overloading the system,
Five9 recommends that you set a sleep parameter of at least 3 seconds
between each request. Because this method affects the performance of
the dialer and uses significant database resources, use this method only
during off-peak periods.
224 Configuration Web Services • Reference Guide

--- PAGE 225 ---
Methods
User Profiles
userSkillModify
Parameter Type Description
userSkill userSkill
Skill to be modified.
userSkillModifyResponse
Empty.
userSkillRemove
Deletes a skill.
Important
To prevent the userSkillRemove method from overloading the system,
Five9 recommends that you set a sleep parameter of at least 3 seconds
between each request. Because this method affects the performance of
the dialer and uses significant database resources, use this method only
during off-peak periods.
userSkillRemove
Parameter Type Description
userSkill userSkill
Skill to be deleted.
userSkillRemoveResponse
Empty.
User Profiles
User profiles simplify the task of configuring large numbers of users by enabling you to
assign the same permissions and skills to all members of a group.
225 Configuration Web Services • Reference Guide

--- PAGE 226 ---
Methods
User Profiles
createUserProfile
Creates a user profile with a set of users, roles, skills, and layout.
createUserProfile
Parameter Type Description
userProfile userProfile
Profile to be created.
createUserProfileResponse
Parameter Type Description
return userProfile
New profile.
deleteUserProfile
Deletes a user profile.
deleteUserProfile
Parameter Type Description
userProfileName string
Name of profile.
deleteUserProfileResponse
Empty.
getUserProfile
Returns information (users, roles, and skills) about a user profile. To obtain information
about several user profiles, use getUserProfiles .
getUserProfile
Parameter Type Description
userProfileName string
Name of profile.
226 Configuration Web Services • Reference Guide

--- PAGE 227 ---
Methods
User Profiles
getUserProfileResponse
Parameter Type Description
return userProfile
Profile information.
getUserProfiles
Returns a list of user profiles whose names match a string pattern.
getUserProfiles
Parameter Type Description
userProfileNamePatern string
Name of the profile or regular expression.
Note spelling.
For all user profiles, omit the parameter or
use this pattern: .*
getUserProfilesResponse
Parameter Type Description
return userProfile
List of user profiles.
[0..unbounded]
modifyUserProfile
Updates a user profile.
modifyUserProfile
Parameter Type Description
userProfile userProfile
Name of profile.
modifyUserProfileResponse
Empty.
227 Configuration Web Services • Reference Guide

--- PAGE 228 ---
Methods
VCC Configuration
modifyUserProfileSkills
Updates the skills of a user profile.
modifyUserProfileSkills
Parameter Type Description
userProfileName string
Name of profile.
addSkills string [0..unbounded]
List of skills to add.
removeSkills string [0..unbounded]
List of skills to remove.
modifyUserProfileSkillsResponse
Empty.
modifyUserProfileUserList
Updates the users of a user profile.
modifyUserProfileUserList
Parameter Type Description
userProfileName string
Name of profile.
addUsers string [0..unbounded]
List of users to add.
removeUsers string [0..unbounded]
List of users to remove.
modifyUserProfileUserListResponse
Empty.
VCC Configuration
Returns information about the Virtual Call Center and the Web Services API.
228 Configuration Web Services • Reference Guide

--- PAGE 229 ---
Methods
VCC Configuration
getApiVersions
Version 9.5
Returns the newest and oldest production versions of the API available to the user so
that the client can use the appropriate URL and methods.
getApiVersions
Contains no parameters.
getApiVersionsResponse
Parameter Type Description
return versions
Available versions of the API.
getVCCConfiguration
Returns the global settings.
getVCCConfiguration
Empty.
getVCCConfigurationResponse
Parameter Type Description
return vccConfiguration
Configuration of your VCC.
modifyVCCConfiguration
Updates the global settings of your Virtual Call Center.
modifyVCCConfiguration
Parameter Type Description
configuration vccConfiguration
Configuration of your VCC.
229 Configuration Web Services • Reference Guide

--- PAGE 230 ---
Methods
VCC Configuration
modifyVCCConfigurationResponse
Empty.
230 Configuration Web Services • Reference Guide

--- PAGE 231 ---
Exceptions
All error messages contain at least the message parameter, which is a string that
describes the exception. Some exceptions contain additional parameters, which are
described in the table.
Name Description
AccessDisallowedFault Your domain does not have access to the Five9
Configuration Web Services. To request access,
contact Five9 Support.
AddRecordToListFault
Version 3 Error with addRecordToListSimple
due to one of these reasons:
The following field(s) do not exist in the CRM
table: {0}
l
Sending email not supported in this release.
l
Mandatory field {0} missing.
l
There can be maximum of 64 CRM fields.
l
Number {0} must either be 10 digits for
dialing within North America or begin with
011 for International number.
l
Number {0} has to be less than or equal to 16
digit and greater than or equal to 10 digit.
l
List was not found.
l
Specified record already exist in the list.
l
At least one number should be specified for
new record.
l
No value provided for key {0}.
l
More than one record matches specified
criteria.
l
At least one key must be provided.
l
Time format must be provided along with
Time to Dial.
231 Configuration Web Services • Reference Guide

--- PAGE 232 ---
Exceptions
VCC Configuration
Name Description
l
Incorrect Time to Dial.
l
Incorrect key {0}. No such field.
l
Value of field {0} is too long.
l
Value of field {0} has incorrect format{1}.
l
Number of requests exceed maximum
allowed value: {0}.
l
The requested domain is disabled.
l
There is no resources for processing the
request at the moment. Please try to re-send
the request.
l
Domain wasn't found.
l
Error while executing request.
l
Unknown error {0}.
l
Error while executing SQL statement {0}.
l
Error while executing SQL statement {0} with
values {1}.
l
Error while processing Call ASAP and Time to
call parameters - service temporary
unavailable.
l
Error while loading external params.
AdminSessionClosedFault System error.
AllowedOnlyForPreviewCampaign
Incorrect dialing mode. Returned for the
Fault
preview-only manual dialing mode.
WrongDialingModeException :
Name Type Description
campaignName string Name of campaign.
CampaignAlreadyExistsFault
Attempting to create a campaign that already
exists or to rename a campaign to the name of a
campaign that already exists.
Name Type Description
campaignName string Name of campaign.
CampaignNotFoundFault
Campaign name does not exist in the Five9
configuration.
232 Configuration Web Services • Reference Guide

--- PAGE 233 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
campaignName string Name of campaign.
CampaignStateUpdateFault Campaign state cannot be updated, for
example: you cannot stop a campaign that is
not running.
Name Type Description
campaignName string Name of campaign.
details string Reason for the failure.
CantModifyObjectFault System error.
CommonCampaignFault
Common part of the campaign error.
Version 3
Name Type Description
campaignName string Name of campaign.
ConcurrentModificationFault
Specified object is already being modified by
another client.
CrmFieldNotFoundFault Specified contact database field cannot be
found in this domain.
Name Type Description
fieldName string Name of field.
DialProfileNotFoundFault
Undefined profile is specified when creating or
modifying an outbound campaign.
Name Type Description
profileName string Name of profile.
DispositionAlreadyExistsFault Attempting to create a disposition that already
exists or to rename a disposition to the name of
a disposition that already exists.
Name Type Description
dispositionName string Name of disposition.
DispositionIsAlreadyAssigned
Attempting to assign to a campaign a
Fault
disposition that has already been assigned to
DispositionAlreadyAssigned
the campaign.
Exception
Name Type Description
Note: The Fault name is campaignName string Name of campaign.
different from the Exception
Information about
dispositionName string
name.
current and requested
233 Configuration Web Services • Reference Guide

--- PAGE 234 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
disposition.
DispositionIsNotAssisgnedFault
Attempting to remove from a campaign a
disposition that is not assigned to that
DispositionIsNotAssigned
campaign.
Exception
Name Type Description
Note: The spelling of the campaignName string Name of campaign.
Fault is different from that of
dispositionName string Name of disposition.
the Exception.
DispositionNotAllowedFault
Attempting to add a disposition type that is not
allowed for a campaign.
Name Type Description
dispositionName string Name of disposition.
DispositionNotFoundFault
Attempting to get, remove, or rename a
disposition that does not exist in the domain.
Name Type Description
dispositionName string Name of disposition.
DNISAlreadyAssignedFault
If a DNIS number is already assigned to a user,
the DNISAlreadyAssignedFault saves the users
name in the campaignName field. To ensure
compatibility with existing API versions, we've
opted to keep the users name stored in this
location without altering the API. Campaign and
user name may be distinguished via the fault
message: 'DNIS "DDD" already assigned to
campaign "CCC"' or 'DNIS "DDD" already
assigned to user "UUU"'.
Name Type Description
campaignName string Name of campaign.
dnis string DNIS number.
DNISIsNotAssignedFault
DNIS is not assigned to a campaign.
Name Type Description
campaignName string Name of campaign.
dnis string DNIS number.
DNISNotFoundFault
DNIS cannot be found in the domain.
234 Configuration Web Services • Reference Guide

--- PAGE 235 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
dnis string DNIS number.
ExecutionRestrictionFault
Processing error.
ExtensionAlreadyInUseFault
Extension already assigned to another user.
Name Type Description
ext string 4-digit extension.
ExtensionsOutOfRangeFault
Number of digits in the users’ extension is out of
Version 9.5
the allowed range.
Name Type Description
string
Name of cam-
campaignName
paign.
[0..unbounded]
string
List of user
userNames
names.
[0..unbounded]
FinderException Object cannot be found.
ImportCancelledFault
Import operation was canceled.
ImportInProgressFault
Campaign cannot be deleted because data is
being imported into this campaign or into a list
associated with this campaign
ImportSizeLimitExceededFault Request exceeds maximum number of records
ImportRecordsCountLimit allowed.
ExceededException
Name Type Description
Maximum number of
Note: The name of the fault
limit int
records allowed.
is different from that of the
Number of records in the
exception.
recordsCount int
request.
IncorrectArgumentFault
Request contains incorrect argument name or
value, or non-parameterized scripts contain
parameters.
InternalImportFault
All requests that trigger a data import process
may experience an internal import fault.
Resubmit the request.
InvalidAccountFault
Invalid account regardless of the reason,
including password and security questions
issues. May be returned by the createUser and
modifyUser methods.
235 Configuration Web Services • Reference Guide

--- PAGE 236 ---
Exceptions
VCC Configuration
Name Description
InvalidDateRangeFault
Invalid date range. Start date and time must
precede end date and time.
Name Type Description
end dateTime End time of range.
start dateTime Start time of range.
InvalidImportDataFault
Incorrectly formatted source data for import
operations.
InvalidRegexpPatternFault
Incorrectly formed regular expression used for
data lookup.
Name Type Description
pattern string Invalid regular expression.
InvalidUserDataFault
Error in data provided to create or update user.
IvrScriptOwnershipNotFoundFaul
Attempting to create or modify an IVR script
t
with invalid ownership information.
Version 10
IvrScriptNotFoundFault
Attempting to create or modify a campaign with
an IVR script that does not exist.
Name Type Description
ivrScriptName string Name of IVR script.
ListAlreadyAssignedFault
List already assigned to this campaign.
Name Type Description
campaignName string Name of campaign.
listName string Name of list.
ListAlreadyExistsFault
List name already in use.
Name Type Description
listName string Name of list.
ListCantBeRemovedFault
Attempting to delete a list that is in use.
Name Type Description
listName string Name of list.
ListIsNotAssignedFault
Attempting to modify or remove a list that is not
assigned to the campaign.
Name Type Description
campaignName string Name of campaign.
236 Configuration Web Services • Reference Guide

--- PAGE 237 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
listName string Name of list.
ListNotFoundFault
Attempting to modify a list that does not exist.
Name Type Description
listName string Name of list.
LocaleNotFoundFault
Unable to find the contact’s locale.
Version 9.5
Name Type Description
localeName string Name of locale.
LogoutReasonCodeNotFoundFault No reason codes of type logout exist with the
name provided.
Removed from Version 10
Name Type Description
Name of reason
reasonCodeName string
code.
MaxPlayFileCountForSkill
Number of audio files for the skill has been
ExceededFault
exceeded.
Version 9.5
Name Type Description
skillName string Name of skill.
MissedArgumentFault
Required argument is missing from the request.
MissedOsLoginFault
Do not use.
NotReadyReasonCodeNotFoundFaul
No Not Ready reason code with that name
t
exists.
Removed from Version 10
Name Type Description
Name of reason
reasonCodeName string
code.
ObjectAlreadyExistsFault
Object with the same name already exists.
Name Type Description
id long Object ID.
Name of
objectName string
object.
objectType wsObjectType Type of data.
ObjectInUseFault
Requested object is currently being used.
237 Configuration Web Services • Reference Guide

--- PAGE 238 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
id long Object ID.
Name of
objectName string
object.
wsObjectType
objectType Type of data.
ObjectNotFoundFault
Requested object does not exist.
Name Type Description
id long Object ID.
Name of
objectName string
object.
objectType wsObjectType Type of data.
ObjectsCountLimitExceededFault
Maximum count for this type of object for your
domain has been reached.
Name Type Description
id long Object ID.
Limit that has
limit int
been reached.
Name of
objectName string
object.
wsObjectType
objectType Type of data.
OperationsLimitExceededFault
Maximum number of Web Services requests for
the 24-hour period has been exceeded.
Name Type Description
Maximum number of
limit long
requests.
operationType string Type of operation.
ParseException
Error found during parsing.
Name Type Description
errorOffset int Location of the error.
PromptAlreadyExistsFault
Attempting to create a prompt that already
exists.
Name Type Description
promptName string Name of prompt.
PromptCantBeDeletedFault
Attempting to delete a prompt that is currently
238 Configuration Web Services • Reference Guide

--- PAGE 239 ---
Exceptions
VCC Configuration
Name Description
in use.
Name Type Description
promptName string Name of prompt.
PromptNotFoundFault
Attempting to create or modify a campaign that
requires a prompt.
Name Type Description
promptName string Name of prompt.
ReasonCodeCountLimitExceeded
Limit for the number of reason codes in a
Fault
domain has been reached.
Name Type Description
Name of reason
reasonCodeName string
code.
ReasonCodeNotFoundFault
No reason code of that name exists.
Name Type Description
Name of reason
reasonCodeName string
code.
ReportNotFoundFault
Report with that name and category does not
exist.
Name Type Description
folder string Category of report.
reportName string Name of report.
ResultIsNotReadyFault
Operation in progress has not been completed.
To check status, use isImportRunning or
isReportRunning .
ScheduleNotFoundFault
FTP schedule was not found.
Name Type Description
scheduleName string Name of schedule.
ScheduleOperationFailedFault
Attempt to schedule FTP event failed.
Name Type Description
Enumeratio
operationTyp
operation n of type
e
string.
sched- Name of
string
uleName schedule.
239 Configuration Web Services • Reference Guide

--- PAGE 240 ---
Exceptions
VCC Configuration
Name Description
ServerFault
Web Services server error.
ServiceUnavailableFault
Web Services are not available.
SessionClosedFault
Session closed while the request is executed
because another session is started concurrently
with the same credentials.
SkillAlreadyAssignedFault
Attempting to assign to a campaign a skill
already assigned to the campaign.
Name Type Description
campaignName string Name of campaign.
SkillAlreadyExistsFault
Attempting to create a skill with a name that
already exists.
Name Type Description
skillName string Name of skill.
SkillCantBeDeletedFault
Attempting to delete a skill used in other
objects.
Name Type Description
skillName string Name of skill.
SkillIsNotAssignedFault
Attempting to remove or modify a skill that is
not assigned to that campaign.
Name Type Description
campaignName string Name of campaign.
skillName string Name of skill.
SkillNotFoundFault
Requested skill cannot be found.
Name Type Description
skillName string Name of skill.
TooManyExtensionsFault
Number of extensions has exceeded the
maximum allowed.
TooManyItemsFault
Number of items has exceeded the maximum
allowed.
TooManyUsersFault
Number of users has exceeded the maximum
allowed. Returned by createUser .
TtsGenerationFailed Audio file for the TTS prompt cannot be created.
Note: Fault is absent from
240 Configuration Web Services • Reference Guide

--- PAGE 241 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
the name of the Exception.
promptName string Name of prompt.
UnknownIdentifierFault
Unknown identifier of import operation is
requested.
UserAlreadyExistsFault
Attempting to create a user with a name that
already exists.
Name Type Description
userName string Name of user.
UserAlreadyHasSkillFault
User already has the specified skill.
Name Type Description
skillName string Name of skill.
userName string Name of user.
UserAlreadyLoggedInFault
User ID is already logged in.
UserCantBeDeletedFault
User name cannot be deleted because it is used
in other objects.
Name Type Description
userName string Name of user.
UserDoesntHaveSkillFault
User does not have the specified skill.
Name Type Description
skillName string Name of skill.
userName string Name of user.
UserHasNoRequiredRoleFault User being added to agent group does not have
UserHasNoRequiredRolesExceptio the required agent or supervisor role.
n
Name Type Description
userRoleType
Note: The spelling of the
roles Types of roles.
[0..unbounded]
Fault is different from that of
the Exception. userName string Name of user.
UserNotFoundFault
User not found.
Name Type Description
userName string Name of user.
WavFileUploadFailedFault WAV file upload failed when attempting to
create or modify prompt.
241 Configuration Web Services • Reference Guide

--- PAGE 242 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
promptName string Name of prompt.
WrongCampaignStateFault
Requesting a campaign that is not in the correct
state. For example, attempting to delete, reset,
or rename a campaign or dispositions while the
campaign is running.
Name Type Description
campaignStat Specified
actualState
e state.
cam- Name of
string
paignName campaign.
Campaign
campaignStat state that
desiredState
e should be
specified.
WrongCampaignTypeFault
Incorrect campaign type. For example,
outbound campaign requests should contain
types that apply to outbound campaigns.
Name Type Description
Specified
actualType campaignType campaign
type.
Name of
campaignName string
campaign.
Campaign
desiredType campaignType types to
specify.
WrongListDialingModeFault
Incorrect dialing mode.
WrongListDialingModeFault
Name Type Description
Version 4
campaignName string Name of campaign.
WrongPromptTypeFault
Specified prompt type is incorrect.
Name Type Description
Specified
promptType
actualType
prompt type.
242 Configuration Web Services • Reference Guide

--- PAGE 243 ---
Exceptions
VCC Configuration
Name Description
Name Type Description
Prompt type to
desiredType promptType
specify.
Name of
promptName string
prompt.
243 Configuration Web Services • Reference Guide

--- PAGE 244 ---
Examples
This contains an example request and response pair for these methods:
XML Examples
PHP Example
XML Examples
addToListCsv
addRecordToList
asyncAddRecordsToList
deleteFromContacts
runReport
addToListCsv
Request
listUpdateSettings , highlighted in blue, extends basicImportSettings , highlighted
in red.
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:addToListCsv>
<listName>hotleadslist</listName>
<listUpdateSettings>
<fieldsMapping>
<columnNumber>1</columnNumber>
<fieldName>number1</fieldName>
<key>true</key>
</fieldsMapping>
<fieldsMapping>
<columnNumber>2</columnNumber>
<fieldName>first_name</fieldName>
244 Configuration Web Services • Reference Guide

--- PAGE 245 ---
Examples
XML Examples
<key>false</key>
</fieldsMapping>
<fieldsMapping>
<columnNumber>3</columnNumber>
<fieldName>last_name</fieldName>
<key>false</key>
</fieldsMapping>
<reportEmail>admin@yourcompany.com</reportEmail>
<separator>,</separator>
<skipHeaderLine>true</skipHeaderLine>
<cleanListBeforeUpdate>false</cleanListBeforeUpdate>
<crmAddMode>ADD_NEW</crmAddMode>
<crmUpdateMode>UPDATE_ALL</crmUpdateMode>
<listAddMode>ADD_ALL</listAddMode>
</listUpdateSettings>
<csvData>number1,first_name,last_name</csvData>
</ser:addToListCsv>
</env:Body>
</env:Envelope>
Response
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:addToListCsvResponse>
<return>
<identifier>0a2c9316-1a68-4be1-b817-c885326018c6
</identifier>
</return>
</ser:addToListCsvResponse>
</env:Body>
</env:Envelope>
addRecordToList
Request
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:addRecordToList>
<listName>some_list_name</listName>
<listUpdateSettings>
245 Configuration Web Services • Reference Guide

--- PAGE 246 ---
Examples
XML Examples
<fieldsMapping>
<columnNumber>1</columnNumber>
<fieldName>number1</fieldName>
<key>true</key>
</fieldsMapping>
<fieldsMapping>
<columnNumber>2</columnNumber>
<fieldName>first_name</fieldName>
<key>false</key>
</fieldsMapping>
<fieldsMapping>
<columnNumber>3</columnNumber>
<fieldName>last_name</fieldName>
<key>false</key>
</fieldsMapping>
<separator>,</separator>
<skipHeaderLine>false</skipHeaderLine>
<callNowMode>ANY</callNowMode>
<cleanListBeforeUpdate>false</cleanListBeforeUpdate>
<crmAddMode>ADD_NEW</crmAddMode>
<crmUpdateMode>UPDATE_FIRST</crmUpdateMode>
<listAddMode>ADD_FIRST</listAddMode>
</listUpdateSettings>
<record>
<fields>5551208111</fields>
<fields>John</fields>
<fields>Smith</fields>
</record>
</ser:addRecordToList>
</env:Body>
</env:Envelope>
Response
listImportResult , highlighted in blue, extends basicImportResults , highlighted in
red.
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:addRecordToListResponse>
<return>
<uploadDuplicatesCount>0</uploadDuplicatesCount>
<uploadErrorsCount>0</uploadErrorsCount>
<warningsCount/>
<crmRecordsInserted>0</crmRecordsInserted>
<crmRecordsUpdated>1</crmRecordsUpdated>
246 Configuration Web Services • Reference Guide

--- PAGE 247 ---
Examples
XML Examples
<listName>some_list_name</listName>
<listRecordsDeleted>0</listRecordsDeleted>
<listRecordsInserted>0</listRecordsInserted>
</return>
</ser:addRecordToListResponse>
</env:Body>
</env:Envelope>
asyncAddRecordsToList
Request
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:asyncAddRecordsToList>
<listName>asdf</listName>
<listUpdateSettings>
<fieldsMapping>
<columnNumber>1</columnNumber>
<fieldName>number1</fieldName>
<key>true</key>
</fieldsMapping>
<fieldsMapping>
<columnNumber>2</columnNumber>
<fieldName>first_name</fieldName>
<key>false</key>
</fieldsMapping>
<callTimeColumnNumber>3</callTimeColumnNumber>
<crmAddMode>ADD_NEW</crmAddMode>
<callNowMode>ANY</callNowMode>
<crmUpdateMode>UPDATE_FIRST</crmUpdateMode>
<listAddMode>ADD_IF_SOLE_CRM_MATCH</listAddMode>
</listUpdateSettings>
<importData>
<values>
<item>6665554499</item>
<item>George</item>
<item>1341957101000</item>
</values>
<values>
<item>9995554499</item>
<item>Ringo</item>
<item>1341957500000</item>
</values>
247 Configuration Web Services • Reference Guide

--- PAGE 248 ---
Examples
XML Examples
</importData>
</ser:asyncAddRecordsToList>
</env:Body>
</env:Envelope>
Response
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:asyncAddRecordsToListResponse>
<return>
<identifier>some_string</identifier>
</return>
</ser:addRecordToListResponse>
</env:Body>
</env:Envelope>
deleteFromContacts
Request
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:deleteFromContacts>
<crmDeleteSettings>
<fieldsMapping>
<columnNumber>1</columnNumber>
<fieldName>number2</fieldName>
<key>true</key>
</fieldsMapping>
<reportEmail>admin@yourcompany.com</reportEmail>
<separator>,</separator>
<skipHeaderLine>false</skipHeaderLine>
<crmDeleteMode>DELETE_ALL</crmDeleteMode>
</crmDeleteSettings>
<importData>
<values>
<item>4155551234</item>
</values>
<values>
<item>5552654455</item>
</values>
248 Configuration Web Services • Reference Guide

--- PAGE 249 ---
Examples
XML Examples
</importData>
</ser:deleteFromContacts>
</env:Body>
</env:Envelope>
Response
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:ser="http://service.admin.ws.five9.com/">
<env:Header/>
<env:Body>
<ser:deleteFromContactsResponse>
<return>
<identifier>91d4fb84-223f-49b9-8a12-c91484bc5c78
</identifier>
</return>
</ser:deleteFromContactsResponse>
</env:Body>
</env:Envelope>
runReport
This example contains multiple <criteria> objects.
Request
<env:Envelope xmlns:xsd="http://www.w3.org/2001/XMLSchema"
xmlns:xsi="http://www.w3.org/2001/
XMLSchema-instance"
xmlns:tns="http://service.admin.ws.five9.com/"
xmlns:env="http://schemas.xmlsoap.org/soap/
envelope/"
xmlns:ins0="http://jaxb.dev.java.net/array">
<env:Body>
<tns:runReport>
<folderName>Shared Reports</folderName>
<reportName>Test Report</reportName>
<criteria>
<time>
<start>2019-04-16T20:22:17.173</start>
<end>2019-05-08T02:37:42.4786435-05:00</end>
</time>
<reportObjects>
<objectNames>Test Campaign1</objectNames>
<objectNames>Test Campaign2</objectNames>
<objectType>Campaign</objectType>
249 Configuration Web Services • Reference Guide

--- PAGE 250 ---
Examples
PHP Example
</reportObjects>
</criteria>
</tns:runReport>
</env:Body>
</env:Envelope>
Response
<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
<env:Header/>
<env:Body>
<ns2:runReportResponse
xmlns:ns2="http://service.admin.ws.five9.com/">
<return>E0F0BC9A5544767BBrt0.c.ie.oA6DAA@
7p90E4Bs7lCf4v49BcAm
</return>
</ns2:runReportResponse>
</env:Body>
</env:Envelope>
PHP Example
<?php
echo "Begin<br/><br/>";
// Import the WSDL and authenticate the user.---------------------------
--
$wsdl_five9 = "https://api.five9.com/wsadmin/< API version >/Ad-
minWebService?wsdl&user=< Five9username >";
try
{
$soap_options = array( 'login' => ' Five9username ', 'password' =>
' Five9password ', 'trace' => true );
$client_five9 = new SoapClient( $wsdl_five9 , $soap_options );
}
catch (Exception $e)
{
$error_message = $e->getMessage();
echo $error_message;
}
250 Configuration Web Services • Reference Guide

--- PAGE 251 ---
Examples
PHP Example
//---------------initiate import (asyncAddRecordsToList)----------------
-
$listUpdateSettings = array ( "fieldsMapping" => array (
array ( "columnNumber" => '1', "fieldName" => "num-
ber1", "key" => true ),
array ( "columnNumber" => '2', "fieldName" =>
"first_name", "key" => false ),
array ( "columnNumber" => '3', "fieldName" =>
"last_name", "key" => false) ),
"reportEmail" => "email@email.com",
"separator" => ',',
"skipHeaderLine" => false,
"callNowMode" => "ANY", //optional
"callNowColumnNumber" => 4, //optional
"cleanListBeforeUpdate" => false,
"crmAddMode" => "ADD_NEW",
"crmUpdateMode" => "UPDATE_SOLE_MATCHES",
"listAddMode" => "ADD_IF_SOLE_CRM_MATCH" );
$data = array ( array ( "5555776754" , "Don" , "Draper", "YES" ),
array ( "5551112244" , "Betty" , "Smith", "NO" ));
$xml_data = array ('listName' => "asdf", 'listUpdateSettings' => $listUp-
dateSettings, 'importData' => $data); //request parameters
$result = $client_five9->asyncAddRecordsToList($xml_data);
$variables = get_object_vars($result);
$resp = get_object_vars($variables['return']);
$identifier = $resp['identifier']; //the ID for the import
//echo $identifier;
//-------check progress of import (isImportRunning)---------------------
-
$import_running = true;
$IIR_p = array('identifier'=>array('identifier'=>$identifier),
'waitTime'=>10);
while($import_running)
{
try
{
$IIR_result = $client_five9->isImportRunning($IIR_p);
prevent multiple calls within a second
$variables = get_object_vars($IIR_result);
// to prevent multiple calls within a second
sleep (1);
$import_running = $variables['return'];
}
catch (Exception $e)
251 Configuration Web Services • Reference Guide

--- PAGE 252 ---
Examples
PHP Example
{
$error_message = $e->getMessage();
echo $error_message;
}
}
//------get result (getListImportResult)--------------------------------
-
try
{
$GLIR_p = array('identifier'=>array('identifier'=>$identifier));
$GLIR_result = $client_five9->getListImportResult($GLIR_p);
print_r($GLIR_result);
}
catch (Exception $e)
{
$error_message = $e->getMessage();
echo $error_message;
}
echo "<br/><br/>";
echo "END";
?>
252 Configuration Web Services • Reference Guide

